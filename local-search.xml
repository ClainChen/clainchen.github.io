<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>《Redis设计与实现》 哨兵机制 Sentinel</title>
    <link href="/2025/08/29/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E5%93%A8%E5%85%B5%E6%9C%BA%E5%88%B6%20Sentinel/"/>
    <url>/2025/08/29/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E5%93%A8%E5%85%B5%E6%9C%BA%E5%88%B6%20Sentinel/</url>
    
    <content type="html"><![CDATA[<h1>哨兵 Sentinel</h1><div class="note note-info">            <p>哨兵是Redis高可用性解决方案：由一个或多个哨兵实例组成的哨兵系统可以监视任意多个主服务器，并在被监视的主服务器进入下限状态时，自动将下线的主服务器属下的某个从服务器升级为新的主服务器，然后由新的主服务器代替已下线的主服务器继续处理命令请求。</p>          </div><h1>启动并初始化哨兵</h1><p>以下两种命令都可以启动一个哨兵：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cmd">#<span class="hljs-number">1</span><br>redis-sentinel /<span class="hljs-built_in">path</span>/to/your/sentinel.conf<br><br>#<span class="hljs-number">2</span><br>redis-server /<span class="hljs-built_in">path</span>/to/your/sentinel.conf --sentinel<br></code></pre></td></tr></table></figure><p>这两个命令的效果完全相同。</p><p>当一个哨兵启动时，它需要执行以下步骤：</p><ul><li>初始化服务器<ul><li>哨兵实际上就是一个在特殊模式下运行的Redis服务器，因此，第一件事就是初始化一个普通的Redis服务器。然后再对这个服务器做后续操作。</li><li>初始化普通Redis服务器时不会进行任何的RDB或AOF数据恢复。因为哨兵服务器中不存在数据库。</li></ul></li><li>将普通Redis服务器使用的代码替换成哨兵专用代码<ul><li>创建普通的Redis服务器后，要将里面的代码替换为哨兵用的代码。</li><li>替换代码有客户端允许发送的命令：原先的<code>GET, SET</code>等对数据库进行操作的命令都不再有效</li><li>还会替换默认的端口号等等常量值</li></ul></li><li>初始化哨兵状态<ul><li>程序里会初始化一个哨兵结构</li></ul></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sentinelState</span> &#123;</span><br><br>    <span class="hljs-comment">// 当前纪元，用于实现故障转移</span><br>    <span class="hljs-type">uint64_t</span> current_epoch;<br><br>    <span class="hljs-comment">// 保存了所有被这个 sentinel 监视的主服务器</span><br>    <span class="hljs-comment">// 字典的键是主服务器的名字</span><br>    <span class="hljs-comment">// 字典的值则是一个指向 sentinelRedisInstance 结构的指针</span><br>    dict *masters;<br><br>    <span class="hljs-comment">// 是否进入了 TILT 模式？</span><br>    <span class="hljs-type">int</span> tilt;<br><br>    <span class="hljs-comment">// 目前正在执行的脚本的数量</span><br>    <span class="hljs-type">int</span> running_scripts;<br><br>    <span class="hljs-comment">// 进入 TILT 模式的时间</span><br>    <span class="hljs-type">mstime_t</span> tilt_start_time;<br><br>    <span class="hljs-comment">// 最后一次执行时间处理器的时间</span><br>    <span class="hljs-type">mstime_t</span> previous_time;<br><br>    <span class="hljs-comment">// 一个 FIFO 队列，包含了所有需要执行的用户脚本</span><br>    <span class="hljs-built_in">list</span> *scripts_queue;<br><br>&#125; sentinel;<br><br></code></pre></td></tr></table></figure><ul><li>根据给定的配置文件，初始化哨兵的监视主服务器列表（初始化<code>*master</code>属性）<ul><li><code>master</code>属性的配置就被存放在<code>sentinel.conf</code>配置文件中</li><li>配置文件中每一个对应的<code>master</code>定义都会为哨兵初始化一个<code>sentinelRedisInstance</code>结构</li></ul></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sentinelRedisInstance</span> &#123;</span><br><br>    <span class="hljs-comment">// 标识值，记录了实例的类型，以及该实例的当前状态</span><br>    <span class="hljs-type">int</span> flags;<br><br>    <span class="hljs-comment">// 实例的名字</span><br>    <span class="hljs-comment">// 主服务器的名字由用户在配置文件中设置</span><br>    <span class="hljs-comment">// 从服务器以及 Sentinel 的名字由 Sentinel 自动设置</span><br>    <span class="hljs-comment">// 格式为 ip:port ，例如 &quot;127.0.0.1:26379&quot;</span><br>    <span class="hljs-type">char</span> *name;<br><br>    <span class="hljs-comment">// 实例的运行 ID</span><br>    <span class="hljs-type">char</span> *runid;<br><br>    <span class="hljs-comment">// 配置纪元，用于实现故障转移</span><br>    <span class="hljs-type">uint64_t</span> config_epoch;<br><br>    <span class="hljs-comment">// 实例的地址</span><br>    sentinelAddr *addr;<br><br>    <span class="hljs-comment">// SENTINEL down-after-milliseconds 选项设定的值</span><br>    <span class="hljs-comment">// 实例无响应多少毫秒之后才会被判断为主观下线（subjectively down）</span><br>    <span class="hljs-type">mstime_t</span> down_after_period;<br><br>    <span class="hljs-comment">// SENTINEL monitor &lt;master-name&gt; &lt;IP&gt; &lt;port&gt; &lt;quorum&gt; 选项中的 quorum 参数</span><br>    <span class="hljs-comment">// 判断这个实例为客观下线（objectively down）所需的支持投票数量</span><br>    <span class="hljs-type">int</span> quorum;<br><br>    <span class="hljs-comment">// SENTINEL parallel-syncs &lt;master-name&gt; &lt;number&gt; 选项的值</span><br>    <span class="hljs-comment">// 在执行故障转移操作时，可以同时对新的主服务器进行同步的从服务器数量</span><br>    <span class="hljs-type">int</span> parallel_syncs;<br><br>    <span class="hljs-comment">// SENTINEL failover-timeout &lt;master-name&gt; &lt;ms&gt; 选项的值</span><br>    <span class="hljs-comment">// 刷新故障迁移状态的最大时限</span><br>    <span class="hljs-type">mstime_t</span> failover_timeout;<br><br>    <span class="hljs-comment">// ...</span><br><br>&#125; sentinelRedisInstance;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sentinelAddr</span> &#123;</span><br><br>    <span class="hljs-type">char</span> *ip;<br><br>    <span class="hljs-type">int</span> port;<br><br>&#125; sentinelAddr;<br><br></code></pre></td></tr></table></figure><ul><li>创建连向主服务器的网络连接<ul><li>对监视的每一个主服务器，哨兵都会建立一个网络链接。哨兵会成为这些主服务器的客户端，以能够发送命令且接受消息。</li><li>对于每一个被哨兵监视的主服务器来说，哨兵都会建立两个连向主服务器的异步连接：<ul><li>命令连接，用于发送命令和接收命令回复</li><li>订阅连接，用于订阅主服务器的<code>__sentinel__.hello</code>频道</li></ul></li><li><strong>订阅连接是做什么用的？</strong><ul><li>Redis目前的发布订阅功能中，发送信息都不会被保存到Redis服务器中，如果在信息发送时，想要接受信息的客户端不在线或断线，则这个客户端将会丢失这条消息。因此，哨兵的订阅就是为了不丢失<code>__sentinel__.hello</code>频道的任何信息。</li></ul></li></ul></li></ul><h1>获取各个服务器的信息</h1><p>哨兵获取各个服务器信息的方式是一种十分拓扑的方式。书中讲的非常细致，但这里我主要总结一下流程：</p><ul><li><p>哨兵每隔十秒钟用命令连接向自己监视的所有主服务器发送一次<code>INFO</code>命令，并通过分析回复信息来获取每隔主服务器当前的信息</p><ul><li><p>主服务器通常会返回两方面的信息：</p><ul><li>主服务器本身的信息</li><li>主服务器属下所有从服务器信息</li></ul></li><li><p>收到的主服务器信息会用于更新哨兵中的这个主服务器的实例结构</p></li><li><p>收到的从服务器信息会用于更新哨兵中的这个主服务器的从服务器字典</p></li></ul></li></ul><p>类似以下内容：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span> Server<br>...<br>run<span class="hljs-built_in">_</span>id:7611c59dc3a29aa6fa0609f841bb6a1019008a9c<br>...<br><span class="hljs-params">#</span> Replication<br>role:master <span class="hljs-params">#</span> 代表消息来自于主服务器<br>...<br><span class="hljs-params">#</span> 代表三个从服务器信息<br>slave0:ip=127.0.0.1,port=11111,state=online,offset=43,lag=0<br>slave1:ip=127.0.0.1,port=22222,state=online,offset=43,lag=0<br>slave2:ip=127.0.0.1,port=33333,state=online,offset=43,lag=0<br>...<br><span class="hljs-params">#</span> Other sections<br>...<br><br></code></pre></td></tr></table></figure><ul><li>当哨兵发现了新的从服务器（来自于主服务器返回的从服务器信息，并基于观察这个从服务器是否在之前就存在于这个主服务器中）是，将会与这个从服务器建立命令连接和订阅连接。目的与连接主服务器相同。<ul><li>如果这个从服务器也是其他服务器的主服务器，则会继续进行更新。</li></ul></li><li>哨兵每隔十秒钟也会向所有从服务器发送一次<code>INFO</code>命令，返回的信息也会被用于更新从服务器的实例结构。</li></ul><p>类似以下内容：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span> Server<br>...<br>run<span class="hljs-built_in">_</span>id:32be0699dd27b410f7c90dada3a6fab17f97899f <span class="hljs-params">#</span> 选举时也可能会用到<br>...<br><span class="hljs-params">#</span> Replication<br>role:slave <span class="hljs-params">#</span> 代表消息来自于从服务器<br>master<span class="hljs-built_in">_</span>host:127.0.0.1<br>master<span class="hljs-built_in">_</span>port:6379<br>master<span class="hljs-built_in">_</span>link<span class="hljs-built_in">_</span>status:up <span class="hljs-params">#</span> 这个很重要，在后面选新主服务器时会用到<br>slave<span class="hljs-built_in">_</span>repl<span class="hljs-built_in">_</span>offset:11887<br>slave<span class="hljs-built_in">_</span>priority:100 <span class="hljs-params">#</span> 这个也很重要，选举时也会用到<br><span class="hljs-params">#</span> Other sections<br>...<br><br></code></pre></td></tr></table></figure><ul><li>哨兵每隔两秒钟会向所有监视的主服务器和从服务器发送命令：<code>PUBLISH __sentinel__:hello &quot;&lt;s_ip&gt;,&lt;s_port&gt;,&lt;s_runid&gt;,&lt;s_epoch&gt;,&lt;m_name&gt;,&lt;m_ip&gt;,&lt;m_port&gt;,&lt;m_epoch&gt;&quot;</code><ul><li>命令中包含了该哨兵的一些信息和该哨兵监视下的主服务器信息<ul><li>如果是发送给从服务器，则是包含该从服务器正在复制的主服务器信息</li></ul></li></ul></li><li>接受来自主服务器和从服务器的频道信息：哨兵在建立起订阅连接之后，便会向连接服务器发送命令<code>SUBSCRIBE __sentinel__:hello</code><ul><li>对这个频道的订阅会持续到哨兵与该服务器的连接断开为止</li><li><strong>可以注意到一点，由于之前说了哨兵会每隔两秒向所有主从服务器发送发布消息，因此，Redis可以使用这个机制，来让哨兵接受到其他连接了同一个服务器的哨兵的订阅消息。而订阅消息里面又有发布消息的哨兵的信息，因此，哨兵可以通过这个性质来相互建立连接。</strong></li><li>哨兵会持续维护自己监视中的所有主服务器的哨兵字典，以在每一次收到订阅消息时，判断是否要更新对应的哨兵结构，还是要创建一个新的哨兵结构并放进对应的字典中。</li></ul></li><li>连接其他哨兵服务器时只会建立命令连接而不会有订阅连接。</li></ul><p>至此，就完成了获取服务器信息并维护对各个服务器的连接操作。</p><h1>检查下线状态的机制</h1><h2 id="主观下线状态">主观下线状态</h2><p>哨兵会对所有建立了命令连接的实例每秒发送一次<code>PING</code>命令，并通过实例返回的<code>PING</code>命令回复来判断实例是否在线。回复仅可能有以下两种情况：</p><ul><li>有效回复：实例返回<code>+PONG, -LOADING, -MASTERDOWN</code>三种回复的其中一种</li><li>无效回复：除有效回复外的其他回复，或者指定时限内没有任何回复</li></ul><p>对于这个<strong>指定时限</strong>，哨兵配置文件中的<code>down-after-milliseconds</code>选项指定了这个时限。如果一个实例在这个时限内连续相哨兵返回无效回复，那么哨兵将在这个实例结构中的<code>flags</code>属性打开<code>SRI_S_DOWN</code>标识，以标识这个实力已经进入主观下线状态。</p><div class="note note-info">            <p>用户设置的<code>down_after_milliseconds</code>选项的值，会被同时用于判断所有连接于这个哨兵的其他所有服务器的主观下线状态。当然，都说是主观下线状态了，因此这个状态也只是这个哨兵认为的而已。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tex">sentinel monitor master 127.0.0.1 6379 2<br>sentinel down-after-milliseconds master 50000<br></code></pre></td></tr></table></figure><p>这个配置代表了如果有任意一个服务器在<code>50000</code>毫秒之内持续给这个哨兵发送无效回复，那么这个哨兵便会将其视为主观下线。</p><p>如果有另一个哨兵将这个值设得更大，那么另一个哨兵则不见得也会将其视为主观下线。</p>          </div><h2 id="客观下线状态">客观下线状态</h2><p>哨兵如何判断一个主服务器是否是真的下线了？其实逻辑很简单：<strong>哨兵会向所有监视这个主服务器的哨兵进行询问，看他们是否也认为这个主服务器进入了下线状态。如果收到肯定的答复足够多，则这个哨兵会将这个主服务器视为客观下线，并且执行故障转移操作</strong></p><ul><li>当一个哨兵认为一个主服务器进入了主观下线状态时，会向所有监视该服务器的哨兵发送一个<code>SENTINEL is-master-down-by-addr &lt;ip&gt; &lt;port&gt; &lt;current_epoch&gt; &lt;runid&gt;</code>命令，已询问其他哨兵是否同意主服务器已下线。<ul><li>这里的<code>&lt;ip&gt; &lt;port&gt;</code>指的是对应主服务器的IP和端口号</li><li><code>&lt;current_epoch</code>为这个哨兵当前的配置纪元，用于选举领头哨兵</li></ul></li><li>目标哨兵接收到源哨兵的<code>SENTINEL is-master-down-by-addr</code>命令时，会分析并取出命令请求中的各个参数，并判断对应的主服务器是否下线。然后对源哨兵进行回复。</li><li>源哨兵收到回复后，会统计其他哨兵同意主服务器下线的数量，当达到配置指定的所需数量时，便会将主服务器实例结构的<code>flag</code>属性的<code>SRI_O_DOWN</code>表示打开，表示主服务器已经进入客观下线状态。<ul><li>这个配置是类似于<code>sentinel monitor master 127.0.0.1 6379 2</code>。这个例子表示该哨兵在收到包括自己在内同意主服务器下线的数量达到了2时，便会将主服务器设为客观下线状态。</li></ul></li></ul><h1>选举领头哨兵</h1><p>选举领头哨兵基本上用的是一种受限的Gossip/Flooding协议。</p><p>简单来说就是如下几个点：</p><ul><li>只有监视着这个下线服务器的哨兵才能够参与选举（废话）。</li><li>所有哨兵在一个选举期间只能有一次选一个哨兵为局部领头哨兵的机会。</li><li>所有发现主服务器进入客观下线的哨兵都会要求其他哨兵将自己设置为局部领头哨兵。</li><li>哨兵选另一个哨兵为局部领头哨兵的规则是先到先得，假如A,B两个哨兵同时要求C哨兵将自己设置为局部领头哨兵，如果C先处理了A，那么就不会再处理B。</li><li>假如以个没有将主服务器视为客观下线的哨兵发送选举消息给了另一个相同状态的哨兵，接收方则会无视这个消息。</li><li>源哨兵在接收到目标哨兵返回的命令回复之后，会检查回复中的<code>leader_epoch</code>参数的值是否与自己的配置纪元相同。如果相同，则继续取出恢复中的<code>leader_runid</code>参数，如果<code>leader_runid</code>与原哨兵的运行ID一只，则表示目标哨兵将源哨兵设置成了局部领头哨兵。</li><li>只要有任何一个哨兵被半数以上的哨兵设置成了局部领头哨兵，那这个哨兵将成为领头哨兵，并执行故障转移操作。<ul><li>由于每一个哨兵在一个配置纪元中只能设置一次局部领头哨兵，所以当任意一个哨兵有半数以上的票，则代表尘埃落定。</li></ul></li><li>哨兵选举结束后就会将自己的配置纪元加1。此时，如果这个哨兵还接收到了来自于其他哨兵的选举信息，由于它的配置纪元比接收到的信息中的纪元不一致，因此它会无视这些消息。</li></ul><p>最终所有参与了本次选举的哨兵都最多会做一次投票，并且所有哨兵最终的配置纪元都会加一。</p><h1>故障转移</h1><p>当一个哨兵被正式选为领头哨兵时，该哨兵将对已下线的主服务器执行故障转移操作。流程如下：</p><ul><li>从已下线的主服务器属下的所有从服务器中，选出一个从服务器，将其转为主服务器</li><li>让已下线的主服务器属下的所有其他从服务器改为复制新的主服务器</li><li>将以下线的主服务器设为新主服务器的从服务器，并持续监视该服务器，当其重新上线时便会正式成为从服务器</li></ul><h2 id="挑选新的主服务器">挑选新的主服务器</h2><p>领头Sentinel会将已下线主服务器的所有从服务器保存到一个列表里面，然后按照以下规则，一项一项地对列表进行过滤：</p><ul><li><p>删除列表中所有处于下线或者断线状态的从服务器，这可以保证列表中剩余的从服务器都是正常在线的。</p><ul><li>这个状态是出于哨兵的角度来看的，意味着这个从服务器长时间没有正常与哨兵进行联系。</li></ul></li><li><p>删除列表中所有最近五秒内没有回复过领头Sentinel的INFO命令的从服务器，这可以保证列表中剩余的从服务器都是最近成功进行过通信的。</p></li><li><p>删除所有与已下线主服务器连接断开超过<code>down-after-milliseconds * 10</code>毫秒的从服务器：<code>down-after-milliseconds</code>选项指定了判断主服务器下线所需的时间，而删除断开时长超过<code>down-after-milliseconds * 10</code>毫秒的从服务器，则可以保证列表中剩余的从服务器都没有过早地与主服务器断开连接，换句话说，列表中剩余的从服务器保存的数据都是比较新的。</p><ul><li>这个状态是基于从服务器角度来看的。这个服务器可以相应哨兵，但是它可能与主服务器的连接出了问题。</li><li><strong>哨兵怎么得到这个值的？</strong><ul><li>哨兵每隔十秒都会向从服务器发送一次<code>INFO</code>，返回的信息中有一个条目叫<code>master_link_status</code>。当这个条目的值为<code>down</code>时，意味着这个从服务器丢失了对主服务器连接。此时，哨兵会对这个从服务器设置一个计时器（其实就是记录当前系统时间）。如果哨兵在下一次发送<code>INFO</code>消息且收到该条目的值为<code>on</code>，则会取消这个计时器。在挑选新主服务器时，如果在从服务器实例结构中发现该属性为<code>off</code>，则会用当前系统时间与对应的计时器进行计算。以此即可得到从服务器与主服务器连接断开的时间。</li></ul></li></ul></li></ul><p>之后，领头Sentinel将根据从服务器的优先级，对列表中剩余的从服务器进行排序，并选出其中优先级最高的从服务器。</p><p>如果有多个具有相同最高优先级的从服务器，那么领头Sentinel将按照从服务器的复制偏移量，对具有相同最高优先级的所有从服务器进行排序，并选出其中偏移量最大的从服务器（复制偏移量最大的从服务器就是保存着最新数据的从服务器）。</p><p>最后，如果有多个优先级最高、复制偏移量最大的从服务器，那么领头Sentinel将按照运行ID对这些从服务器进行排序，并选出其中运行ID最小的从服务器。</p><h2 id="修改从服务器的复制目标">修改从服务器的复制目标</h2><p>一言以蔽之，就是领头哨兵会向所有将要成为新主服务器的从服务器发送一个<code>SLAVEOF</code>命令，让他们进行复制。</p><p>对于已经下线的，将来也要成为新主服务器的那个主服务器，在它上线时，领头哨兵也会对它发送一个<code>SLAVEOF</code>命令</p><h1>更多问题</h1><p><strong>主服务器错误下线的时候，没有任何一个从服务器中的数据完成了同步，即便进行了故障转移也会丢失数据。这种情况如何处理？</strong></p><ul><li>Redis基于工程上的权衡，它在设计上就是允许一定的数据丢失。分布式系统无法同时满足一致性(Consistency)，可用性(Availability)和分区容错性(Partition Tolerance)。Redis的主从复制与哨兵机制的设计倾向于<strong>AP</strong>，在发生主节点故障时，会有限保证服务可用，并接受一定程度的数据丢失风险。因此，不用处理。如果真的要保证强一致性的话，可以考虑用别的框架（ZooKeeper等）。如果就是想用Redis，那可以考虑将配置文件中对于数据同步的参数调得更严格一些，以降低这种情况发生的可能。</li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fluid主题下，如何解决网页渲染的mermaid版本与本地使用的版本不相同的问题</title>
    <link href="/2025/08/29/Fluid%E4%B8%BB%E9%A2%98%E4%B8%8B%EF%BC%8C%E7%BD%91%E9%A1%B5%E6%B8%B2%E6%9F%93%E7%9A%84mermaid%E7%89%88%E6%9C%AC%E4%B8%8E%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8%E7%9A%84Typora%E7%89%88%E6%9C%AC%E4%B8%8D%E7%9B%B8%E5%90%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2025/08/29/Fluid%E4%B8%BB%E9%A2%98%E4%B8%8B%EF%BC%8C%E7%BD%91%E9%A1%B5%E6%B8%B2%E6%9F%93%E7%9A%84mermaid%E7%89%88%E6%9C%AC%E4%B8%8E%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8%E7%9A%84Typora%E7%89%88%E6%9C%AC%E4%B8%8D%E7%9B%B8%E5%90%8C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h1>问题描述</h1><p>写技术博客的时候，我们时常会用到mermaid做一些流程图或者时序图什么的，但是Fluid主题中默认使用的mermaid版本总是与我们本地编写的时候使用的mermaid版本不相同（通常Fluid主题中的版本要小许多）。这道值通常会出现mermaid在本地可以渲染出来，但是到了网页上之后却无法渲染。</p><p>同样遇到这个问题的小伙伴，不想看我查出来这个问题的心路历程，可以直接跳到<a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">解决方案</a></p><h1>心路历程</h1><p>我自己用的Typora来编写Markdown，目前来说，Typora使用的mermaid版本为<code>11.9.0</code>。但是，在我编写完后，网页博客中通常会渲染失败，而那上面显示的却是<code>8.14.0</code>。如果懒得去管版本问题的话，倒是也可以将本地写mermaid的方式改成旧版本的方式，但是总是非常麻烦（因为不知道自己错在了哪里）。因此，我翻了一会儿Fluid的代码和网页代码，发现在浏览器中，文章的html文件的后面一部分总是会出现这一段代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-title class_">Fluid</span>.<span class="hljs-property">utils</span>.<span class="hljs-title function_">createScript</span>(<span class="hljs-string">&#x27;https://lib.baomitu.com/mermaid/8.14.0/mermaid.min.js&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    mermaid.<span class="hljs-title function_">initialize</span>(&#123;<span class="hljs-string">&quot;theme&quot;</span>:<span class="hljs-string">&quot;default&quot;</span>&#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-title class_">Fluid</span>.<span class="hljs-property">utils</span>.<span class="hljs-title function_">listenDOMLoaded</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">      <span class="hljs-title class_">Fluid</span>.<span class="hljs-property">events</span>.<span class="hljs-title function_">registerRefreshCallback</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span> (<span class="hljs-string">&#x27;mermaid&#x27;</span> <span class="hljs-keyword">in</span> <span class="hljs-variable language_">window</span>) &#123;</span><br><span class="language-javascript">          mermaid.<span class="hljs-title function_">init</span>();</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">      &#125;);</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">  &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注意到有<code>https://lib.baomitu.com/mermaid/8.14.0/mermaid.min.js</code>这么个网址存在。第一反应，这应该是一个什么静态站点的资源库。但是既然有这个<code>Fluid.utils.createScript</code>这么个方法，说明Fluid主题中必然是写了这个代码的。之后，我找到了<code>blog/themes/fluid/source/js/utils.js</code>这个文件，翻了一下，果然有相应的方法定义：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Fluid</span>.<span class="hljs-property">utils</span> = &#123;<br>    <span class="hljs-comment">// 其他代码...</span><br>    <br>    <span class="hljs-attr">createScript</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">url, onload</span>) &#123;<br>        <span class="hljs-keyword">var</span> s = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;script&#x27;</span>);<br>        s.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;src&#x27;</span>, url);<br>        s.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;type&#x27;</span>, <span class="hljs-string">&#x27;text/javascript&#x27;</span>);<br>        s.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;charset&#x27;</span>, <span class="hljs-string">&#x27;UTF-8&#x27;</span>);<br>        s.<span class="hljs-property">async</span> = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> onload === <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br>          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">attachEvent</span>) &#123;<br>            s.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>              <span class="hljs-keyword">var</span> e = s.<span class="hljs-property">readyState</span>;<br>              <span class="hljs-keyword">if</span> (e === <span class="hljs-string">&#x27;loaded&#x27;</span> || e === <span class="hljs-string">&#x27;complete&#x27;</span>) &#123;<br>                s.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-literal">null</span>;<br>                <span class="hljs-title function_">onload</span>();<br>              &#125;<br>            &#125;;<br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            s.<span class="hljs-property">onload</span> = onload;<br>          &#125;<br>        &#125;<br>        <span class="hljs-keyword">var</span> ss = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&#x27;script&#x27;</span>);<br>        <span class="hljs-keyword">var</span> e = ss.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span> ? ss[ss.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>] : <span class="hljs-variable language_">document</span>.<span class="hljs-property">head</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>;<br>        e.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">insertBefore</span>(s, e.<span class="hljs-property">nextSibling</span>);<br>&#125;,<br>    <br>    <span class="hljs-comment">// 其他代码...</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>好消息是，找到了对应的代码。坏消息是，这似乎是一个动态代码生成方法。不过说来也是，不可能硬编码一套内容出来然后生搬到html生成过程中去，那样太麻烦了。从这段代码中可以注意到有一个<code>url</code>，想必这个<code>url</code>就是对应着生成代码所对应的<code>url=https://lib.baomitu.com/mermaid/8.14.0/mermaid.min.js</code>了。那接下来就是找这个网址在哪里定义的。</p><p>漫无目的地找似乎有些没道理，细细想来，这种东西不是很像做Java Spring时弄配置文件的感觉吗？说不定这个东西也是放在了配置文件里面。</p><p>那说到hexo的配置文件，恐怕就只有<code>_config.fluid.yml</code>这个文件了。在里面搜了一下<code>mermaid</code>，里面有关的出现了这些内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml">  <span class="hljs-comment"># 流程图，基于 mermaid-js，具体请见：https://hexo.fluid-dev.com/docs/guide/#mermaid-流程图</span><br>  <span class="hljs-comment"># Flow chart, based on mermaid-js, see: https://hexo.fluid-dev.com/docs/en/guide/#mermaid</span><br>  <span class="hljs-attr">mermaid:</span><br>    <span class="hljs-comment"># 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `mermaid: true`</span><br>    <span class="hljs-comment"># If you want to use mermaid on the custom page, you need to set `mermaid: true` in Front-matter</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># 开启后，只有在文章 Front-matter 里指定 `mermaid: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度</span><br>    <span class="hljs-comment"># If true, only set `mermaid: true` in Front-matter will enable mermaid, to load faster when the page does not contain mermaid</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">true</span><br><br>    <span class="hljs-comment"># See: http://mermaid-js.github.io/mermaid/</span><br>    <span class="hljs-attr">options:</span> &#123; <span class="hljs-attr">theme:</span> <span class="hljs-string">&#x27;default&#x27;</span> &#125;<br>    <br><span class="hljs-comment"># --------------</span><br><span class="hljs-attr">static_prefix:</span><br><span class="hljs-attr">mermaid:</span> <span class="hljs-string">https://lib.baomitu.com/mermaid/8.14.0/</span><br></code></pre></td></tr></table></figure><p>看到这里应该很明了，下面那个就是一个静态地址的定义，想必我们把里面的<code>8.14.0</code>改成想要的版本，应该就好了。</p><p>因此我试着改了一下，果然就好了。</p><p>在改好了之后再去回顾Fluid文档中告诉我们的静态配置，这才理解原来（有一部分？）是用在了这里。</p><h1>解决方案</h1><p>去<code>_config.fluid.yml</code>中，拉倒最底下，找到<code>mermaid: https://lib.baomitu.com/mermaid/8.14.0/</code>，把其中的<code>8.14.0</code>改成<code>11.9.0</code>即可。</p><p>其他版本的我没有测试，但是亲测<code>11.9.0</code>是可用的！</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid主题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《Redis设计与实现》主从复制</title>
    <link href="/2025/08/29/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    <url>/2025/08/29/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h1>主从复制</h1><p>用户可以通过执行<code>SLAVEOF</code>命令或者设置<code>slaveof</code>选项，来让一个服务器去复制另一个服务器。此时，我们称被复制的服务器为主服务器，复制其他服务器的服务器为从服务器。比如，两个服务器地址分别为<code>127.0.0.1:6379</code>和<code>127.0.0.1:12345</code>，如果用户在服务器<code>127.0.0.1:12345</code>中发送命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">12345</span>&gt; SLAVEOF <span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> <span class="hljs-number">6379</span><br>OK<br></code></pre></td></tr></table></figure><p>那么服务器<code>127.0.0.1:12345</code>将成为<code>127.0.0.1&quot;6379</code>的从服务器。在此之后，主从服务器中将保存相同的数据。</p><h1>旧版复制功能</h1><p>在发出<code>SLAVEOF</code>指令之后，从服务器首先需要执行同步操作。具体流程如下</p><pre><code class=" mermaid">sequenceDiagramparticipant B as 从服务器participant A as 主服务器participant SubA as BGSAVE子进程participant C as 客户端（用户）    B -&gt;&gt; A: 发送Sync命令    A -&gt;&gt; SubA: 执行BGSAVE命令    Note right of A: 生成RDB快照文件    C --&gt;&gt; A: 新的写入命令    A --&gt;&gt; A: 将写入命令记录到缓冲区    destroy SubA    SubA -&gt;&gt; A: BGSAVE命令执行完毕    A -&gt;&gt; B: 发送RDB文件    B -&gt;&gt; B: 接受并载入RDB文件    A -&gt;&gt; B: 发送缓冲区保存的所有写命令    B -&gt;&gt; B: 接受并执行主服务器发来的所有写命令    </code></pre><h2 id="数据传播">数据传播</h2><p>从服务器同步完主服务的数据后也并不代表着结束。后续有客户端给主服务发送写命令时，主服务器中的数据也会和从服务器不一致。所以我们还需要一个方法将这种变化也同步到从服务器中去。Redis中采用的方法为，**当主服务器收到新的写指令时，在它操作完自己的数据之后，会将这个写指令发送给它的所有从服务器。**以此，达成数据同步的效果。</p><pre><code class=" mermaid">sequenceDiagramparticipant C as 客户端（用户）participant A as 主服务器participant B as 从服务器C -&gt;&gt; A: 发送写指令A -&gt;&gt; A: 执行写指令A -&gt;&gt; B: 发送写指令B -&gt;&gt; B: 执行写指令</code></pre><p>这是书上给的解释，但是这个解释看起来很奇怪，Redis中，<strong>主服务器真的会每完成一个写操作之后都会将其立马发送给从服务器吗？</strong></p><p>在网上搜了一下解释之后，我得到了这个结论：<strong>不会！</strong></p><p>事实上，主服务器在执行完写指令之后，会现将这个指令写入<a href="#%E5%A4%8D%E5%88%B6%E7%A7%AF%E5%8E%8B%E7%BC%93%E5%86%B2%E5%8C%BA"><strong>复制积压缓冲区(Replication Backlog)</strong></a>，这个知识点在后面也会提到，但是为了避免误解，这里先小提一嘴。主服务器会在之后通过这个缓冲区，异步地将命令发送给所有从服务器。</p><p><strong>注意：</strong> 每一个已连接的从服务器，主服务器都会为其创建一个复制输出缓冲区。主服务器会将复制积压缓冲区中的新命令，分发到每个对应的复制输出缓冲区中。</p><p>复制输出缓冲区的信息发送时机，取决于操作系统的通知时机。当主服务器发现某个从服务器的Socket可写时，便会理科捕获该事件，然后立马尽最大努力发送尽可能多的指令。</p><h2 id="旧版复制功能的缺陷">旧版复制功能的缺陷</h2><p>主要的缺陷体现在从服务器宕机重连的情况。在Redis中，主从复制可被分为以下两种情况：</p><ul><li>初次复制：从服务器以前没有父之过任何主服务器，或者从服务器这次要复制的主服务器对象与上一次不同<ul><li>能正常且很好地使用我们之前讲的方法进行复制</li></ul></li><li>断线后重新复制：处于命令传播阶段的从服务器因为某种原因断线了，现在重新连接又连上了主服务器<ul><li>也能正常使用我们之前将的方法进行复制，但是为有些问题：断线后的重连所带来的重新复制，用的是我们之前讲的相同的方法，这可能会带来很严重的性能问题，<strong>因为SYNC操作是一个非常耗费资源的操作，会涉及到主服务器大量的I/O操作与运算资源，网络资源，和从服务器的I/O资源。</strong></li></ul></li></ul><p>旧版复制功能的问题，书中给了一个很明确的例子：</p><p><img src="/images/%E6%97%A7%E7%89%88%E4%B8%BB%E4%BB%8E%E6%96%AD%E7%BA%BF%E9%87%8D%E8%BF%9E%E5%A4%8D%E5%88%B6%E7%9A%84%E6%B5%81%E7%A8%8B.png" alt="旧版主从断线重连复制的流程"></p><p>可以看到，从服务器从断开连接到重新连接中间，主服务器值增加了3个新的写命令。但是从服务器恢复的流程却是重新读取包含了整个主服务器数据库数据的RDB文件，这通厂会带来极大的资源消耗。因此，新版的断线重连复制功能不再需要主服务器写RDB文件后再让从服务器读，而是让主服务器将在从服务器断线期间执行的写命令发送给从服务器，以节省大量的资源。</p><h1>新版复制功能</h1><p>新版Redis中不再采用简单的<code>SYNC</code>机制，而是改为了<code>PSYNC</code>机制，而在这个机制中，在两种不同情况中会采用不同的复制流程：</p><ul><li>初次复制：与原本的<code>SYNC</code>机制相同</li><li>断线后重新复制：让主服务器将在从服务器断线期间执行的写命令发送给从服务器，从服务器接收并执行这些命令即可。</li></ul><p>书中也给了一个很明确的例子（网上的图片有问题，这里只给一个流程图）：</p><pre><code class=" mermaid">sequenceDiagramautonumberparticipant C as 客户端（用户）participant A as 主服务器participant B as 从服务器loop 命令传播阶段C -&gt;&gt; A: 写命令A -&gt;&gt; A: 执行命令A -&gt;&gt; B: 写命令B -&gt;&gt; B: 执行命令end B --x B: 断线了loop 正常接收写命令C -&gt;&gt; A: 写命令A -&gt;&gt; A: 执行命令endB --&gt;&gt; B: 恢复连接了B -&gt;&gt; A: 发送PSYNC命令A -&gt;&gt; B: 发送+Continue或&lt;br/&gt;+FULLRESYNC回复A -&gt;&gt; B: 发送主从服务器断线期间&lt;br/&gt;主服务器执行的命令B -&gt;&gt; B: 接收命令并执行</code></pre><p>其中，<code>9-11</code>的部分便表达了部分重同步的基本流程。接下来讲一下具体流程</p><h1>部分重同步</h1><p>有以下三个部分组成：</p><ul><li>主服务器的<strong>复制偏移量</strong> (replication offset)和从服务器的复制偏移量</li><li>主服务器的复制积压缓冲区</li><li>服务器的运行ID</li></ul><h2 id="复制偏移量">复制偏移量</h2><p>执行复制的双方都会分别维护一个复制偏移量：</p><ul><li>主服务器每次向从服务器传播N个字节的数据时，就会将自己的复制偏移量加上N</li><li>从服务器每次收到主服务器传播来的N个字节数据时，就激昂自己的复制偏移量加上N</li></ul><p>通过对比主从服务器的复制偏移量，即可很容易地知道主从服务器是否处于同一个状态：</p><ul><li>状态一致，则两者的偏移量总是相同的</li><li>状态不一致，则必然不相同</li></ul><h2 id="复制积压缓冲区">复制积压缓冲区</h2><p>我们之前也提到过这个内容，这里便会将一些细节进行说明。</p><p>复制积压缓冲区是由主服务器维护的一个固定长度，先进先出的队列，默认大小为<code>1MB</code>。当主服务器进行命令传播时，它不仅会将写命令发送给所有从服务器，还会将写命令入队到复制挤压缓冲区里面。</p><p>当从服务器重新连上主服务器时，从服务器会通过<code>PSYNC</code>命令将自己的<strong>复制偏移量offset</strong>发送给主服务器，主服务器会根据这个复制偏移量来决定对从服务器执行何种同步操作：</p><ul><li>如果offset+1开始的数据还存在于复制积压缓冲区中，那么主服务器对从服务器进行部分重同步操作</li><li>如果不存在，则进行完整重同步操作</li></ul><p>从这里可以发现，如果复制积压缓冲区的空间设置得太小，该方法会很容易变成单纯的完整重同步操作。因此，Redis也提供了一个方法来修改这个值。我们可以在服务器配置文件中的<code>repl-backlong-size</code>条目找到对应的方法，以根据需要，来调整这个值。通常来说，我们可以用这个公式来估算：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mi>u</mi><mi>f</mi><mi>f</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi><mo>∗</mo><mi>w</mi><mi>r</mi><mi>i</mi><mi>t</mi><mi>e</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">buffer\_size = second * write\_size\_per\_second</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">seco</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">seco</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">second</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">seco</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span></span></span></span>：从服务器断线重连所需的平均时间</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi>r</mi><mi>i</mi><mi>t</mi><mi>e</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">write\_size\_per\_second</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">seco</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span></span></span></span>：主服务器平均每秒产生的写命令数据量（字节数和）</li></ul><p>为了安全考虑，你甚至可以在这个公式前面乘个2或是什么别的合理的数，以确保大部分断线情况都可以用部分重同步来处理。</p><h2 id="服务器运行ID">服务器运行ID</h2><p>每个Redis服务器都会有自己的运行ID，这个ID在服务器启动时自动生成。由40个随机的十六进制字符组成。</p><p>当从服务器对主服务器进行初次复制时，主服务器会将自己的运行ID传送给从服务器，而从服务器则会保存这个ID。每当从服务器断线重连上一个主服务器时，从服务器都会将自己保存的这个ID发送给主服务器：</p><ul><li>如果主服务器接收到的ID与自己的运行ID相同，则代表这个从服务器之前连的就是自己这个服务器。之后，才会继续尝试重同步操作。</li><li>如果不相同，则会进行完整重同步操作。</li></ul><p><strong>随机生成ID，如果出现ID重复的情况该怎么办？</strong></p><ul><li>首先，我们来看看一共有多少可能的ID：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>16</mn><mn>40</mn></msup><mo>=</mo><mn>1.4615</mn><mo>×</mo><msup><mn>10</mn><mn>48</mn></msup></mrow><annotation encoding="application/x-tex">16^{40} = 1.4615 \times 10^{48}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">40</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1.4615</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">48</span></span></span></span></span></span></span></span></span></span></span></span></li><li>然后，来算算遇到相同ID的概率：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>1.4615</mn><mo>∗</mo><msup><mn>10</mn><mn>48</mn></msup></mrow></mfrac><mo>=</mo><mn>6.8423</mn><mo>×</mo><msup><mn>10</mn><mrow><mo>−</mo><mn>49</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\frac{1}{1.4615*10^{48}}=6.8423 \times 10^{-49}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1.4615</span><span class="mbin mtight">∗</span><span class="mord mtight">1</span><span class="mord mtight"><span class="mord mtight">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">48</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">6.8423</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">49</span></span></span></span></span></span></span></span></span></span></span></span></li><li>也许真实计算的方法其实并不是这样的，但是也大差不差。我觉得看到这个数字就知道为什么了，这不是我们需要担心的事情。</li></ul><h1>PSYNC命令的实现</h1><p>由于我很少看见有谁会问这个问题，因此我在这里就简单写一下几个可能的流程：</p><pre><code class=" mermaid">sequenceDiagramparticipant A as 主服务器participant B as 从服务器participant C as 客户端C -&gt;&gt; B: 发送SLAVEOF命令alt 从服务器以前没有复制过任何主服务器&lt;br/&gt;或者之前执行过SALVEOF no one命令B -&gt;&gt; A: PSYNC ? -1else 从服务器已经复制过某个服务器B -&gt;&gt; A: PSYNC &lt;runid&gt; &lt;offset&gt;endalt 主服务器执行完整冲同步操作A -&gt;&gt; B: +FULLRESYNC &lt;runid&gt; &lt;offset&gt;B -&gt;&gt; B: 保存 &lt;runid&gt;else 主服务器将与从服务器执行部分重同步A -&gt;&gt; B: +CONTINUEA -&gt;&gt; B: 断线期间的命令else 主服务器版本低于2.8A -&gt;&gt; B: -ERRB -&gt;&gt; A: SYNCA -&gt;&gt; B: 执行旧版本的复制操作end</code></pre><h1>复制的实现</h1><p>复制的实现过程会涉及到网络连接，验证连接，身份验证，建立监听，同步操作，命令传播等一连串操作。流程比较复杂，下面给一个大致的说明：</p><ol><li>从服务器将主服务器IP地址和端口号保存袋服务器状态的<code>masterhost</code>属性和<code>masterport</code>属性中</li><li>主从服务器建立套接字连接<ul><li>从服务器向主服务器请求建立套接字后，主服务器为该套接字创建<strong>客户端</strong>状态。</li><li>从服务器这时候将同时拥有<strong>服务器</strong>和<strong>客户端</strong>两个身份。</li><li>主从复制的步骤都是以从服务器向主服务器发送命令请求的形式来进行，所以从服务器的客户端身份十分重要。</li></ul></li><li>从服务器向主服务器发送PING命令。<ul><li>做这一步的目的有：<ul><li>检查套接字读写状态是否正常</li><li>检查主服务器是否能正常处理命令请求</li></ul></li><li>从服务器发送PING命令后可能会遇到如下情况：<ul><li>主服务器返回了命令回复，但从服务器无法及时读取命令回复的内容。此时从服务器会断开并重创建连向主服务器的套接字</li><li>主服务器返回了一个错误，从服务器也会断开并重连</li><li>主服务器返回了命令回复，从服务器读取到了PONG命令，表示连接正常。这种情况下可以继续执行复制操作。</li></ul></li></ul></li><li>执行身份验证操作，不过这取决于从服务器是否设置了<code>masterauth</code>选项<ul><li>只有当主服务器设置了<code>requirepass</code>选项并且与从服务器发送的密码相同，或者主服务器没有设置<code>requirepass</code>选项且从服务器也没有设置<code>masterauth</code>选项时，才会视为身份验证通过</li><li>身份验证不通过的情况下，基于主从服务器的设置，决定主服务器返回的内容<ul><li>设置了<code>requirepass</code>选项但没有设置<code>masterauth</code>选项：返回<code>NOAUTH</code>错误</li><li>没有设置<code>requirepass</code>选项但设置了<code>masterauth</code>选项：返回<code>no password is set</code>错误</li><li>主从服务器设置的密码不同：返回<code>invalid password</code>错误</li></ul></li></ul></li><li>从服务器发送端口信息。主服务器在接受到信息后，会将从服务器的端口号记录在所对应客户端状态的<code>slave_listening_port</code>属性中</li><li>同步：就，同步</li><li>命令传播：就，命令传播</li></ol><h1>心跳检测</h1><p>命令传播阶段，从服务器默认会议每秒一次的频率，像主服务器发送命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">REPLCONF ACK &lt;replication_offset&gt;<br></code></pre></td></tr></table></figure><p>其中<code>replication_pffset</code>是从服务器当前的复制偏移量。</p><p>该命令有三个作用：</p><ul><li>检测主从服务器的网络连接状态<ul><li>如果主服务器超过一秒（默认）没有收到从服务器发来的命令，则就可以认为主从服务之间的连接出了问题</li><li>在主服务器中发送<code>INFO replication</code>命令可以查看具体信息</li></ul></li><li>辅助实现<code>min-slaves</code>选项<ul><li>Redis的<code>min-slave-to-write</code>和<code>min-slaves-max-lag</code>两个选项可有用于防止主服务器在不安全的情况下执行写命令：<ul><li>一般本地测试的时候不用管这个问题，毕竟你不用从服务器</li></ul></li><li>前者的意思是最小需要有的从服务器数量，后者的意思是最小从服务器数量的延迟值都大于或等于n秒</li></ul></li><li>检测命令丢失<ul><li>如果主服务器在传播命令时因为网络原因导致从服务器没有接收到，导致从服务器的复制偏移量没有发生改变。这时发送这个命令便可以让主服务器发现从服务器的数据与自己的不一致，因此会再次向从服务器传播未发送的命令。</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《Redis设计与实现》RDB和AOF持久化</title>
    <link href="/2025/08/28/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8BRDB%E5%92%8CAOF%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    <url>/2025/08/28/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8BRDB%E5%92%8CAOF%E6%8C%81%E4%B9%85%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1>RDB持久化</h1><p>Redis是一个内存数据库，数据都被保存在内存中。因此如果没有一个合适的方法将数据保存到磁盘中的话，服务器进程的任何可能的退出或崩溃都会导致内部数据全部丢失。因此需要一个方法将数据库中的内容保存到磁盘中。而Redis便是使用了RDB持久化的方式将数据保存在磁盘中，以供服务器的保存与还原。</p><p><strong>RDB文件是一个经过压缩的二进制文件。</strong></p><h2 id="RDB文件的创建与载入">RDB文件的创建与载入</h2><p>两个命令可以用于生成RDB文件：<code>SAVE</code>和<code>BGSAVE</code>。实际上顾名思义</p><ul><li><code>SAVE</code>：保存数据库数据的时候会阻塞Redis服务器进程<ul><li>底层逻辑中，该命令不会<code>fork</code>一个子进程。</li></ul></li><li><code>BGSAVE</code>：Backgroud Save，可以看出在这个命令下Redis会用一个后台程序来保存数据库数据。实际上就是Redis会派生一个子进程，由子进程负责创建RDB文件。<ul><li>底层逻辑中，该命令会首先<code>fork</code>一个子进程。</li><li>由这一点可以看出，Redis并不是一个纯粹的单线程程序，它实际上的单线程是针对于数据库数据执行的任务流程。也就是说，在操作数据的层面上来说，Redis是一个纯粹的单线程，因此不需要担心数据一致性和死锁的问题。</li></ul></li></ul><p>服务器数据库的备份日志有两种<code>RDB</code>和<code>AOF</code>，充当这两个日志备份的指令有<code>SAVE, BGSAVE, BGREWRITEAOF</code>，它们三个在Redis服务器中同一时间只能执行一个，不允许任何的同时执行。</p><ul><li><code>SAVE</code>与<code>BGSAVE</code>：任意一个的执行期间，客户端发送的另一个指令都会被服务器拒绝。两个相同的<code>SAVE</code>和<code>BGSAVE</code>指令也是不允许的。因为他们可能会产生竞争条件。</li><li><code>SAVE, BGSAVE</code>与<code>BGREWRITEAOF</code>：<code>SAVE, BGSAVE</code>指令运行过程中，客户端发送的<code>BGREWRITEAOF</code>指令会在<code>SAVE, BGSAVE</code>指令执行完毕后执行。而<code>BGREWRITEAOF</code>指令执行过程中，客户端发送的<code>SAVE, BGSAVE</code>指令会直接被服务器拒绝。<ul><li>虽然这两组指令同步执行并不会出现竞争状态，但是处于性能考虑，同时执行会导致大量的磁盘IO，这并不是一个好的设计。</li></ul></li></ul><p><strong>载入：</strong> Redis服务器在启动的时候就会自动载入RDB文件（前提是找到了RDB文件）。不过需要<strong>注意</strong>：</p><ul><li>如果服务器开启了AOF持久化功能，则服务器会优先使用AOF文件来还原数据库状态。</li><li>只有AOF持久化功能被关闭的时候，服务器才会使用RDB文件来还原数据库状态。</li><li>服务器载入RDB文件期间，会一直处于阻塞状态，直到载入完毕。</li></ul><h2 id="自动间隔性保存">自动间隔性保存</h2><p>与<code>SAVE</code>不同，由于<code>BGSAVE</code>是一个不会让服务器主进程阻塞的指令，它可以做自动执行的操作。用户可以通过设置服务器配置的<code>save</code>选项，让服务器每个一段时间自动执行一次<code>BGSAVE</code>。例：<code>save [time] [changes]</code>，意为在<code>[time]</code>秒之内，对数据库进行了至少<code>[changes]</code>次修改，<code>BGSAVE</code>便会自动执行。用户可以定义多个<code>save</code>选项，只要任意一个满足了条件，便会执行<code>BGSAVE</code>。</p><ul><li>当用户没有手动设置保存条件时，服务器则会为<code>save</code>选项设置默认条件</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tex">save 900 1 // 900秒内有1次数据库修改<br>save 300 10 // 300秒内有10次数据库修改<br>save 60 10000 // 60秒内有10000次数据库修改<br></code></pre></td></tr></table></figure><p>书中还记录了具体底层代码的结构，这里不做详细赘述。</p><p>既然Redis服务器允许这类操作存在，那么必然也需要一些属性用于监视这些数据。针对这个问题，Redis中具有<code>dirty</code>计数器和<code>lastsave</code>属性：</p><ul><li><code>dirty</code>计数器：用于记录自上一次<code>SAVE, BGSAVE</code>命令之后，服务器对数据库状态（所有数据库）进行了多少次修改。这里有一点要<strong>注意</strong> ：<ul><li><code>SET message ...</code>会让<code>dirty</code>计数器加<code>1</code></li><li><code>SADD database value1 value2 value3 ... valueN</code>会让<code>dirty</code>计数器加<code>N</code></li><li>因此在创建有多组数据的类时（集合，列表，哈希，有序集合），<code>dirty</code>计数器增加的量为数据量。</li></ul></li></ul><p>Redis的服务器周期性操作函数<code>serverCron</code>默认每个<code>100</code>毫秒就会执行一次，而<code>BGSAVE</code>的自动执行也是在这个函数中进行判断。</p><h2 id="RDB文件结构">RDB文件结构</h2><p><img src="/images/RDB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84.png" alt="RDB文件结构"></p><ul><li>RDB文件是一个二进制数据，因此文件中所有看起来像字符串的内容都不会以<code>\0</code>结尾。</li><li><code>REDIS</code>：由这五个字符组成的，类似于一个文件标识，用于快速识别该文件是一个RDB文件。</li><li><code>db_version</code>：一个四字节的字符串，用于表示该文件的版本号。<strong>现在似乎最新版本是<code>0009</code>，代表第九版RDB文件结构。</strong></li><li><code>databases</code>：包含零个或任意多个数据库。以及数据库中的键值对数据。</li><li><code>EOF</code>：一个一字节的常量，用于标志RDB文件正文部分结束。</li><li><code>check_sum</code>：一个八字节长的无符号整数，保存这一个校验和。这个校验和是通过前四个部分的内容进行计算得出。在载入文件时，会根据该值与使用前四个部分再进行计算的值进行对比，判断该文件是否出错或损坏。</li></ul><p>书中详细讲了<code>database</code>的组成，我这里用一个树结构直观地描述一下整体结构：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable constant_">SELECTDB</span><br>db_number<br><span class="hljs-attr">key_value_pairs</span>:<br>- [<span class="hljs-variable constant_">EXPIRETIME_MS</span>]<br>- [ms]<br>- <span class="hljs-variable constant_">TYPE</span><br>    - key<br>    - value<br>    - <span class="hljs-variable constant_">ENCODING</span><br>- <span class="hljs-title function_">VALUE</span>(S)<br></code></pre></td></tr></table></figure><ul><li><p><code>SELECTDB</code>：一字节，代表下一个部分是数据库号码</p></li><li><p><code>db_number</code>：一、二或五字节，代表数据库号码。程序读取时会根据这个号码读入指定的数据库中。</p></li><li><p><code>key_value_pairs</code>：</p><ul><li><p><code>EXPIRETIME_MS, ms</code>：当该键被设有过期时间时才会存在。<code>EXPIRETIME_MS</code>常量长度为一字节，即充当了一个具有过期时间的键的标识，由告诉程序下一个要读入的是一个以毫秒为单位的过期时间<code>ms</code></p></li><li><p><code>TYPE</code>：<code>value</code>的类型。长度为一字节，此为众多常量的其中一个:</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs tex">REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>STRING<br>REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>LIST<br>REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>SET<br>REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>ZSET<br>REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>HASH<br>REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>LIST<span class="hljs-built_in">_</span>ZIPLIST<br>REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>SET<span class="hljs-built_in">_</span>INTSET<br>REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>ZSET<span class="hljs-built_in">_</span>ZIPLIST<br>REDIS<span class="hljs-built_in">_</span>RDB<span class="hljs-built_in">_</span>TYPE<span class="hljs-built_in">_</span>HASH<span class="hljs-built_in">_</span>ZIPLIST<br><span class="hljs-params">#</span> 总而言之，就是在对象那一篇文章中讲到过的所有对象的encoding<br></code></pre></td></tr></table></figure></li><li><p>根据不同的<code>TYPE</code>，<code>value</code>也不一样</p></li></ul></li><li><p><code>key</code>：该键值对的键，总是一个字符串对象</p></li><li><p><code>value</code>：该键值对的值。这东西名堂多了，取决于<code>TYPE</code>的值。不过都很符合直觉。每一个都展开细讲有点没必要，想要仔细了解的可以去翻书看看，或者去这个网页：<a href="https://book-redis-design.netlify.app/#/">《Redis设计与实现》</a>。这个实际上就是那本书的内容了，不过书中有些东西版本比较老。</p></li></ul><p>书中的下一个部分介绍了RDB文件的解析，不过这个不是很重要。想看的可以自行去看看。不过这里推荐大家可以先去自己尝试一下创一个Redis服务器，往里面放一两个简单的数据，然后用<code>od -c dump.rdb</code>看一下文件里的内容。结合之前的知识，看看能不能看懂这个文件信息。</p><p><strong>注意：</strong> 生成RDB文件时默认名称是<code>dump.rdb</code></p><h1>AOF持久化</h1><p>与RDB文件担任的职责不同，AOF文件仅用于记录服务器所执行的<strong>写</strong>命令来记录数据库状态。</p><p>这里引用书中一个非常直观且简单的例子：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cmd"># Redis服务器指令<br>redis&gt; <span class="hljs-built_in">SET</span> msg &quot;hello&quot;<br>OK<br><br>redis&gt; SADD fruits &quot;apple&quot; &quot;banana&quot; &quot;cherry&quot;<br>(integer) <span class="hljs-number">3</span><br><br>redis&gt; RPUSH numbsers <span class="hljs-number">128</span> <span class="hljs-number">256</span> <span class="hljs-number">512</span><br>(integer) <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>在执行完这些命令之后，AOF文件中应该记录这些内容：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tex">*2<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>6<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nSELECT</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>1<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span>0<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><br>*3<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>3<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nSET</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>3<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nmsg</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>5<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nhello</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><br>*5<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>4<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nSADD</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>6<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nfruits</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>5<span class="hljs-keyword">\r</span><span class="hljs-keyword">\napple</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>6<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nbanana</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>6<span class="hljs-keyword">\r</span><span class="hljs-keyword">\ncherry</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><br>*5<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>5<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nRPUSH</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>7<span class="hljs-keyword">\r</span><span class="hljs-keyword">\nnumbers</span><span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>3<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span>128<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>3<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span>256<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><span class="hljs-built_in">$</span>5<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span>512<span class="hljs-keyword">\r</span><span class="hljs-keyword">\n</span><br></code></pre></td></tr></table></figure><p><strong>简单的提示：</strong> 把每一个<code>\r\n</code>都看成是分隔符</p><p><strong>这些命令的追加，一言以蔽之，就是每当客户端向服务器发送一个写命令，服务器就会将协议内容追加到<code>aof_buf</code>缓冲区的末尾。</strong></p><h2 id="AOF文件的写入与同步">AOF文件的写入与同步</h2><p>如在前几个章节或文章中说过，Redis服务器进程就是一个事件循环。而在每一次循环结束之前，都会调用<code>flushAppendOnlyFile</code>函数，考虑是否要将<code>aof_buf</code>缓冲区的内容写入和保存到AOF文件中。而这个函数的行为取决于服务器配置的<code>appendfsync</code>选项:</p><ul><li><code>always</code>：将 <code>aof_buf</code> 缓冲区中的所有内容写入并同步<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="现代操作系统中的写入与同步时两个东西。前者代表的是将内容写入到一个内存缓冲区中，后者才是真正地将内容刷到磁盘里。刷到磁盘（同步）的时机有很多种，当缓冲区被填满，超过了指定时限，人工强行同步等等。">[1]</span></a></sup>到 AOF 文件。<ul><li>最慢，但最安全。即便是故障停机，也只会丢失一个循环的AOF信息</li></ul></li><li><code>everysec</code>（默认值）：将 <code>aof_buf</code> 缓冲区中的所有内容写入到 AOF 文件， 如果上次同步 AOF 文件的时间距离现在超过一秒钟， 那么再次对 AOF 文件进行同步， 并且这个同步操作是由一个线程专门负责执行的。<ul><li>折中的做法。故障停机也只会丢失一秒钟的AOF信息</li></ul></li><li><code>no</code>：将 <code>aof_buf</code> 缓冲区中的所有内容写入到 AOF 文件， 但并不对 AOF 文件进行同步， 何时同步由操作系统来决定。<ul><li>写入速度最快，但同步时间最长，并且最有可能丢失大量AOF数据。总的来说，听天由命。</li></ul></li></ul><h2 id="AOF文件的载入与数据还原">AOF文件的载入与数据还原</h2><p>AOF文件的载入与数据还原其实也是一个非常直观且易懂的流程：</p><ol><li>创建一个不带网络连接的伪客户端<ul><li>为什么？因为现在要操作的AOF文件，而不是真实的新命令</li></ul></li><li>从AOF文件中分析并读取一条写命令</li><li>使用为客户端执行被读出的写命令</li><li>反复执行2,3，知道AOF文件中所有写命令都被处理完毕为止</li></ol><p>那么可能会有几个问题：</p><ul><li>开启新Redis服务器的时候，内部应是没有任何数据存在的。那假设之前这个服务器开了很久，AOF文件很大的话，这样子做是否高效？<ul><li>经过AOF重写机制，能极大程度地缩小AOF文件的大小，同时也会简化还原数据时所需要的执行次数。</li></ul></li></ul><h2 id="AOF文件重写">AOF文件重写</h2><p><strong>AOF文件重写的主要目的是为了删除冗余命令，合并命令以缩小AOF文件和简化数据还原时的程序复杂度。</strong></p><p>基本操作方式是创建一个新的AOF文件，往里面写入内容以代替旧的AOF文件。</p><p>不过虽然这么说，但是实际上AOF文件的重写并不会对AOF文件本身进行任何读操作，而是通过检查当前数据库中的键值对，用<code>SET</code>等一句写命令，替代所有之前记录这个键值的多条命令。比如说：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cmd">RPUSH list &quot;A&quot; &quot;B&quot;  // [&quot;A&quot;, &quot;B&quot;]<br>RPUSH list &quot;C&quot;      // [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;]<br>RPUSH list &quot;D&quot; &quot;E&quot;  // [&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;]<br>LPOP list<br>LPOP list<br>RPUSH list &quot;F&quot; &quot;G&quot;  // [&quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;]<br></code></pre></td></tr></table></figure><p>用正常的AOF文件写入逻辑，文件中将会有6个不同的，对同一个键值的写入命令。而通过使用AOF文件重写，将直接从数据库中读取键<code>list</code>的值，然后生成一条<code>RPUSH list &quot;C&quot; &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot;</code>来代替这六条写入命令。这一点，对任何类型的键都有效。</p><p><strong>由于AOF文件与RDB文件所扮演的基本角色是一样的，目的都是要还原服务器数据库的数据，因此它完全可以将内部的指令全部简化为像<code>SET, RPUSH, SADD</code>这类简单的写入命令。</strong> 不过，它同样也会设置生成键过期时间的指令。</p><p><strong>注意：</strong> Redis也考虑了缓冲区溢出的问题。因此，在处理列表，哈希表，集合，有序集合这四种可能会带有多个元素的键时，会先检查键所含元素的数量，基于<code>redis.h/REDIS_AOF_REWRITE_ITEMS_PER_CMD</code>常量来决定是否要对同一个键进行多次命令。在目前版本中，这个常量为<code>64</code>。</p><h3 id="AOF后台重写">AOF后台重写</h3><p>写入操作通常会占用大量服务器的IO以造成服务器卡顿一类的性能问题。因此AOF的重写操作都是在Redis程序的子进程中执行。这便是<code>BGREWRITEAOF</code>命令。然而，也许在后台重写的过程中，主进程还在对数据库进行操作，因此Redis还需要处理这种情况下的<strong>数据不一致问题</strong>。</p><p>实际上解决方法也很简单，在开始执行AOF后台重写命令时，主进程（Redis服务器）会开启一个<strong>AOF重写缓冲区</strong>。该缓冲区所扮演的角色与<strong>AOF缓冲区</strong>相似，在Redis服务器执行完一个写命令之后，不光会将这个写命令发送给AOF缓冲区，还会发送给AOF重写缓冲区。这样一来，子进程中的AOF重写过程中也能够保证同步Redis服务器在这期间的新的写命令。</p><p>在子进程完成任务后，会向父进程发送一个信号，父进程收到信号后，执行以下操作：</p><ul><li>AOF重写缓冲区的内容写入到新的AOF文件中，以保证新AOF文件中的数据库状态与当前服务器的数据库状态一致</li><li>对新的AOF文件进行改名，并<strong>原子性地</strong>覆盖现有AOF文件，完成替换</li></ul><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>现代操作系统中的写入与同步时两个东西。前者代表的是将内容写入到一个内存缓冲区中，后者才是真正地将内容刷到磁盘里。刷到磁盘（同步）的时机有很多种，当缓冲区被填满，超过了指定时限，人工强行同步等等。<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Redis学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《Redis设计与实现》数据库</title>
    <link href="/2025/08/27/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/2025/08/27/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1>服务器数据库</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">redisServer</span>&#123;</span><br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-comment">// 一个保存着服务器中所有数据库的数组</span><br>    redisDb *db;<br>    <span class="hljs-comment">// 服务器的数据库数量(df长度)</span><br>    <span class="hljs-type">int</span> dbnum;<br>    <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><code>df</code>：保存了服务器中所有数据库的数组，说是数据库，但由于Redis是一个键值对数据库，所以实际上内部也是一个类似于字典的结构</li><li><code>dbnum</code>：属性值有服务器配置的database选项决定，不过默认是<code>16</code></li></ul><h2 id="切换数据库">切换数据库</h2><p>用户可以用<code>SELECT</code>来切换目标数据库。在客户端结构中，具有一个指向<code>redisDb</code>结构的指针：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">redisClient</span>&#123;</span><br><span class="hljs-comment">// ...</span><br>    <span class="hljs-comment">// 记录客户端正在使用的数据库</span><br>    redisDb *db;<br>    <span class="hljs-comment">// ...</span><br>&#125; redisClient;<br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><code>db</code>：这个与服务器结构中的<code>db</code>不一样，这个指向的是一个特定的数据库，而服务器中指代的是一个数据库数组。</li><li>Redis并没有提供一个方法用于让客户知道自己现在使用的是哪个数据库。通常来说，在<code>redis-cli</code>中可以看见正在使用的数据库号码，然而在其他语言环境下也许并没有这个号码。因此最好在执行数据库关键命令前显式地将当前数据库切换到想要操作的数据库上。</li><li>多线程问题？Redis的命令执行是一个绝对的单线程。即便这里看起来是有多个数据库，Redis也依然是在同一个程序上单线程地执行所有数据中的内容。因此：<ul><li>单个数据库出现慢查询问题会影响到所有其他数据库</li></ul></li></ul><h3 id="数据库键空间">数据库键空间</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">redisDb</span>&#123;</span><br><span class="hljs-comment">// ...</span><br>    <span class="hljs-comment">// 数据库键空间，保存着该数据库的所有键值对</span><br>    dict *dict;<br>    <span class="hljs-comment">// ...</span><br>&#125; redisDb;<br></code></pre></td></tr></table></figure><p>这一段非常地直观，我这里就直接给一个结构图即可</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cmd">redis&gt; <span class="hljs-built_in">SET</span> message &quot;hello world&quot;<br>OK<br><br>redis&gt; RPUSH alphabet &quot;a&quot; &quot;b&quot; &quot;c&quot;<br>(integer) <span class="hljs-number">3</span><br><br>redis&gt; HSET book name &quot;Redis <span class="hljs-keyword">in</span> Action&quot;<br>(integer) <span class="hljs-number">1</span><br><br>redis&gt; HSET book author &quot;Josiah L. Carlson&quot;<br>(integer) <span class="hljs-number">1</span><br><br>redis&gt; HSET book publisher &quot;Manning&quot;<br>(integer) <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>执行这些命令后，数据库键空间长这样：</p><p><img src="/images/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%AE%E7%A9%BA%E9%97%B4%E7%A4%BA%E4%BE%8B.png" alt="数据库键空间示例"></p><h2 id="过期时间">过期时间</h2><p>作为一个基于内存的数据库，对数据库元素有一个严谨的管理十分重要。Redis中设计了一套命令使用户能够轻松地定义任何数据的过期时间，基于设定的时间，通过一系列算法来完成过期删除操作。</p><ul><li><code>EXPIRE</code>命令：用于将键key的生存时间设置为ttl秒。</li><li><code>PEXPIRE</code>命令：用于将键key的生存时间设置为ttl毫秒。</li><li><code>EXPIREAT</code>命令：用于将键key的过期时间设置为timestamp所指定的秒数时间戳。</li><li><code>PEXPIREAT</code>命令：用于将键key的过期时间设置为timestamp所指定的毫秒数时间戳。</li></ul><p>虽然每一个命令都扮演着不同的角色，但实际上<code>EXPIRE, PEXPIRE, EXPIREAT</code>在底层代码中，最终都会被转化为<code>PEXPIREAT</code>。具体转化关系如下：</p><pre><code class=" mermaid">graph TDEXPIRE --&gt; PEXPIRE --&gt; PEXPIREATEXPIREAT --&gt; PEXPIREAT</code></pre><p>能够定义键的过期时间，则必然需要一个地方用于存储这些时间</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">redisDb</span>&#123;</span><br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-comment">// 过期时间字典，保存着键的过期时间</span><br>    dict *expires;<br>    <span class="hljs-comment">// ...</span><br>&#125; redisDb;<br></code></pre></td></tr></table></figure><p>在<code>expires</code>中，每一个键代表的是设置了过期时间的对象键，值为其过期时间。</p><ul><li>过期时间为一个Unix时间戳(Unix Timestamp)。对于那些不知道这是啥的小伙伴，这个时间戳表示了自1970年1月1日 00:00:00 UTC 以来所经过的描述。Redis这里的时间戳代表的是毫秒数。</li></ul><p>对于那些已经设置了过期时间的键，也可以使用<code>PERSIST</code>来移除其过期时间。</p><p>过期键的判定基于当前时间，如果当前时间比键的过期时间大，则代表键过期了，此时调用这个键的<code>is_expired</code>将会返回<code>True</code>。</p><h1>过期键的删除</h1><p>过期键的主流删除策略有如下三种：</p><ul><li><strong>定时删除：</strong> 在设置键的过期时间的同时，创建一个定时器（timer），让定时器在键的过期时间来临时，立即执行对键的删除操作。<ul><li>CPU不友好，内存友好。当同时有大量键需要删除时，会造成明显的性能问题。</li><li>维护定时器的方法为使用一个无序链表。因此查找定时器的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，从这个角度看，也不合理。</li></ul></li><li><strong>惰性删除：</strong> 放任键过期不管，但是每次从键空间中获取键时，都检查取得的键是否过期，如果过期的话，就删除该键；如果没有过期，就返回该键。<ul><li>CPU时间友好，内存不友好。当一个键已经过期了，但长期没有再接到任何访问，则会一只存在于内存中积灰。当有大量键出现如此情况时，则是灾难级的问题。</li></ul></li><li><strong>定期删除：</strong> 每隔一段时间，程序就对数据库进行一次检查，删除里面的过期键。至于要删除多少过期键，以及要检查多少个数据库，则由算法决定。<ul><li>介于定时删除于惰性删除之间的方法。每个一段时间执行一次删除过期键的操作，并且限定该操作的执行时间，以减少对CPU时间的影响。同时，它也确实删除了一些过期键，也会减少内存浪费的现象。</li><li>删除操作的执行时间需要找到一个合理的平衡或者算法，不然过长或过短，都会将该策略变成定时或惰性删除策略。</li></ul></li></ul><p>在这三种策略中，第一种和第三种为主动删除策略，而第二种则为被动删除策略。</p><h2 id="Redis的策略">Redis的策略</h2><p>Redis采用了<strong>定期删除+惰性删除</strong>的综合策略</p><ul><li>惰性删除：就是使用正常的惰性删除逻辑。每一次访问（读写）数据库的Redis命令在执行前都会调用<code>expireIfNeeded</code>函数对输入键进行检查，以判断做一下三个行为的其中一个：<ul><li>没找到输入键数据：返回空值</li><li>找到了输入键数据，但数据过期了：删除数据，并返回空值</li><li>找到了输入键数据且没有过期：返回数据值</li></ul></li><li>定期删除：<code>redis.c/serverCron</code>函数执行时，<code>activeExpireCycle</code>函数就会被调用。它将在规定时间内，分多次遍历服务器中的各个数据库，从<code>expire</code>字典中随机检查一部分键，并删除过期键。<ul><li><code>activeExpireCycle</code>函数中具有一个<code>current_db</code>全局变量，用于记录当前<code>activeExpireCycle</code>的检查进度。下一次调用时，则会从<code>current_db</code>的下一个开始，接着执行。</li><li>当所有数据库检查完毕后，<code>current_db</code>变量重置为<code>0</code>。</li></ul></li></ul><h2 id="对AOF、RDB和复制功能的影响">对AOF、RDB和复制功能的影响</h2><p><strong>生成RDB文件：</strong> 执行<code>SAVE</code>或<code>BGSAVE</code>命令时，会检查数据库中的键，并且过滤掉那些已经过期的键。</p><ul><li><strong>注意：</strong> RDB文件生成阶段只会过滤掉过期键，不会帮助删除过期键！</li></ul><p><strong>载入RDB文件：</strong> RDB文件的载入机制取决于该服务器以主从哪个模式运行：</p><ul><li>主服务器模式：过滤已过期的键，只会把未过期的键载入到数据库中，以确保过期键不会对主服务器造成影响。</li><li>从服务器模式：会把所有键载入到数据库中。不过在进行主从同步时，从服务器的数据会被清空，因此一般来说问题不大。</li></ul><p><strong>AOF文件写入：</strong> 服务器以AOF持久化模式运行时，已过期但未被删除的键不会对AOF文件产生影响（因为本来也没有对过期键做出任何操作）</p><ul><li>在删除一个过期键后，程序会在AOF文件中<code>append</code>一条<code>DEL</code>命令，显式地记录该键已被删除</li><li>在程序访问一个过期键时，由于<code>GET</code>返回的内容为空且程序会将该键删除，所以在AOF文件中只会多出一条<code>DEL</code>命令表示该键已被删除。不会添加<code>GET</code>命令</li></ul><p><strong>AOF重写：</strong> 与RDB的生成类似，会过滤掉已经过期的键。</p><p><strong>复制：</strong> 服务器处于复制模式时，从服务器的过期键删除动作由主服务器控制：</p><ul><li>主服务器删除一个过期键后，会显式对所有从服务器发送一个<code>DEL</code>命令，告知他们需要删除这个过期键</li><li>从服务器只会在收到从主服务器发来的<code>DEL</code>命令之后才会删除指定过期键。所以不论客户端发来的读命令是否是一个过期键，从服务器也还是会像处理未过期的键一样处理过期键。</li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《Redis设计与实现》对象</title>
    <link href="/2025/08/26/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E5%AF%B9%E8%B1%A1/"/>
    <url>/2025/08/26/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<p>这一篇文章中的内容假定你已经读过且了解<a href="/2025/08/25/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E4%B8%83%E4%B8%AA%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">《Redis设计与实现》七个底层数据结构</a>文章中的内容，如没有或者不了解Redis的七个底层数据结构，最好是先去那篇文章看看后再来看这篇。</p><h1>对象</h1><p>前面提到的7个数据结构，可以被视为在Redis系统中的几个基础数据结构。Redis则是基于这些数据结构来创建了一个对象系统。在这个对象系统中，有我们喜闻乐见的五种类型：</p><ul><li>字符串对象： <code>SET msg &quot;hello world&quot;</code></li><li>列表对象：  <code>RPUSH numbers 1 3 5</code></li><li>哈希对象： <code>HMSET profile name Tom age 25 career Programmer</code></li><li>集合对象： <code>SADD fruits apple banana cherry</code></li><li>有序集合对象：  <code>ZADD price 8.5 apple 5.0 6.0 cherry</code></li></ul><table><thead><tr><th>对象</th><th>对象 <code>type</code> 属性的值</th><th>TYPE 命令的输出</th></tr></thead><tbody><tr><td>字符串对象</td><td><code>REDIS_STRING</code></td><td><code>&quot;string&quot;</code></td></tr><tr><td>列表对象</td><td><code>REDIS_LIST</code></td><td><code>&quot;list&quot;</code></td></tr><tr><td>哈希对象</td><td><code>REDIS_HASH</code></td><td><code>&quot;hash&quot;</code></td></tr><tr><td>集合对象</td><td><code>REDIS_SET</code></td><td><code>&quot;set&quot;</code></td></tr><tr><td>有序集合对象</td><td><code>REDIS_ZSET</code></td><td><code>&quot;zset&quot;</code></td></tr></tbody></table><h2 id="基本结构">基本结构</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">redisObject</span> &#123;</span><br>    <span class="hljs-comment">// 该对象的类型</span><br>    <span class="hljs-type">unsigned</span> type:<span class="hljs-number">4</span>;<br>    <span class="hljs-comment">// 编码</span><br>    <span class="hljs-type">unsigned</span> encoding:<span class="hljs-number">4</span>;<br>    <span class="hljs-comment">// 指向底层实现数据结构的指针</span><br>    <span class="hljs-type">void</span> *ptr;<br>    <span class="hljs-comment">// ...</span><br><br>&#125; robj;<br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><code>ptr</code>指针指向的底层数据结构类型取决于<code>encoding</code>属性</li><li><code>encoding</code>属性记录了对象所使用的编码，该编码在Redis的底层c代码中被预定义为常量，为以下的其中一个</li></ul><table><thead><tr><th>编码常量</th><th>编码所对应的底层数据结构</th></tr></thead><tbody><tr><td><code>REDIS_ENCODING_INT</code></td><td><code>long</code> 类型的整数</td></tr><tr><td><code>REDIS_ENCODING_EMBSTR</code></td><td><code>embstr</code> 编码的简单动态字符串</td></tr><tr><td><code>REDIS_ENCODING_RAW</code></td><td>简单动态字符串</td></tr><tr><td><code>REDIS_ENCODING_HT</code></td><td>字典</td></tr><tr><td><code>REDIS_ENCODING_LINKEDLIST</code></td><td>双端链表</td></tr><tr><td><code>REDIS_ENCODING_ZIPLIST</code></td><td>压缩列表</td></tr><tr><td><code>REDIS_ENCODING_INTSET</code></td><td>整数集合</td></tr><tr><td><code>REDIS_ENCODING_SKIPLIST</code></td><td>跳跃表和字典</td></tr></tbody></table><ul><li>Redis中，每种<code>type</code>都至少有两种不同的编码<code>encoding</code></li></ul><table><thead><tr><th>类型</th><th>编码</th><th>对象</th></tr></thead><tbody><tr><td><code>REDIS_STRING</code></td><td><code>REDIS_ENCODING_INT</code></td><td>使用整数值实现的字符串对象。</td></tr><tr><td><code>REDIS_STRING</code></td><td><code>REDIS_ENCODING_EMBSTR</code></td><td>使用 <code>embstr</code> 编码的简单动态字符串实现的字符串对象。</td></tr><tr><td><code>REDIS_STRING</code></td><td><code>REDIS_ENCODING_RAW</code></td><td>使用简单动态字符串实现的字符串对象。</td></tr><tr><td><code>REDIS_LIST</code></td><td><code>REDIS_ENCODING_ZIPLIST</code></td><td>使用压缩列表实现的列表对象。</td></tr><tr><td><code>REDIS_LIST</code></td><td><code>REDIS_ENCODING_LINKEDLIST</code></td><td>使用双端链表实现的列表对象。</td></tr><tr><td><code>REDIS_HASH</code></td><td><code>REDIS_ENCODING_ZIPLIST</code></td><td>使用压缩列表实现的哈希对象。</td></tr><tr><td><code>REDIS_HASH</code></td><td><code>REDIS_ENCODING_HT</code></td><td>使用字典实现的哈希对象。</td></tr><tr><td><code>REDIS_SET</code></td><td><code>REDIS_ENCODING_INTSET</code></td><td>使用整数集合实现的集合对象。</td></tr><tr><td><code>REDIS_SET</code></td><td><code>REDIS_ENCODING_HT</code></td><td>使用字典实现的集合对象。</td></tr><tr><td><code>REDIS_ZSET</code></td><td><code>REDIS_ENCODING_ZIPLIST</code></td><td>使用压缩列表实现的有序集合对象。</td></tr><tr><td><code>REDIS_ZSET</code></td><td><code>REDIS_ENCODING_SKIPLIST</code></td><td>使用跳跃表和字典实现的有序集合对象。</td></tr></tbody></table><p>可以发现，有很多类型中都可能会用到<code>REDIS_ENCODING_ZIPLIST</code>作为底层数据结构，这取决于以下两点：</p><ul><li>集合（列表，哈希，集合）中每一个元素的长度是否小于设定好的阈值</li><li>集合（列表，哈希，集合）的数量是否小于设定好的阈值</li></ul><p>当且仅当以上两点都满足时，才会使用压缩列表作为底层数据结构。这里的考量是因为Redis是基于内存设计的数据库，对内存空间的利用极为敏感。</p><p>对于每一个可能会用到压缩列表作为底层数据结构的对象类型，Redis都可以自定义配置阈值：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span> redis.conf 配置<br><span class="hljs-params">#</span> 列表对象<br>list-max-ziplist-value 64      <span class="hljs-params">#</span> 单个元素大小阈值（字节）<br>list-max-ziplist-entries 512   <span class="hljs-params">#</span> 元素数量阈值<br><br><span class="hljs-params">#</span> 哈希对象<br>hash-max-ziplist-entries 512   <span class="hljs-params">#</span> 字段数量阈值<br>hash-max-ziplist-value 64      <span class="hljs-params">#</span> 字段值长度阈值<br><br><span class="hljs-params">#</span> 有序集合对象<br>zset-max-ziplist-entries 128   <span class="hljs-params">#</span> 元素数量阈值<br>zset-max-ziplist-value 64      <span class="hljs-params">#</span> 元素值长度阈值<br></code></pre></td></tr></table></figure><p>对于集合对象，Redis也可以配置阈值：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span> redis.conf配置<br><span class="hljs-params">#</span> 集合对象中，使用整数集合的阈值<br>set-max-intset-entries 512     <span class="hljs-params">#</span> 元素数量阈值<br></code></pre></td></tr></table></figure><ul><li>使用<code>OBJECT ENCODING ...</code>可以查看一个数据库建的值底层数据结构对象编码。概览如下：</li></ul><table><thead><tr><th>对象所使用的底层数据结构</th><th>编码常量</th><th>OBJECT ENCODING 命令输出</th></tr></thead><tbody><tr><td>整数</td><td><code>REDIS_ENCODING_INT</code></td><td><code>&quot;int&quot;</code></td></tr><tr><td><code>embstr</code> 编码的简单动态字符串（SDS）</td><td><code>REDIS_ENCODING_EMBSTR</code></td><td><code>&quot;embstr&quot;</code></td></tr><tr><td>简单动态字符串</td><td><code>REDIS_ENCODING_RAW</code></td><td><code>&quot;raw&quot;</code></td></tr><tr><td>字典</td><td><code>REDIS_ENCODING_HT</code></td><td><code>&quot;hashtable&quot;</code></td></tr><tr><td>双端链表</td><td><code>REDIS_ENCODING_LINKEDLIST</code></td><td><code>&quot;linkedlist&quot;</code></td></tr><tr><td>压缩列表</td><td><code>REDIS_ENCODING_ZIPLIST</code></td><td><code>&quot;ziplist&quot;</code></td></tr><tr><td>整数集合</td><td><code>REDIS_ENCODING_INTSET</code></td><td><code>&quot;intset&quot;</code></td></tr><tr><td>跳跃表和字典</td><td><code>REDIS_ENCODING_SKIPLIST</code></td><td><code>&quot;skiplist&quot;</code></td></tr></tbody></table><p>接下来会介绍五种不同对象类型的具体内容</p><h1>字符串对象 string</h1><p>基本创建方式：<code>SET [key] [value]</code></p><h2 id="编码">编码</h2><ul><li><code>int</code>：如果输入的<code>[value]</code>为整数值，且可以用<code>long</code>类型标识，则该对象中，<code>ptr</code>指向的是一个<code>long</code>类型，且字符串编码<code>encoding</code>设置为<code>int</code><ul><li>如果输入的<code>[value]</code>长度太大导致没办法用<code>long</code>表示，则<code>ptr</code>会指向一个<code>embstr</code>或<code>raw</code>结构。</li></ul></li><li><code>raw</code>：如果输入的<code>[value]</code>为一个长度大于<code>39</code>字节的字符串，则该对象中，<code>ptr</code>指向的是一个<code>sdshdr</code>（简单动态字符串）结构。</li><li><code>embstr</code>：如果输入的<code>[value]</code>为一个长度小于等于<code>39</code>字节的字符串，则该对象中，<code>ptr</code>指向的也是一个<code>sdshdr</code>，并将字符串编码<code>encoding</code>设为<code>embstr</code><ul><li>与<code>raw</code>所使用的底层结构虽然相同（都是用的<code>sdshdr</code>），但是<code>embstr</code>在创建对象时，会创建一个连续的空间，将<code>redisObject</code>对象和<code>sdshdr</code>结构先后放在一起。因此，<code>embstr</code>的创建只需要分配一次内存，释放也只需要释放一次内存。</li></ul></li><li>如果输入的<code>[value]</code>为浮点数（可被<code>long double</code>类型标识），则该对象中，<code>ptr</code>指向的将是一个<code>embstr</code>或<code>raw</code>（取决于该浮点数转化为字符串之后的长度）<ul><li>在读取这类对象的时候，程序会将字符串对象的字符串值转为浮点数值，经过某些操作后，再将其转回为字符串值并存入对象中。</li></ul></li></ul><h2 id="编码转换">编码转换</h2><p>在某些情况下，字符串对象的编码会发生转换：</p><ul><li>原对象中存储的是<code>int</code>对象，但是对其操作时加入了一个字符串值，则会将该对象的编码变为<code>raw</code><ul><li>这种情况即使在对象修改后长度小于等于<code>39</code>时也会发生。这是因为Redis对于每一个字符串类型的设计理念有着明确的分工。其中<ul><li><code>int</code>是一个只读的整型</li><li><code>embstr</code>是一个只读的短字符串</li></ul></li><li>如果要将<code>int</code>修改为<code>embstr</code>，则会涉及到一些复杂的内存空间创建逻辑，且在代码层面上会使逻辑出现更多分支。</li><li>对象修改之后也许会再次遭到修改，那么用<code>raw</code>这种支持更新的编码类型将更好。</li></ul></li><li>原对象中存储的是<code>embstr</code>对象，但是对其操作时加入了一个另一个值，则会将该对象编码变为<code>raw</code><ul><li>原因在于，Redis没有为<code>embstr</code>编码的字符串编写任何修改程序，所以可以视为<code>embstr</code>对象是“只读”对象。因此，在需要对这类对象进行修改时，程序会将<code>embstr</code>修改为<code>raw</code>，然后进行修改。</li></ul></li></ul><h1>列表对象 list</h1><p>基本创建方式：<code>RPUSH [key] [value1] [value2] ...</code></p><h2 id="编码-2">编码</h2><ul><li><code>ziplist</code>：如果创建时给定的<code>[value1] ...</code> 使用的是<code>ziplist</code>编码（需满足<code>ziplist</code>基本要求和满足列表使用<code>ziplist</code>的阈值），则该对象中，<code>ptr</code>指向的是一个<code>ziplist</code></li><li><code>linkedlist</code>：如果创建时个定的<code>[value1] ...</code>使用的是<code>linkedlist</code>编码（未满足<code>ziplist</code>基本要求和超出了列表使用<code>ziplist</code>的阈值），则该对象中，<code>ptr</code>指向的是一个<code>linkedlist</code><ul><li><strong>需要注意的是，在<code>linkedlist</code>中，列表对象底层包含的是多个字符串<code>sdshdr</code>对象。</strong></li></ul></li></ul><h2 id="编码转换-2">编码转换</h2><p>之前提过Redis底层会自动基于用户输入的<code>value</code>值决定是否使用<code>ziplist</code>，这也是基于之前提过几个阈值：</p><ul><li>列表对象保存的所有字符串元素长度都小于阈值（默认为<code>64</code>）字节；</li><li>列表对象保存的元素数量小于阈值（默认为<code>512</code>个）；</li></ul><p>所对应的在<code>redis.conf</code>配置文件中的配置条目为：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tex"><span class="hljs-params">#</span> 列表对象<br>list-max-ziplist-value 64      <span class="hljs-params">#</span> 单个元素大小阈值（字节）<br>list-max-ziplist-entries 512   <span class="hljs-params">#</span> 元素数量阈值<br></code></pre></td></tr></table></figure><p>若是对象原本使用的是<code>ziplist</code>编码，在对对象进行操作导致其无法满足以上两个条件的任意一个时，对象的编码转换操作就会执行：将原本在<code>ziplist</code>中的元素转移到<code>linkedlist</code>中，并将编码转为<code>linkedlist</code>。</p><ul><li><strong>注意：</strong> 这一过程是不可逆的。这意味着一旦编码变为了<code>linkedlist</code>，便不会再变回<code>ziplist</code>。这是因为Redis考虑了防抖动机制和避免过多的内存空间重分配的情况。</li></ul><h1>哈希对象 hash</h1><p>基本创建方式：<code>HSET [key] [hash key1] [hash value1] ...</code></p><h2 id="编码-3">编码</h2><ul><li><code>ziplist</code>：当对象保存的所有键值长度都小于配置阈值时，该对象的<code>ptr</code>指向的是一个<code>ziplist</code>，编码<code>encoding</code>将设为<code>ziplist</code><ul><li><code>ziplist</code>内部结构为紧凑的键-值对。在添加一个新键值对时，哈希对象会先将键的压缩列表节点推到压缩列表尾部，然后再将值的压缩列表节点推到压缩列表尾部。</li></ul></li><li><code>hashtable</code>：当对象保存的键值中有任意一个不满足<code>ziplist</code>阈值，该对象的<code>ptr</code>将指向一个<code>dict</code>（字典结构）,编码<code>encoding</code>将设为<code>hashtable</code></li><li>字典中的每一个键和值都是字符串对象<code>StringObject</code>，底层实现都是<code>sdshdr</code></li></ul><h2 id="编码转换-3">编码转换</h2><p>哈希对象同样基于两个阈值来决定是否使用<code>ziplist</code>编码：</p><ul><li>哈希对象保存的所有键值对的键和值的字符串长度都小于阈值（默认<code>64</code>字节）；</li><li>哈希对象保存的键值对数量小于<code>512</code>个；</li></ul><p>所对应的<code>redis.conf</code>配置文件中的配置条目为：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tex">hash-max-ziplist-entries 512   <span class="hljs-params">#</span> 字段数量阈值<br>hash-max-ziplist-value 64      <span class="hljs-params">#</span> 字段值长度阈值<br></code></pre></td></tr></table></figure><p>哈希对象通过某些操作导致无法满足这两个条件时，该哈希对象的编码将变为<code>hashtable</code>：原本保存在压缩列表里的所有键值对都将转移并保存到字典中</p><ul><li><strong>注意：</strong> 与列表一样，此过程是不可逆的。不存在变成<code>hashtable</code>后又变回<code>ziplist</code>的情况。</li></ul><h1>集合对象 set</h1><p>基本创建方式：<code>SADD [key] [value1] [value2] ...</code></p><h2 id="编码-4">编码</h2><ul><li><code>intset</code>：输入的<code>[value]</code>值满足集合对象使用<code>intset</code>的阈值时，该对象会采用<code>intset</code>作为编码，<code>ptr</code>将指向一个<code>intset</code>结构</li><li><code>hashtable</code>：输入的<code>[value]</code>值没有满足集合对象使用的阈值时，该对象会采用<code>hashtable</code>作为编码，<code>ptr</code>将指向一个<code>hashtable</code>结构</li></ul><h2 id="编码转换-4">编码转换</h2><p>集合对象需要在同时满足以下两个条件时，使用<code>intset</code>编码：</p><ul><li>集合对象保存的所有元素都是整数值；</li><li>集合对象保存的元素数量不超过设定阈值（默认<code>512</code>个）；</li></ul><p>所对应的<code>redis.conf</code>配置文件中的配置条目为：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tex">set-max-intset-entries 512     <span class="hljs-params">#</span> 元素数量阈值<br></code></pre></td></tr></table></figure><p>对于<code>intset</code>编码的集合对象来说，当任意一个条件未被满足时，对象的编码转换操作就会被执行：原本整数集合中的所有元素都将被转移保存到字典中，并且对象的编码变为<code>hashtable</code>。</p><h1>有序集合对象 zset</h1><p>基本创建方式：<code>ZADD [key] [score1] [item1] ...</code></p><p>有序集合对象中的元素按照给定的<code>[score]</code>从小到大排序</p><h2 id="编码-5">编码</h2><ul><li><p><code>ziplist</code>：当对象元素都满足有序集合对象的配置阈值时，该对象将会使用<code>ziplist</code>进行编码，并且<code>ptr</code>将指向一个<code>ziplist</code>结构</p><ul><li>存储套路与哈希对象<code>hash</code>相似，不过变成了前一个节点保存元素成员<code>[item]</code>，后一个元素保存元素分支<code>[score]</code>。</li></ul></li><li><p><code>skiplist</code>：当对象元素没有满足有序集合对象的配置阈值时，该对象将会使用<code>skiplist</code>进行编码，并且<code>ptr</code>将指向一个<code>zset</code>结构</p><ul><li><p><strong>注意：</strong> <code>ptr</code>并没有直接指向一个<code>skiplist</code>结构，而是一个<code>zset</code>结构。该结构的定义如下：</p></li><li><pre><code class="language-c">typedef struct zset&#123;    zskiplist *zsl;    dict *dict;&#125;</code></pre></li><li><p>可见该结构中，同时包含了一个字典和一个跳表</p><ul><li><strong>跳表：</strong> 按照元素的分值从小到大保存了所有集合元素。跳表节点的<code>object</code>属性保存了元素成员<code>[item]</code>，而跳表节点的<code>score</code>属性保存了元素的分值<code>[score]</code>。因此，可以通过使用这个跳表来执行范围型操作。</li><li><strong>字典：</strong> 维护着集合元素中所有成员与其分值的映射。键为成员，值为对应成员的分值。这样可以以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>的复杂度快速找到对应成员的分值。</li></ul></li><li><p>并用两个结构的动机是：</p><ul><li>充分利用跳表的特性来高效执行范围操作</li><li>充分利用字典的特性来高效执行查找操作</li><li>用两个结构来存储相同内容是否会导致数据重复而影响内存？不会，因为他们共享了元素的成员和分值。</li></ul></li></ul></li></ul><h2 id="编码转换-5">编码转换</h2><p>当有序集合对象可以同时满足一下两个条件时，对象是用<code>ziplist</code>编码：</p><ul><li>有序集合保存的元素数量小于阈值（默认为<code>128</code>个）；</li><li>有序集合保存的所有元素成员长度均小于阈值（默认<code>64</code>字节）；</li></ul><p>所对应在<code>redis.conf</code>配置文件中的配置条目为：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tex">zset-max-ziplist-entries 128   <span class="hljs-params">#</span> 元素数量阈值<br>zset-max-ziplist-value 64      <span class="hljs-params">#</span> 元素值长度阈值<br></code></pre></td></tr></table></figure><p>对于使用 <code>ziplist</code> 编码的有序集合对象来说， 当使用 <code>ziplist</code> 编码所需的两个条件中的任意一个不能被满足时， 程序就会执行编码转换操作， 将原本储存在压缩列表里面的所有集合元素转移到 <code>zset</code> 结构里面， 并将对象的编码从 <code>ziplist</code> 改为 <code>skiplist</code> 。</p><h1>对象方法的多态性</h1><p>在使用Redis命令的时候，可以发现有些领命在许多中不同的编码方式，或者说类型中都可以使用。这通常被视为是一种多态性。</p><p>Redis在执行一个命令的时候，会检查输入键的类型是否正确，然后决定是否执行给定的命令。如果不对，通常会返回一个类型错误。</p><p>我们可以注意到，<code>redisObject</code>结构中存在一个<code>type</code>属性。而Redis检查一个命令是否可以用于一个对象，便是取决于检查给定对象中这个<code>type</code>。</p><p>另一方面，我们又可以注意到，在Redis检查通过了一个命令可以用于一个对象后，也许对象的<code>encoding</code>并不唯一。这便凸显出了Redis的对象方法的多态性。打个比方，在<code>type = list</code>的情况下，<code>LLEN</code>指令可以用于获取列表对象的长度：</p><ul><li>如果列表对象的编码为 <code>ziplist</code> ， 那么说明列表对象的实现为压缩列表， 程序将使用 <code>ziplistLen</code> 函数来返回列表的长度；</li><li>如果列表对象的编码为 <code>linkedlist</code> ， 那么说明列表对象的实现为双端链表， 程序将使用 <code>listLength</code> 函数来返回双端链表的长度；</li></ul><p>还有许多其他的命令也具有这样的多态性，如<code>DEL, EXPIRE, TYPE</code>等。而他们与<code>LLEN</code>这类指令的区别是，前者是基于<code>type</code>属性的多态，后者是基于<code>encoding</code>的多态。</p><h1>内存回收</h1><p>Redis在自己的对象系统中构建了一个引用计数(reference counting)技术实现只能得内存回收机制。目前看来，这个机制很像python中的计数器。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">redisObject</span>&#123;</span><br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-type">int</span> refcount; <span class="hljs-comment">// 引用计数</span><br>    <span class="hljs-comment">// ...</span><br>&#125; robj;<br></code></pre></td></tr></table></figure><p>机制与python很像：</p><ul><li>创建新对象时，引用计数值初始化为<code>1</code>；</li><li>对象被新程序使用时，将调用<code>incrRefCount</code>函数，使引用计数值增加<code>1</code>；</li><li>对象不在被一个程序使用时，将调用<code>decrRefCount</code>函数，是引用计数值减少<code>1</code>；</li><li>对象的引用计数为<code>0</code>时，对象所占用的内存将被释放</li></ul><p>还有一个函数为<code>resetRefCount</code>，用于将对象的引用计数设置为<code>0</code>，但这一函数并不会释放对象内存，因为其通常在需要重新设置对象引用计数值时使用。</p><h2 id="对象共享">对象共享</h2><p>Redis中使用引用计数器实现了对象共享的功能：假如之前创建了一个对象A且没有被内存回收，现在又要创建另一个对象B，且里面的元素与对象A的相同。这时候并不会真的为对象B的元素去创建一个新对象，而是将其直接与对象A的元素共享，并将其引用计数加一。</p><p>不过有如下内容需要 <strong>注意：</strong></p><ul><li>共享对象的值只能是整数类型</li><li>数据结构中嵌套了字符串对象的对象，也可以使用这些共享对象（也只能是整数类型）</li></ul><p>共享对象的值只能是整数类型的解释为：</p><ul><li>验证整数值的字符串对象所需的复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li>验证字符串值的字符串对象所需的复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></li><li>验证多个值（对象）的对象，比如列表或哈希，那么复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>出现相同的字符串值和包含了多个值的对象的概率，比出现相同整数值的概率要小的多</li></ul><p>综上所述，并没有必要去给字符串值等字符串对象设计对象共享机制，这样自己很容易让程序的复杂度变高许多。</p><h1>对象的空转时长</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">redisObject</span> &#123;</span><br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-type">unsigned</span> lru:<span class="hljs-number">32</span>;<br>    <span class="hljs-comment">// ...</span><br>&#125; robj;<br></code></pre></td></tr></table></figure><p><code>redisObject</code>结构还包含一个<code>lru</code>属性，该属性用于记录该对象最后一次被命令程序访问的时间。用这个时间，可以得到该对象的空转时间。在进行自动内存回收算法时将会用到该属性。</p><p><strong>注意：</strong> 使用<code>OBJECT IDLETIME [key]</code>可以查看<code>[key]</code>对象的空转时长。但是这个命令并不会更新<code>[key]</code>对象的<code>lru</code>属性。</p>]]></content>
    
    
    <categories>
      
      <category>Redis学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《Redis设计与实现》七个底层数据结构</title>
    <link href="/2025/08/25/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E4%B8%83%E4%B8%AA%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2025/08/25/Redis%E5%AD%A6%E4%B9%A0/%E3%80%8ARedis%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B%E4%B8%83%E4%B8%AA%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1>简单动态字符串 SDS（Simple Dynamic String）</h1><h2 id="基本结构">基本结构</h2> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sdshdr</span>&#123;</span><br>    <span class="hljs-type">int</span> len; <span class="hljs-comment">// buf数组中已使用字节的数量 (SDS所保存字符串的长度)</span><br>    <span class="hljs-type">int</span> <span class="hljs-built_in">free</span>; <span class="hljs-comment">// buf数组中未使用字节的数量</span><br>    <span class="hljs-type">char</span> buf[]; <span class="hljs-comment">// 字节数组，用于保存字符串</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><code>char buf[]</code> 与C语言中用于描述字符串的方式相同，也会在末尾加一个<code>\0</code>来表示字符串结束，因此，<code>buf[]</code>的真正长度应是<code>len + 1</code></li></ul><h2 id="动机">动机</h2><ul><li><p><code>char buf[]</code>的结构允许了该数据结构可以直接使用C字符串函数中的函数</p></li><li><p>将获取字符串长度的时间复杂度从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>变为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></li><li><p>杜绝缓冲区溢出，原因与下一个点的内存分配方式有关</p></li><li><p>减少了修改字符串内容时带来的内存重分配次数</p><ul><li>内存预分配：在修改字符串导致长度超出结构允许范围时（<code>free &lt; 0</code>），会触发该机制。具体逻辑取决于字符串修改后的大小<ul><li>大小 &lt; 1mb：额外分配与<code>len</code>属性相同大小的未使用空间</li><li>大小 &gt; 1mb：额外分配1mb未使用空间</li></ul></li><li>缩短字符串则不会触发内存预分配，而是将预留的空间空出来，并且在<code>free</code>属性中表示剩余空间。这杯成为惰性空间释放策略。<ul><li>SDS拥有相应的API，用于释放未使用空间。</li></ul></li></ul></li><li><p>保证了二进制安全：允许空字符存在于字符串中</p><ul><li>C语言中会用空字符来分割多个字符串，而SDS则仅通过<code>len</code>属性来决定字符串是否结束。</li><li>SDS API会以处理二进制的方式处理<code>buf</code>中的数据，其写入时是什么样，读取时便就是什么样。</li></ul></li></ul><h1>链表 LinkedList / ListNode</h1><h2 id="基本结构-2">基本结构</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">listNode</span>&#123;</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">listNode</span> *<span class="hljs-title">prev</span>;</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">listNode</span> *<span class="hljs-title">next</span>;</span><br>    <span class="hljs-type">void</span> *value;<br>&#125; listNode;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">list</span>&#123;</span><br>    listNode *head; <span class="hljs-comment">//头结点</span><br>    listNode *tail; <span class="hljs-comment">//尾节点</span><br>    usgined <span class="hljs-type">long</span> len; <span class="hljs-comment">//链表长度</span><br>    <span class="hljs-type">void</span> *(*dup) (<span class="hljs-type">void</span> *ptr); <span class="hljs-comment">//复制节点函数</span><br>    <span class="hljs-type">void</span> *(*<span class="hljs-built_in">free</span>) (<span class="hljs-type">void</span> *ptr); <span class="hljs-comment">//节点释放函数</span><br>    <span class="hljs-type">int</span> (*match) (<span class="hljs-type">void</span> *ptr, <span class="hljs-type">void</span> *key) <span class="hljs-comment">//节点值对比函数</span><br>&#125; <span class="hljs-built_in">list</span>;<br></code></pre></td></tr></table></figure><h2 id="特性">特性</h2><ul><li>双端：链表节点带有<code>prev</code>和<code>next</code>指针</li><li>无环：双端尽头都是<code>NULL</code>节点，链表访问以<code>NULL</code>为终点</li><li>带表头与表尾：可以轻松访问头结点和尾节点</li><li>带链表长度计数器：访问链表长度的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li>多态：用<code>void*</code>来保存节点值，并且<code>dup, free, match</code>三个属性节课对节点值设置类型特定函数。这让链表可以同时保存各种不同类型的值</li></ul><h1>字典</h1><h2 id="基本结构-3">基本结构</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 哈希表</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dictht</span>&#123;</span><br>    <span class="hljs-comment">// 哈希表数组</span><br>    dictEntry **table;<br>    <br>    <span class="hljs-comment">// 哈希表的大小</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> size;<br>    <br>    <span class="hljs-comment">// 哈希表大小掩码，用于计算索引值</span><br>    <span class="hljs-comment">// 总是等于 size - 1</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> sizemask;<br>    <br>    <span class="hljs-comment">// 该哈希表已有节点数量</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> used;<br>&#125; dictht;<br><br><span class="hljs-comment">// 哈希表节点</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dictEntry</span>&#123;</span><br>    <span class="hljs-comment">// 键</span><br>    <span class="hljs-type">void</span> *key;<br>    <br>    <span class="hljs-comment">// 值</span><br>    <span class="hljs-class"><span class="hljs-keyword">union</span>&#123;</span><br>        <span class="hljs-type">void</span> *val;<br>        uint64_tu64;<br>        int64_ts64;<br>    &#125; v;<br>    <br>    <span class="hljs-comment">// 指向下一个哈希表节点，形成链表</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dictEntry</span> *<span class="hljs-title">next</span>;</span><br>&#125; dictEntry;<br><br><span class="hljs-comment">// Redis中的字典</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dict</span>&#123;</span><br>    <span class="hljs-comment">// 类型特定函数</span><br>    dictType *type;<br>    <span class="hljs-comment">// 私有数据</span><br>    <span class="hljs-type">void</span> *privdata;<br>    <span class="hljs-comment">// 哈希表</span><br>    dictht ht[<span class="hljs-number">2</span>];<br>    <span class="hljs-comment">// rehash索引</span><br>    <span class="hljs-comment">// 当rehash不在进行时，值为-1</span><br>    <span class="hljs-type">int</span> trehashidx;<br>&#125; dict;<br><br><span class="hljs-comment">// dictType</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">dictType</span>&#123;</span><br>    <span class="hljs-comment">// 计算哈希值的函数</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-title function_">int</span> <span class="hljs-params">(*hashFunction)</span> <span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">void</span> *key)</span>;<br>    <span class="hljs-comment">// 复制键的函数</span><br>    <span class="hljs-type">void</span> *(*keyDup) (<span class="hljs-type">void</span> *privdata, <span class="hljs-type">const</span> <span class="hljs-type">void</span> *key);<br>    <span class="hljs-comment">// 复制值的函数</span><br>    <span class="hljs-type">void</span> *(*valDup) (<span class="hljs-type">void</span> *privdata, <span class="hljs-type">const</span> <span class="hljs-type">void</span> *obj);<br>    <span class="hljs-comment">// 对比键的函数</span><br>    <span class="hljs-type">int</span> (*keyCompare) (<span class="hljs-type">void</span> *privdata, <span class="hljs-type">const</span> <span class="hljs-type">void</span> *key1, <span class="hljs-type">const</span> <span class="hljs-type">void</span> *key2);<br>    <span class="hljs-comment">// 销毁键的函数</span><br>    <span class="hljs-type">void</span> (*keyDestructor) (<span class="hljs-type">void</span> *privdata, <span class="hljs-type">void</span> *key);<br>    <span class="hljs-comment">// 销毁值的函数</span><br>    <span class="hljs-type">void</span> (*valDestructor) (<span class="hljs-type">void</span> *privdata, <span class="hljs-type">void</span> *obj);<br>&#125; dictType;<br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><p><code>*next</code>用于解决键冲突问题，当有多个值的索引（哈希值）相等，便会在哈希表数组中的索引位置上形成链表</p></li><li><p><code>ht</code>属性为一个包含两个项的数组，一般只会用<code>ht[0]</code>哈希表，当需要对<code>ht[0]</code>进行rehash的时候才会使用<code>ht[1]</code>，在rehash结束后，<code>ht[0] = ht[1]; ht[1] = 空的哈希表</code></p></li></ul><h2 id="哈希算法">哈希算法</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 将 k0, v0添加到字典中</span><br><span class="hljs-comment">// 第一步： 计算hash值</span><br>hash = dict-&gt;type-&gt;hashFunction(k0);<br><br><span class="hljs-comment">// 第二部： 计算索引值</span><br><span class="hljs-comment">// 此处的x取决于当时的情况，x in [0,1]</span><br>index = hash &amp; dict-&gt;ht[x].sizemask;<br></code></pre></td></tr></table></figure><ul><li><p><em>当字典被用作数据库的底层实现，或哈希键的底层实现时，Redis使用MurmurHash2算法来计算键的哈希值</em></p><div class="note note-info">            <ul><li><p><strong>注意：<strong>目前来说，对于某些场景来说，Redis依然使用MurmurHash2算法。但是现在默认算法为</strong>SipHash</strong>。该算法主要是为了方式<strong>Hash Flooding/ Hash DoS</strong>攻击。该类攻击会构造大量哈希冲突的键，使哈希表退化成链表，导致性能急剧下降。而<strong>SipHash</strong>是一种加密强度更高的哈希函数，能有效抵御此类攻击。</p></li><li><p>用户可以在编译时定义USE_MURMUR宏，或是运行时配置<code>server.should_use_murmur</code>变量，将哈希算法换为性能更高的<strong>MurmurHash2</strong>。</p></li><li><p>在一些特殊环境下，比如集群和哨兵环境下，或者在哈希键中，哈希算法也会有所不同。</p></li></ul>          </div></li></ul><h2 id="键冲突">键冲突</h2><p>Redis的键冲突的解决方法与Java的HashMap类似，也是使用链地址法将冲突键元素构造成链表（Redis不会在一定长度后变成红黑树）。只是要注意，由于<code>dictEntry</code>节点组成的链表没有执行链表尾部的指针，所以在添加新元素进链表时，会将元素放在表头。<code>dict-&gt;table[x]</code>一开始指向的是一个<code>NULL</code>节点，因此最终会形成一个尾部指向<code>NULL</code>节点的链表。</p><h2 id="重哈希-Rehash-扩容与缩容">重哈希 Rehash &amp; 扩容与缩容</h2><p>Redis同样拥有自己的容量控制机制。该机制通过执行rehash操作来完成。操作流程大致如下：</p><pre><code class=" mermaid">graph TD1[rehash开始] --扩展操作--&gt; 2[&quot;ht[1].size = ht[0].used*2&quot;]1 --收缩操作--&gt; 3[&quot;ht[1].size = ht[0].used&quot;]2 --&gt; 4[&quot;h[1] = rehashed(ht[0])&quot;]3 --&gt; 44 --&quot;ht[0]为空时&quot;--&gt; 5[&quot;free(ht[0]); ht[0] = ht[1]; ht[1] = 空dictht&quot;]</code></pre><ul><li><code>ht[0].size</code>和<code>ht[1].size</code>都维持在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo separator="true">,</mo><mi>n</mi><mo>∈</mo><mi mathvariant="double-struck">Z</mi></mrow><annotation encoding="application/x-tex">2^n, n\in \mathbb{Z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8588em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">Z</span></span></span></span>。修改后的值为大于其值的最小<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>。比如修改后<code>ht[1].size = 6</code>，大于6且最小的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>为8，因此最终<code>ht[1].size = 8</code></li></ul><p>Redis中哈希表的扩展与收缩原则与Java的有所不同。当一下任意条件满足时，程序会自动对哈希表执行扩展操作：</p><ul><li>服务器目前没有在执行<strong>BGSAVE</strong>命令或<strong>BGREWRITEAOF</strong>命令，且哈希表负载因子大于等于1。</li><li>服务器目前正在执行<strong>BGSAVE</strong>或<strong>BGREWRITEAOF</strong>命令，且哈希表负载因子大于等于5。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 负载因子为</span><br>load_factor = ht[<span class="hljs-number">0</span>].used / ht.size<br></code></pre></td></tr></table></figure><p>负载因子在两种情况不同的原因为，<strong>BGSAVE</strong>和<strong>BGREWRITEAOF</strong>命令的过程会产生子进程。大多数操作系统都会采用**COW（copy-on-write)**技术来优化子进程的执行效率，因此在子进程存在期间，服务器会提高执行扩展操作所需的负载因子，以尽可能避免子进程存在期间进行哈希表扩展操作，以避免不必要的内存写入操作。</p><h3 id="BGSAVE-和-BGREWRITEAOF">BGSAVE 和 BGREWRITEAOF</h3><p>这本书往后看应该也会有该内容的解释，但现在我没看到，因此先写在这里</p><p><strong>BGSAVE：</strong></p><ul><li>目的是为当前Redis数据库生成一个快照，并将其持久化进磁盘。以避免在服务器宕机等可能问题时丢失信息。</li><li>生成的是RDB文件，里面只包含了Redis的数据信息。</li><li>每次执行都会将Redis中所有数据写入文件。</li><li>由于每次执行都要写入全量信息，I/O压力较大。然而，这个机制会在子进程中执行，所以不会对主进程造成多少阻塞</li></ul><p><strong>BGREWRITEAOF：</strong></p><ul><li>目的是为已经的AOF文件优化内部内容（重写AOF文件），以整理和清理不必要的命令序列。</li><li>后台异步执行。</li><li>背景： <strong>AOF</strong>文件（日志）会记录每一个写操作，因此会不断变大。然而随着日志变大可能会使某些命令变得冗余（比如一个数据被set了几十次，但只有最后一次是有用的），需要某种机制来清除这类问题。这样既可以节省空间，也会简化命令执行，优化恢复效率。</li></ul><p>因为不论是BGSAVE还是BGREWRITEAOF命令都会创建子进程，因此在其流程中，主进程的任何写操作都会触发COW技术。而哈希表的扩容过程中会出现大量的写操作，因此该操作在与这两个命令同时执行的时候会导致程序性能大大降低。因此，Redis将在执行这两个命令时，哈希表的扩容负载因子阈值增大到了5，以尽可能避免两个操作同时运行。</p><h3 id="渐进式rehash">渐进式rehash</h3><p>当redis字典中存在过多键值对，比如千万级别的数据量时，寻常的rehash方法可能会因为过于庞大的数据量的写入导致服务器出现明显卡顿。Redis提出了一个简单的方法来解决这个问题：将rehash流程拆分成多个离散的流程，使<code>ht[0]</code>中的数据逐步被rehash到<code>ht[1]</code>中，并且同时允许其他操作进行。</p><p>具体流程如下：</p><ul><li>Redis中的字典维护了一个<code>rehashidx</code>属性。该属性在一般情况下都为-1，代表目前并未有rehash命令正在进行。当rehash命令开始时，该属性值将被设为0。</li><li>rehash过程中，只会从<code>ht[0]</code>中rehash索引位置为<code>rehashidx</code>上的数据。当该索引下所有数据都被rehash到<code>ht[1]</code>后，<code>rehashidx += 1</code>。</li><li>当<code>ht[0]</code>中的数据全部被rehash到<code>ht[1]</code>后，<code>rehashidx = -1</code>，表示rehash操作已完成。</li></ul><p>该方法避免了集中式rehash带来的庞大计算开销，同时也可以保证对哈希表的操作不受到阻碍：</p><ul><li>在渐进式rehash的过程中，字典会同时使用<code>ht[0]</code>和<code>ht[1]</code>。具体来说，当要对某个数据进行读取或更新时，会先从<code>ht[0]</code>中找，找不到则会去<code>ht[1]</code>中找。<ul><li>由于Redis是一个单线程的命令模型，因此不会出现并发状态下数据冲突的问题。比如某个键正在rehash的时候，来了个访问该数据的请求。此时该请求会在这个键rehash结束之后，正常访问到对应的数据。</li></ul></li></ul><h1>跳跃表（跳表）SkipList</h1><h2 id="基本结构-4">基本结构</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 跳表节点</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">zskiplistNode</span>&#123;</span><br>    <span class="hljs-comment">// 层</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">zskiplistLevel</span> &#123;</span><br>        <span class="hljs-comment">// 前进指针</span><br>        <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">zskiplistNode</span> *<span class="hljs-title">forward</span>;</span><br>        <br>        <span class="hljs-comment">// 跨度</span><br>        <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> span;<br>    &#125; level[];<br>    <br>    <span class="hljs-comment">// 后退指针</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">zskiplistNode</span> *<span class="hljs-title">backward</span>;</span><br>    <br>    <span class="hljs-comment">//分值</span><br>    <span class="hljs-type">double</span> score;<br>    <br>    <span class="hljs-comment">// 成员对象</span><br>    robj *obj;<br>&#125; zskiplistNode;<br><br><span class="hljs-comment">// 跳表</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">zskiplist</span>&#123;</span><br>    <span class="hljs-comment">// 头节点与尾节点</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">zskiplistNode</span> *<span class="hljs-title">header</span>, *<span class="hljs-title">tail</span>;</span><br>    <br>    <span class="hljs-comment">// 表中节点数量</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> length;<br>    <br>    <span class="hljs-comment">// 表中层数最大的节点的层数</span><br>    <span class="hljs-type">int</span> level;<br>&#125; zskiplist;<br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>跳表中，分值小的节点永远在分值大的节点前面。</li><li>跳表是一个有序链表</li><li>每个跳表节点的层高都是1至32的随机值，随机函数基于末次定律（越大的数出现的概率越小）</li><li>同一个跳表中可以有多个节点包含相同的分值，但节点的成员对象必须是唯一的</li><li>分值相同时，节点按照成员对象的大小进行排序</li></ul><h2 id="特性-2">特性</h2><ul><li>跳表可以很快地（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>复杂度）用于判断一个范围内是否存在值 。</li><li>插入，删除，读取某个元素的平均时间复杂度均为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，最差为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>。</li><li>支持范围删除和范围搜索。且时间复杂度都可以保证在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>以下</li></ul><p>总的来说，跳表在利用了稍微偏大的空间的情况下，换来了很低的时间复杂度。</p><h1>整数集合（集合）IntSet</h1><h2 id="基本结构-5">基本结构</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">intset</span> &#123;</span><br>    <span class="hljs-comment">// 编码方式</span><br>    <span class="hljs-type">uint32_t</span> encoding;<br>    <span class="hljs-comment">// 集合包含的元素数量</span><br>    <span class="hljs-type">uint32_t</span> length;<br>    <span class="hljs-comment">// 保存元素的数组</span><br>    <span class="hljs-type">int8_t</span> contents[];<br>&#125; intset;<br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><code>contents[]</code>中元素的类型并不是<code>int8_t</code>，其中类型只取决于<code>encoding</code>的属性值<ul><li><code>encoding</code>属性值：<code>INTSET_ENC_INT16, INTSET_ENC_INT32, INTSET_ENC_INT64</code>。代表16,32,64为整数。</li></ul></li><li><code>contents[]</code>中的元素按从小到大有序排列，切不包含重复项</li><li><code>encoding</code>的属性值取决于集合中最大的数所需的元素类型，具体实现与<strong>升级</strong>规则有关</li></ul><h2 id="升级机制">升级机制</h2><p>当需要将一个新元素添加进集合中，且该元素类型比集合中所有元素类型都要长时，便会先触发升级机制，然后再将元素放进集合中。步骤如下：</p><ol><li>根据新元素的类型，重新计算底层数组所需空间，并重新分配空间</li><li>将底层数组中的所有原元素类型转为新的元素类型，并将每一个元素放在正确的位上，并保持顺序不变<ul><li>在步骤1后，底层数组将会被重新分配空间。原数组中的每一个元素将会以他们的下标来计算他们的空间（位）其实位置，并将其占用空间设为新的元素类型所需空间。</li></ul></li><li>将新元素加入底层数组</li></ol><p><strong>注意：整数集合不具有降级机制</strong>，这意味着即便当前集合中没有与元素类型所需的足够大的元素，也依然会保持原本的元素类型。</p><p>由于在最差情况下，每一次插入新元素都需要触发升级机制，所以插入的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>。不过由于<code>intset</code>最大支持64位整型，从8位开始升级，总共最多需要升3次，所以平均复杂度应<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>小于</mtext><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">小于O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">小于</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>（由于插入的算法用的是二分法，所以平均复杂度应为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>）。</p><h1>压缩列表 ZipList</h1><p>压缩列表中大部分内容都是使用十六进制编码表示，这样表达可以大大节省内存。</p><h2 id="基本结构-6">基本结构</h2><h3 id="压缩列表-ZipList">压缩列表 ZipList</h3><p><img src="/images/ziplist%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="ziplist结构图"></p><p>介绍一下各个组成部分（摘自《Redis设计与实现》）：</p><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">类型</th><th style="text-align:left">长度</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left"><code>zlbytes</code></td><td style="text-align:left"><code>uint32_t</code></td><td style="text-align:left"><code>4</code> 字节</td><td style="text-align:left">记录整个压缩列表占用的内存字节数：在对压缩列表进行内存重分配， 或者计算 <code>zlend</code> 的位置时使用。</td></tr><tr><td style="text-align:left"><code>zltail</code></td><td style="text-align:left"><code>uint32_t</code></td><td style="text-align:left"><code>4</code> 字节</td><td style="text-align:left">记录压缩列表表尾节点距离压缩列表的起始地址有多少字节： 通过这个偏移量，程序无须遍历整个压缩列表就可以确定表尾节点的地址。</td></tr><tr><td style="text-align:left"><code>zllen</code></td><td style="text-align:left"><code>uint16_t</code></td><td style="text-align:left"><code>2</code> 字节</td><td style="text-align:left"><strong>记录了压缩列表包含的节点数量： 当这个属性的值小于 <code>UINT16_MAX</code> （<code>65535</code>）时， 这个属性的值就是压缩列表包含节点的数量； 当这个值等于 <code>UINT16_MAX</code> 时， 节点的真实数量需要遍历整个压缩列表才能计算得出。</strong></td></tr><tr><td style="text-align:left"><code>entryX</code></td><td style="text-align:left">列表节点</td><td style="text-align:left">不定</td><td style="text-align:left">压缩列表包含的各个节点，节点的长度由节点保存的内容决定。</td></tr><tr><td style="text-align:left"><code>zlend</code></td><td style="text-align:left"><code>uint8_t</code></td><td style="text-align:left"><code>1</code> 字节</td><td style="text-align:left">特殊值 <code>0xFF</code> （十进制 <code>255</code> ），用于标记压缩列表的末端。</td></tr></tbody></table><h3 id="压缩列表节点-Entry">压缩列表节点 Entry</h3><p><img src="/images/%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8%E8%8A%82%E7%82%B9.png" alt="压缩列表节点"></p><ul><li><p>每个节点可以保存一个字节数组或者一个整数值</p><ul><li>字节数组：仅会是以下三种其一<ul><li>长度小于等于63字节(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>6</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^6 - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)的字节数组</li><li>长度小于等于16383字节(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>14</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{14} - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">14</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)的字节数组</li><li>长度小于等于4294967295字节(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32} - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>)的字节数组</li></ul></li><li>整数值：仅会是以下六中其一<ul><li><code>4</code>位长，介于<code>0-12</code>之间的无符号整数</li><li><code>1</code>字节长的有符号整数</li><li><code>3</code>字节长的有符号整数</li><li><code>int16_t</code>类型整数</li><li><code>int32_t</code>类型整数</li><li><code>int64_t</code>类型整数</li></ul></li></ul></li><li><p><code>previous_entry_length</code>：前一个节点的长度。该属性的长度只会是<code>1</code>或者<code>5</code>。属性值用16进制表示。</p><ul><li>前一节点长度小于<code>254</code>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2^8-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>)字节，则长度为1：前一节点的长度就在这一个字节里面。比如<code>0x05</code>代表前一节点长度为5字节（十进制）</li><li>前一节点长度大于等于<code>254</code>字节，则长度为5：第一字节会设为<code>0xFE</code>（十进制就是<code>254</code>），后面四个字节用于保存前一节点的长度。比如<code>0xFE002766</code>代表前一节点长度为<code>10086</code>字节（十进制）</li><li>使用该属性值，便可以轻松定位到前一个节点的起始位置</li><li>通过这个方式，可以对压缩列表进行从表尾到表头的遍历操作：从表尾开始，使用<code>previous_entry_length</code>来逐一遍历到表头</li></ul></li><li><p><code>encoding</code>：用于记录<code>content</code>属性所保存的数据类型及长度</p><p><img src="/images/ziplistnode_encoding%E7%BC%96%E7%A0%81%E4%BB%8B%E7%BB%8D.png" alt="ziplistnode_encoding编码介绍"></p><div class="note note-info">            <p>这里解释一下<code>1111xxxx</code>为什么保存了一个介于<code>0-12</code>之间的值:</p><ul><li><p><code>11110000</code>和<code>11111110</code>已经被其他特定编码占用（<code>24</code>位和8位带符号的整数），因此，实际上仅剩下<code>14</code>个有效的<code>xxxx</code>二进制。</p></li><li><p>另一方面，书中虽然没有说，但是实际上<code>encoding</code>中还有一个<code>11111111</code>编码用作压缩列表结束的标记，因此仅剩下<code>13</code>个有效的<code>xxxx</code>二进制。</p></li><li><p>由于计数从<code>0</code>开始，所以说保存的是一个介于<code>0-12</code>之间的值。</p></li></ul>          </div></li><li><p><code>content</code>：用于保存节点的值，这个值可以是一个字节数组或一个整数，长度与类型由<code>encoding</code>属性解决。这里给出两个书中写的节点示例来让大家有一个更直观的理解</p></li></ul><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/images/%E5%8E%8B%E7%BC%A9%E6%95%B0%E7%BB%84%E8%8A%82%E7%82%B9%E7%A4%BA%E4%BE%8B1.png" alt="压缩数组节点示例1"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/images/%E5%8E%8B%E7%BC%A9%E6%95%B0%E7%BB%84%E8%8A%82%E7%82%B9%E7%A4%BA%E4%BE%8B2.png" alt="压缩数组节点示例2"></div></div></div><p>第一个图中，由于<code>content = &quot;hellow world&quot;</code>是一个11字节长度的字节数组，因此<code>encoding</code>遵循<code>00bbbbbb</code>编码规律，为<code>00001011</code>，表示一个长度为11（转为十进制）的字节数组。</p><p>第二个图中，由于<code>content = 10086</code>是一个<code>int16_t</code>的整型，因此<code>encoding</code>遵循<code>11000000</code>的编码，表示为一个<code>int16_t</code>的整型。</p><h2 id="连锁更新">连锁更新</h2><p>所谓连锁更新，指的是在对压缩列表进行插入或删除操作时，由于插入的或删除的元素对其他元素的<code>previous_entry_length</code>属性所需的字节空间带来变化为产生的一系列连锁更新反应。</p><p>比方说，原本存在一个压缩列表：</p><pre><code class=" mermaid">graph LRe1 --- e2 --- e3 --- ...</code></pre><p>其中每一个列表元素的大小都在<code>250</code>到<code>253</code>之间。由于每一个的前一个节点的长度都小于<code>254</code>，所以他们的<code>previous_entry_length</code>长度都是1字节。</p><p>想象一下，现在有一个长度大于等于<code>254</code>的新节点<code>new</code>放到列表的首位</p><pre><code class=" mermaid">graph LRnew --- e1 --- e2 --- e3 --- ....</code></pre><p>那么，由于插入的<code>new</code>节点长度大于<code>254</code>，所以对于<code>e1</code>来说，它的<code>previous_entry_length</code>的长度将会从<code>1</code>变为<code>5</code>，同时其节点自身的长度也会增加<code>4</code>，这导致<code>e1</code>的节点长度变得大于等于<code>254</code>，从而影响<code>e2</code>的<code>previous_entry_length</code>。这种影响会形成连锁反应，直到遇到一个不会由于自身长度改变而导致下一个节点长度产生改变的节点。</p><p>Redis对于这类情况的解决方式也就和直觉上认为的一样，遇到需要更新的就更新，然后连锁就连锁。因此，在极端情况下，一次插入或删除操作都需要对压缩列表执行<code>N</code>次空间重分配操作，由于每次空间重分配的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，因此最终的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>然而，由于这种情况（贯穿整个列表的进行更新）发生的概率极低，所以一般而言，我们会将其插入和删除的时间复杂度视为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>。</p><h2 id="压缩列表的优势">压缩列表的优势</h2><p>在我刚开始看这一个数据结构时，我就在想，为什么Redis需要特意去设计这样的一个数据结构，来完成用现有结构就能完成的任务（比如双向链表等）。看完之后，我的总结如下：</p><ul><li>压缩列表中严谨地管理和维护了每一个列表元素的空间大小，并且用连续的内存空间来存储这些元素，让内存空间的使用覆盖率大大提升，不会出现浪费内存空间（内存碎片）的情况。这能够最大化利用内存空间，也能够在释放空间时效率变高。</li><li>对比其他数据结构，压缩列表更加节省空间。比如说对比链表和双向链表。由于在链表中，每一个元素都需要维护一个指向下一个节点的指针，一个指针是8字节，在双向链表中则是两个指针16字节。而在压缩列表中并不会使用指针来得到另一个节点的位置，而是通过将节点自己的地址与<code>previous_entry_length</code>进行计算来得到上一个节点的位置。而一个<code>previous_entry_length</code>所需的长度最多为<code>5</code>，因此比寻常结构节省了不少空间。</li><li><code>encoding</code>的存在将存储的数据进行了智能编码，实现了在编码长度小于等于<code>5</code>字节的情况下依然能够编码大部分常用的数据（整型，字节数组）</li></ul>]]></content>
    
    
    <categories>
      
      <category>Redis学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>认知状态-行为集合以限制本地模拟时其他代理的可能动作</title>
    <link href="/2025/08/19/Decentralized-Epistemic-Planning/%E8%AE%A4%E7%9F%A5%E7%8A%B6%E6%80%81-%E8%A1%8C%E4%B8%BA%E9%9B%86%E5%90%88%E4%BB%A5%E9%99%90%E5%88%B6%E6%9C%AC%E5%9C%B0%E6%A8%A1%E6%8B%9F%E6%97%B6%E5%85%B6%E4%BB%96%E4%BB%A3%E7%90%86%E7%9A%84%E5%8F%AF%E8%83%BD%E5%8A%A8%E4%BD%9C/"/>
    <url>/2025/08/19/Decentralized-Epistemic-Planning/%E8%AE%A4%E7%9F%A5%E7%8A%B6%E6%80%81-%E8%A1%8C%E4%B8%BA%E9%9B%86%E5%90%88%E4%BB%A5%E9%99%90%E5%88%B6%E6%9C%AC%E5%9C%B0%E6%A8%A1%E6%8B%9F%E6%97%B6%E5%85%B6%E4%BB%96%E4%BB%A3%E7%90%86%E7%9A%84%E5%8F%AF%E8%83%BD%E5%8A%A8%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<p>该方法的目标状态过滤法采用的是<a href="">对neutral settings下的epistemic problem的规划逻辑的一个尝试2</a>文章中提到的反选过滤法。</p><h1>基本介绍</h1><p>该方法实际上十分简单，就是在一个代理行动过后，其他代理如果能够直接看见这个代理，则将该代理当前的行为与自己对当前环境的jp world进行记录。在自己本地进行BFS搜索时，如果遇到了相同的jp world，且行动回合为该代理，则只会将该代理在该jp world下做过的行为当作successor。</p><p>举个例子：</p><pre><code class=" mermaid">graph LRa(1) &lt;--&gt; b(2)b &lt;--&gt; c(3)b &lt;--&gt; d(4)</code></pre><p>一开始a在1，b在3。a的目标为去3，b的目标为去1。同房间不能同时有复数个代理存在。</p><p>根据我们之前已经推算过的流程，a在一开始会选择stay。此时，由于问题设置中b能够看见a选择了stay，因此b会将自己对当前环境的认知状态也a的行为进行记录，以让当自己进行本地BFS搜索时，在a的轮次遇到相同环境时，让a的行为只有stay一种。实际算法代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 在last_agent执行完自己的行为后，self.history中会添加上一批ontic functions，action agent, action和complete signal信息。</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">update_agent_belief_actions_in_world</span>(<span class="hljs-params">self</span>):<br>    last_agent = <span class="hljs-variable language_">self</span>.history[-<span class="hljs-number">1</span>][<span class="hljs-string">&#x27;agent&#x27;</span>]<br>    <span class="hljs-keyword">for</span> agent <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.agents:<br>        <span class="hljs-comment"># 代理不会记录自己的行为，以避免在BFS中限制了自己的行为。</span><br>        <span class="hljs-keyword">if</span> last_agent == agent.name:<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-comment"># 只有上一个行动的agent能被当前agent看见，才会记录他的行为</span><br>        <span class="hljs-keyword">if</span> last_agent <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.observation_function.get_observable_agents(<span class="hljs-variable language_">self</span>, <span class="hljs-variable language_">self</span>.history[-<span class="hljs-number">1</span>][<span class="hljs-string">&#x27;functions&#x27;</span>], agent.name):<br>            <span class="hljs-keyword">continue</span><br>        agent_observation_worlds = <span class="hljs-variable language_">self</span>.get_history_functions_of_agent(agent.name)<br>        <span class="hljs-comment"># 获取上一个时间戳下当前agent的jp world</span><br>        agent_last_jp_world = util.get_epistemic_world(<span class="hljs-built_in">reversed</span>(agent_observation_worlds))<br>        <span class="hljs-comment"># 将其转为可Hash的function集合（这个不重要）</span><br>        hash_set_agent_last_jp_world = util.HashSetFunctions(agent_last_jp_world)<br>        <span class="hljs-comment"># 为agent的action_under_jp_worlds添加jp world，last_agent与他的行为对</span><br>        <span class="hljs-comment"># action_under_jp_worlds是一个dict[HashSetFunctions, dict[str, set[Action]]]结构。</span><br>        agent.action_under_jp_worlds[hash_set_agent_last_jp_world][last_agent].add(<span class="hljs-variable language_">self</span>.history[-<span class="hljs-number">1</span>][<span class="hljs-string">&#x27;action&#x27;</span>])<br>    <br></code></pre></td></tr></table></figure><p>在BFS中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># BFS节点</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BFSNode</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, current_index, action, model, priority</span>):<br>        <span class="hljs-variable language_">self</span>.current_index: <span class="hljs-built_in">int</span> = current_index<br>        <span class="hljs-variable language_">self</span>.actions: <span class="hljs-built_in">list</span>[Action] = action<br>        <span class="hljs-variable language_">self</span>.model: Model = model<br>        <span class="hljs-variable language_">self</span>.priority: <span class="hljs-built_in">int</span> = priority<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__lt__</span>(<span class="hljs-params">self, other</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>.priority &lt; other.priority<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">singleBFS</span>(<span class="hljs-params">self, virtual_model, agent_name</span>):<br>    <span class="hljs-comment"># 此处virtual model为执行规划算法用的虚拟世界， agent_name为实际世界中当前回合下即将行动的agent的名字</span><br>    <br>    <span class="hljs-comment"># ...其他流程</span><br>    <span class="hljs-comment"># 获取virtual model中当前行动回合的agent</span><br>    current_agent = node.model.agents[node.current_index]<br>    <span class="hljs-comment"># 检查当前世界状态中，对于agent_name代理来说是否有笃定current_agent会做的行为</span><br>    <span class="hljs-comment"># 如果有，则直接将这些行为记为successors，如果没有则正常生成successors</span><br>    <br>    <span class="hljs-comment"># 获取对于agent_name来说，在当前virtual model下的jp world</span><br>    jp_world_for_agent_name = util.get_epistemic_world(<span class="hljs-built_in">reversed</span>(node.model.get_history_functions_of_agent(agent_name)))<br>    hash_set_jp_world = util.HashSetFunctions(jp_world_for_agent_name)<br>    <br>    <span class="hljs-comment"># start_agent是model中的agent_name代理</span><br>    <span class="hljs-comment"># 获取在start_agent的action_under_jp_worlds中current_agent在当前jp world下执行过的行为</span><br>    successors = <span class="hljs-built_in">list</span>(start_agent.action_under_jp_worlds[hash_set_jp_world][current_agent.name])<br>    <span class="hljs-comment"># 如果没有任何行为，则正常生成successors，有则保留</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(successors) == <span class="hljs-number">0</span>:<br>        successors = node.model.get_agent_successors(current_agent.name)<br>    <span class="hljs-comment"># 进保留可用的successors</span><br>    successors = [succ <span class="hljs-keyword">for</span> succ <span class="hljs-keyword">in</span> successors <span class="hljs-keyword">if</span> util.is_valid_action(node.model, succ, current_agent.name)]<br>    <br>    <span class="hljs-comment"># ...其他流程</span><br></code></pre></td></tr></table></figure><p>因此，在a选择stay之后，b的规划概念将会更新。b有7中不同的goal set。剩下的流程在图片里。</p><p>该方法可以进行拓展，比如：</p><ul><li>让行动的代理在观测到与以前相同环境时，不再执行以前执行过的行为</li><li>当由于行为限制导致没有任何行为可用时，用正常的方法模拟行为，或者随机选取一个行为。（这种情况发生的概率极低）</li></ul>]]></content>
    
    
    <categories>
      
      <category>Decentralized Epistemic Planning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEL</tag>
      
      <tag>Epistemic Planning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>代理策略更新的方法</title>
    <link href="/2025/08/18/Decentralized-Epistemic-Planning/%E4%BB%A3%E7%90%86%E7%AD%96%E7%95%A5%E6%9B%B4%E6%96%B0%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2025/08/18/Decentralized-Epistemic-Planning/%E4%BB%A3%E7%90%86%E7%AD%96%E7%95%A5%E6%9B%B4%E6%96%B0%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>考虑一个代理更新的方法，旨在让代理将对方代理已做的行为纳入自己的行为规划中，以达到更新本地策略的目的，同时避免无限循环的现象。</p><h1>问题基本描述</h1><p>假如当前问题中有四个房间</p><pre><code class=" mermaid">graph LRa(1) &lt;--&gt; b(2)b &lt;--&gt; c(3)b &lt;--&gt; d(4)</code></pre><p>代理a在1，b在3，a要去3，b要去1。假设代理知道环境中的所有内容，但是不知道对方要去哪里。思考如何用去中心化的方式解决这个问题，要求：</p><ul><li>代理之间不能沟通，交换任何信息</li><li>代理在完成目标时可以发出完成的信号</li></ul><p>假如先考虑a的视角，它可以不考虑b的目标，直接本地生成一套最优行为流程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>a</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a: stay, b: move(3,2), a: stay, b:move(2,4), a:move(1,2), b:stay, a:move(2,3)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)}</span></span></span></span></p><p>不难发现，a想要抵达3，至少需要抵达2，需要抵达2没至少需要在1或4中。当然，抵达目标不能有人。</p><p>再考虑b的视角，它不考虑a的目标，本地最优行为流程为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>a</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a:move(1,2),b:stay,a:move(2,4),b:move(3,2),a:stay,b:move(2,1)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)}</span></span></span></span></p><h1>可能的方向与目前所面临的问题</h1><p>在Bernhard等人的论文中，描述了一个多智能体寻路中离散（去中心化）规划的方法。他们在问题初始化时让每一个智能体都生成一套各自的规划路径，然后通过观察其他智能体的行为来更新自己本地的规划路径，以避免卡死和无限循环的情况出现。</p><p>然而，在多智能体寻路中，他们假设智能体可以知道环境中的全部状态(Complete Observable)，而我们的模型中，智能体通常都是部分可观测的(Partial Observable)。因此，我们无法在一开始就让每个智能体生成各自的规划路径，也无法完全效仿Bernhard等人的方法。但是，他们的规划更新的理念还是值得思考的。</p><p>目前而言，解决这个问题中，<strong>麻烦的点在于：</strong></p><ul><li>智能体仅能部分观测</li><li>智能体不知道其他智能体的目标</li></ul><p>对于部分观测，程序现在已经能够让智能体通过生成虚拟模型来列举出所有可能的现实世界状态。对于目标，程序现在也可以生成所有可能的目标集合。假如可能的现实世界状态集合为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">W_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，所有可能的目标集合的集合为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">G_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，那么在目前的Neutral解决方案中，智能体的每一次行动都需要进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>W</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><msub><mi>G</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|W_v|\cdot|G_v|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>次BFS算法规划。不过通常来说，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>G</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|G_v|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>会随着行动次数的增加而减少，最后通常会收敛到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>W</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|W_v|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>次BFS算法规划。（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>W</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|W_v|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>通常也会减少）</p><p>**现已想到了一个可能有效的方法：<a href="/2025/08/19/Decentralized-Epistemic-Planning/%E8%AE%A4%E7%9F%A5%E7%8A%B6%E6%80%81-%E8%A1%8C%E4%B8%BA%E9%9B%86%E5%90%88%E4%BB%A5%E9%99%90%E5%88%B6%E6%9C%AC%E5%9C%B0%E6%A8%A1%E6%8B%9F%E6%97%B6%E5%85%B6%E4%BB%96%E4%BB%A3%E7%90%86%E7%9A%84%E5%8F%AF%E8%83%BD%E5%8A%A8%E4%BD%9C/">认知状态-行为集合以限制本地模拟时其他代理的可能动作</a> **</p>]]></content>
    
    
    <categories>
      
      <category>Decentralized Epistemic Planning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEL</tag>
      
      <tag>Epistemic Planning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对neutral settings下的epistemic problem的规划逻辑的一个尝试2</title>
    <link href="/2025/08/16/Decentralized-Epistemic-Planning/%E5%AF%B9neutral%20settings%E4%B8%8B%E7%9A%84epistemic%20problem%E7%9A%84%E8%A7%84%E5%88%92%E9%80%BB%E8%BE%91%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%9D%E8%AF%952/"/>
    <url>/2025/08/16/Decentralized-Epistemic-Planning/%E5%AF%B9neutral%20settings%E4%B8%8B%E7%9A%84epistemic%20problem%E7%9A%84%E8%A7%84%E5%88%92%E9%80%BB%E8%BE%91%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%9D%E8%AF%952/</url>
    
    <content type="html"><![CDATA[<p>先前有提出过一个解决代理猜测其他代理目标的方法，那个方法在时间之后以失败告终，因此此处再提出另一个可能的方法。</p><p>不过此方法目的并不是为了仅仅是猜出目标，还需要考虑如何解决代理之间出现死循环的情况。</p><p>事实上，从现实的角度来说，在其他人不告诉你他在做什么的情况下，你根本无法准确猜出对方的目的。这种情况在复杂问题的情况下尤为明显。因此，我们更应该想出一个方法，该方法只需要有如下功效即可：</p><ul><li>能够帮助代理做判断</li><li>能够让代理距离他的目标更近</li><li>有实际意义</li></ul><p>由于我们假设模型是一个partial observable且decentralized的设定，因此带来了很大限制的同时，也带来了更好地概括性。</p><p>接下来描述新的想法</p><h1>Idea</h1><p>考虑一个目标反向传递的方法</p><p>假如当前问题中有四个房间</p><pre><code class=" mermaid">graph LRa(1) &lt;--&gt; b(2)b &lt;--&gt; c(3)b &lt;--&gt; d(4)</code></pre><p>代理a在1，b在3，a要去3，b要去1。假设代理知道环境中的所有内容，但是不知道对方要去哪里。思考如何用去中心化的方式解决这个问题，要求：</p><ul><li>代理之间不能沟通，交换任何信息</li><li>代理在完成目标时可以发出完成的信号</li></ul><p>假如先考虑a的视角，它可以不考虑b的目标，直接本地生成一套最优行为流程：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>a</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a: stay, b: move(3,2), a: stay, b:move(2,4), a:move(1,2), b:stay, a:move(2,3)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)}</span></span></span></span></p><p>不难发现，a想要抵达3，至少需要抵达2，需要抵达2没至少需要在1或4中。当然，抵达目标不能有人。</p><p>再考虑b的视角，它不考虑a的目标，本地最优行为流程为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>a</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mo>:</mo><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi><mo separator="true">,</mo><mi>b</mi><mo>:</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a:move(1,2),b:stay,a:move(2,4),b:move(3,2),a:stay,b:move(2,1)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)}</span></span></span></span></p><p>明显可以看出，在a的视角中，如果要用最优路径完成目标，则需要让b先动。而在b的视角中则需要让a先动。他们观念具备冲突，因此在规划过程中会出现死循环。</p><p>如果对于单一的MAPF问题来说，该问题还是很好解决的，然而现在需要考虑的是一个通用的，全面的解决方案。该解决方案中需要考虑：</p><ul><li>代理无法观察到所有状态</li><li>代理的目标颇为复杂</li><li>代理的目标为认知目标，比如a的目标是让b有一个错误的信念</li></ul><p>该问题最好的解决方案就是让代理去用某种方法猜其他代理的目标是什么，以达成合作行为。</p><p>假设问题中每一个代理的goals最终都必然可以完成，且所有代理都清楚这一点。在a的视角中，它可以想出b所有可能的goals</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\{B_bat(b,1)\}\\\{B_bat(b,2)\}\\\{B_bat(b,4)\}\\\{B_bat(a,3)\}\\\{B_bat(b,1), B_bat(a,3)\}\\\{B_bat(b,2), B_bat(a,3)\}\\\{B_bat(b,4), B_bat(a,3)\}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">)}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)}</span></span><span class="mspace newline"></span></span></span></span></p><p>由于模型在一开始就会定义最大信念深度，因此也许可以用如下方法</p><h2 id="反选">反选</h2><p>在任何代理行动后，所有代理都会去尝试反选自己对其他所有代理的目标信念。比如说，现在b:move(3,2)，但是b的信号灯没有亮。这说明b没有完成目标。因此，a可以根据自己视角中b的视角来推断，对b来说当前世界状态有哪些状态机不是它的目标。比方说，在a的视角中，a相信b相信b在2，也相信a在1（只考虑与目标有关的状态）。因此，在将这两个状态进行超集转换后可以得到：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(B_bat(b,2)),(B_bat(a,1)), (B_bat(b,2), B_bat(a,1))\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">))</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">))</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">))}</span></span></span></span></span></p><p>其中，与a对b的目标信念相同的仅有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{B_bat(b,2)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)}</span></span></span></span>因此，a可以将该信念排除，以后都不用再去考虑这个信念。</p><p>这是将目标信念最大深度设为1的情况，假如为2，则让推测更深一层。也就会变成a相信b相信a相信… <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>a</mi></msub><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">B_aB_bB_a...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span></span></span></span>，然后将其中与目标状态有关的内容超集转换后，排除错误目标。</p><p>不过，如果观察到b的完成信号亮起，比如a在4，b在1，此时，在a的视角中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{B_bat(b,1),B_bat(a,4)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">)}</span></span></span></span>都存在，但是由于a知道自己的目标是at(a,3)，并且a知道所有人的目标都能在最终完成，因此<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B_bat(a,4))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">))</span></span></span></span>将会被排除。（其实同样转化为超集后正选即可）。</p><h3 id="难点">难点</h3><ol><li>也许会出现无法过滤掉任何目标而导致行为不断重复的现象：<ul><li>可以限制代理行为，避免它前往自己已知的世界状态。（该方法经过测试后会造成更多问题，故放弃该方法）</li><li>也许可以参考<em>Implicitly Coordinated Multi-Agent Path Finding under  Destination Uncertainty:  Success Guarantees and Computational Complexity</em> 论文中提到的方法，让代理通过观察其他代理的行为与自己预期的行为来对最终策略进行更新。（该方法与我们目前的研究方向和假设不匹配，故而不采用该方法）</li></ul></li><li>在一个代理做出行动后，其他代理将基于他们在当前世界状态下是否可以看见该代理来记录该代理的行为。比如，在之前提到的问题中，假如a一开始做出了stay行为，那么由于b能够看见a，因此b会记录下当前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>b</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_b(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>下a可能的行为。假设下一次a在当前状态下又move了，那么也会把move纳入行为集合中。<ul><li>在进行local BFS search时，代理行动的每一步之前都会去检查当前代理在初步代理的状态-行为集合中是否存在以往做过的行为，如果有，则初步代理会人外当前代理的行为依然会是其中之一。此处讲述的有些难懂，可以一步到另一篇文章中看详细内容：<a href="/2025/08/19/Decentralized-Epistemic-Planning/%E8%AE%A4%E7%9F%A5%E7%8A%B6%E6%80%81-%E8%A1%8C%E4%B8%BA%E9%9B%86%E5%90%88%E4%BB%A5%E9%99%90%E5%88%B6%E6%9C%AC%E5%9C%B0%E6%A8%A1%E6%8B%9F%E6%97%B6%E5%85%B6%E4%BB%96%E4%BB%A3%E7%90%86%E7%9A%84%E5%8F%AF%E8%83%BD%E5%8A%A8%E4%BD%9C/">认知状态-行为集合以限制本地模拟时其他代理的可能动作</a></li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>Decentralized Epistemic Planning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEL</tag>
      
      <tag>Epistemic Planning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Decentralized Epistemic Planning文档</title>
    <link href="/2025/08/11/Decentralized-Epistemic-Planning/Decentralized%20Epistemic%20Planning%E6%96%87%E6%A1%A3/"/>
    <url>/2025/08/11/Decentralized-Epistemic-Planning/Decentralized%20Epistemic%20Planning%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h1>Decentralized Epistemic Planning基础定义</h1><h2 id="Classic-Planning">Classic Planning</h2><p>一个Classical Planning实例（Classical Planning问题）可以用一个元组表示</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">P</mi><mo>=</mo><mo stretchy="false">⟨</mo><mi>S</mi><mo separator="true">,</mo><msub><mi>s</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>G</mi></msub><mo separator="true">,</mo><mi>A</mi><mi>c</mi><mi>t</mi><mo separator="true">,</mo><mi>A</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\mathcal{P} = \langle S, s_0, S_G, Act, A, f, c \rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mclose">⟩</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>代表实例中所有可能的状态，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub><mo>⊂</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">s_0 \subset S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>代表初始状态的集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>G</mi></msub><mo>⊆</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S_G\subseteq S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>代表目标状态的集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>⊆</mo><mi>A</mi><mi>c</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">A(s)\subseteq Act</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span></span></span></span>代表在状态集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">s\in S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>下能够做出的行为集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>代表转移函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s&#x27; = f(a, s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>代表在状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span>下通过行为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a\in A(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span> 能够到达的下一个状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">s&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c(a,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>代表在状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">s\in S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>下采取行为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>所需要的代价。</p><p>Classical Planning中的一个核心表达结构可以采取STRIPS中定义的基本行为模板，其中定义如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs scss">action <span class="hljs-built_in">action_name</span>(params)<br>prec (<br>states...<br>)<br><span class="hljs-built_in">effs</span>(<br>effects...<br>)<br></code></pre></td></tr></table></figure><p>以move为例子，假设现在要模拟一个代理a从一个房间r1移动到另一个房间r2，那么在状态空间中会有如下变化：</p><ul><li>agent_at(a, r1) = 1 -&gt; agent_at(a, r1) = 0</li><li>agent_at(a, r2) = 0 -&gt; agent_at(a, r2) = 1</li></ul><p>做出该行为的先决条件为：</p><ul><li>connected(r1, r2) = 1</li><li>agent_at(a, r1) = 1</li></ul><p>以上便表示了一个行为所需的基本内容，而定义move行为模板的方法如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby">action move(<span class="hljs-string">?a</span> - agent <span class="hljs-string">?f</span>rom <span class="hljs-string">?t</span>o - room)<br>prec (<span class="hljs-keyword">and</span><br>((agent_at <span class="hljs-string">?a</span> <span class="hljs-string">?f</span>rom) = <span class="hljs-number">1</span>)<br>((connected <span class="hljs-string">?f</span>rom <span class="hljs-string">?t</span>o) = <span class="hljs-number">1</span>)<br>)<br>effs(<span class="hljs-keyword">and</span><br>((agent_at <span class="hljs-string">?a</span> <span class="hljs-string">?f</span>rom) = <span class="hljs-number">0</span>)<br>((agent_at <span class="hljs-string">?a</span> <span class="hljs-string">?t</span>o) = <span class="hljs-number">1</span>)<br>)<br></code></pre></td></tr></table></figure><p>实际上以上只是我在pddl中倾向的写法，实际上并不需要写成这样。但是这样会让模型逻辑变简单一些，因此就这么写了。</p><p>可以看出，一个行为可以用一个元组来表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>c</mi><mi>t</mi><mo>∈</mo><mi>A</mi><mi>c</mi><mi>t</mi><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mi>a</mi><mi>r</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>e</mi><mo separator="true">,</mo><mi>e</mi><mi>f</mi><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">act \in Act = (par, pre, eff)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6542em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">re</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mclose">)</span></span></span></span>，分别代表了参数，先决条件和影响。</p><p>常规的Classical Planning的解决方案已经在AI界中广泛讨论，有各种解决方案能处理这类问题。然而，Classical Planning却无法解决代理的信念问题</p><h2 id="Epistemic-Planning">Epistemic Planning</h2><p>Epistemic Planning意为认知规划，通常用于讨论代理对其他代理的信念问题，用另一种方法说， 可以成为代理的现实世界的认知与嵌套认知问题。</p><p>一个Epistemic Planning可以被如下表示</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">P</mi><mo>=</mo><mo stretchy="false">⟨</mo><mi>S</mi><mo separator="true">,</mo><mi>A</mi><mi>g</mi><mi>t</mi><mo separator="true">,</mo><msub><mi>s</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>G</mi></msub><mo separator="true">,</mo><mi>O</mi><mo separator="true">,</mo><mi>A</mi><mi>c</mi><mi>t</mi><mo separator="true">,</mo><mi>A</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\mathcal{P} = \langle S, Agt, s_0, S_G, O, Act, A, f, c\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mclose">⟩</span></span></span></span></span></p><p>其中与Classical Planning中相同符号的也代表相同意思。此外，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>∈</mo><mi>A</mi><mi>g</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\alpha \in Agt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span></span></span></span>表示代理，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>α</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\alpha, s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>代表观察函数，用于表示代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>∈</mo><mi>A</mi><mi>g</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\alpha \in Agt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span></span></span></span>在现实状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>⊂</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">s \subset S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>下所能观察到的内容。</p><p>在继续讨论之前，需要先讲一下基本的Epistemic Logic（认知逻辑）</p><h3 id="Epistemic-Logic">Epistemic Logic</h3><p>在Fagin等人的研究中，他们提出了一套对认知逻辑的正式定义，其中数学表达如下</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo>:</mo><mo>=</mo><mo>=</mo><mi>p</mi><mo>∣</mo><mi>φ</mi><mo>∧</mo><mi>φ</mi><mo>∣</mo><mi mathvariant="normal">¬</mi><mi>φ</mi><mo>∣</mo><msub><mi>K</mi><mi>i</mi></msub><mi>φ</mi><mo>∣</mo><msub><mi>B</mi><mi>i</mi></msub><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi :== p \mid \varphi \wedge \varphi \mid \neg \varphi \mid K_i\varphi \mid B_i\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.75em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">¬</span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>∈</mo><mi>P</mi><mi>r</mi><mi>o</mi><mi>p</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">p \in Prop = \{p_1,p_2,...\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mclose">}</span></span></span></span>为有限的基本逻辑（事实）集合。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>A</mi><mi>g</mi><mi>t</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in Agt = \{a_1, a_2, ...\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mclose">}</span></span></span></span>为代理集合。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub><mi>φ</mi></mrow><annotation encoding="application/x-tex">K_i\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span></span></span></span>表示代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>知道某个逻辑<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub><mi>φ</mi></mrow><annotation encoding="application/x-tex">B_i\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span></span></span></span>代表代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>相信某个逻辑<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span>。该数学表达中的连接符号可以用常规的逻辑符号理解。不难看出，这套认知逻辑中展示了信念有嵌套性，比如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>a</mi></msub><msub><mi>K</mi><mi>b</mi></msub><mi>φ</mi></mrow><annotation encoding="application/x-tex">K_aK_b\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span></span></span></span>也是存在的，用于代表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>知道<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>知道逻辑<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span>。</p><p>在这里解释一下<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span>。这个东西可以用于表示一个truth，比如某个人在某个地方：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo>:</mo><mo>:</mo><mo>=</mo><mi>p</mi><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>r</mi><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi ::= p = (agent\_at(a, r1))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">::=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">1</span><span class="mclose">))</span></span></span></span>，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub><mi>φ</mi></mrow><annotation encoding="application/x-tex">K_i\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span></span></span></span>则可以被理解为代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>知道代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>在房间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">r1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">1</span></span></span></span>。然而，代理的理解并不一定正确，就好比你也许只是以前见过某个人在上海，就如今依然还是相信它在上海一样。这件事并不一定正确。</p><p>我们可以使用<strong>Kripke structure</strong>来表示逻辑系统，Kripke structure通用可以用一个元组表示</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy="false">(</mo><mi>W</mi><mo separator="true">,</mo><mi>π</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M = (W, \pi, R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>是一个非空的可能世界集合，在认知逻辑中，可能世界并不单单指的是现实世界中的状态，也同时表示代理的认知世界中的状态。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo stretchy="false">(</mo><mi>φ</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi(\varphi,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal">φ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>为一个二元评估函数，用于表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span>在世界<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>中是否为真。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>R</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>R</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">R = \{R_1,R_2,...\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mclose">}</span></span></span></span>表示可能世界<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>之间的二元可达性关系。如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>∈</mo><mi>R</mi><mo separator="true">,</mo><mi>w</mi><mo>∈</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">(w, w&#x27;)\in R, w\in W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>，则表示世界<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">w&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>时双向可达的。</p><p>其余的有关于信念<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>和知识<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>的系统定义，分别名为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mi>D</mi><msub><mn>45</mn><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">KD45_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">KD</span><span class="mord">4</span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mi>T</mi><msub><mn>45</mn><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">KT45_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">4</span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。其定义较为复杂，便不在此做赘述。</p><p>如上便基本讲完了认知规划中的基本逻辑，接下来讲认知规划的功能。</p><h3 id="Motivation">Motivation</h3><p>Classical Planning中，所有的状态都是基于现实世界的，问题中代理个人的视角和信念的表示则需要使用额外的状态空间来表示。通常来说，Classical Planning也可以用于解决代理之间的信念问题，但是那通常会让问题的状态空间急剧变大，难以维护正常的运行。</p><p>Epistemic Planning采用认知逻辑对基本逻辑<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">φ</span></span></span></span> 的表达方式进行了扩展。这解决了经典规划中添加信念逻辑导致状态空间剧增的问题。</p><p>在Epistemic Planning中，我们暂时不考虑<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c(a,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>的问题。</p>]]></content>
    
    
    <categories>
      
      <category>Decentralized Epistemic Planning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEL</tag>
      
      <tag>Epistemic Planning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>代理在neutral settings下如何推测其他代理的goals</title>
    <link href="/2025/08/09/Decentralized-Epistemic-Planning/%E4%BB%A3%E7%90%86%E5%9C%A8neutral%20settings%E4%B8%8B%E5%A6%82%E4%BD%95%E6%8E%A8%E6%B5%8B%E5%85%B6%E4%BB%96%E4%BB%A3%E7%90%86%E7%9A%84goals/"/>
    <url>/2025/08/09/Decentralized-Epistemic-Planning/%E4%BB%A3%E7%90%86%E5%9C%A8neutral%20settings%E4%B8%8B%E5%A6%82%E4%BD%95%E6%8E%A8%E6%B5%8B%E5%85%B6%E4%BB%96%E4%BB%A3%E7%90%86%E7%9A%84goals/</url>
    
    <content type="html"><![CDATA[<h1>Decentralized Epistemic Planning构成</h1><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="script">P</mi><mi>D</mi></msub><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mi>A</mi><mi>g</mi><mi>t</mi><mo separator="true">,</mo><msub><mi>s</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>G</mi><mo separator="true">,</mo><mi>O</mi><mo separator="true">,</mo><mi>A</mi><mi>c</mi><mi>t</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mi>c</mi><mo>&gt;</mo><mspace linebreak="newline"></mspace><mi>α</mi><mo>∈</mo><mi>A</mi><mi>g</mi><mi>t</mi><mo>=</mo><mo>&lt;</mo><msub><mi>S</mi><mi>G</mi></msub><mo>&gt;</mo><mspace linebreak="newline"></mspace><mo>⇒</mo><msub><mi mathvariant="script">P</mi><mi>D</mi></msub><mo>=</mo><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msubsup><mi>S</mi><mi>G</mi><mn>1</mn></msubsup><mo separator="true">,</mo><msubsup><mi>S</mi><mi>G</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msubsup><mi>S</mi><mi>G</mi><mi>n</mi></msubsup><mo stretchy="false">}</mo><mo separator="true">,</mo><msub><mi>S</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>G</mi><mo separator="true">,</mo><mi>O</mi><mo separator="true">,</mo><mi>A</mi><mi>c</mi><mi>t</mi><mo separator="true">,</mo><mi>f</mi><mo separator="true">,</mo><mi>c</mi><mo>&gt;</mo><mspace linebreak="newline"></mspace><mtext>where </mtext><msubsup><mi>S</mi><mi>G</mi><mi>n</mi></msubsup><mo>⊆</mo><mi>G</mi><mo>⊂</mo><mi>S</mi><mo separator="true">,</mo><mspace width="1em"/><msub><mi>S</mi><mn>0</mn></msub><mo>⊂</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\mathcal{P}_D = &lt;S, Agt, s_0, G, O, Act, f, c&gt;\\\alpha \in Agt = &lt;S_G&gt;\\\Rightarrow \mathcal{P}_D = &lt;S, \{S_G^1, S_G^2, ... , S_G^n\},S_0, G, O, Act, f, c&gt;\\\text{where}\ S_G^n \subseteq G \subset S,\quad S_0 \subset S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0822em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0822em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9614em;vertical-align:-0.247em;"></span><span class="mord text"><span class="mord">where</span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span></p><p>简单来说，基本构造就是在基本Decentralized Planning的基础上加入了一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>用于限制可能的goal集合。在实践中，这个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>用于存储可被接受为Goal的状态名。</p><h1>检验Goal Set是否可被解决</h1><p>通常来说，可以设计一个BFS算法，然后验证该Goal Set是否有解，如果有解，则代表可解，反之代表不可解。</p><p>寻常的BFS可以判断当前现实世界状态是否在以前出现过。然而，在DEP问题中，这有些许不同。</p><p>在DEP中，我们呈一个代理对当前世界的认知为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_a(\vec{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，即代表代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>对世界序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>的justified perspective。该理论认为，一个代理会相信他最近看见的事物。比方说，如果代理a现在看见了桌上有一个苹果，接下来他离开了房间。如果过程中没有任何证据可以说明这个苹果已经不在那个桌上了，则该代理依然会 认为苹果在那个桌上。</p><p>DEP中检测当前世界状态对于当前执行行为的代理来说是否在以往出现过的机制如下：假设世界状态序列为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>，世界中有{a,b}两个代理。</p><ul><li>算法会为每一个代理维护一个独立的已观察世界集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">W</mi><mi mathvariant="script">a</mi></msub></mrow><annotation encoding="application/x-tex">\mathcal{W_{a}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0822em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中包括了在他的回合时，所有代理的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>a</mi><mi>g</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{agt}(\vec{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li><li>如果当前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">∀</mi><mrow><mi>a</mi><mi>g</mi><mi>t</mi><mo>∈</mo><mi>A</mi><mi>g</mi><mi>t</mi></mrow></msub><mrow><msub><mi>f</mi><mrow><mi>a</mi><mi>g</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo></mrow><mo>∈</mo><msub><mi mathvariant="script">W</mi><mi mathvariant="script">a</mi></msub></mrow><annotation encoding="application/x-tex">\forall_{agt \in Agt} {f_{agt}(\vec{w})} \in \mathcal{W_{a}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">∀</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0822em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则代表代理a以前见过当前世界，则不会被算法继续expand。</li></ul><h1>推测其他代理的goals</h1><h2 id="找到所有可能的goals设定">找到所有可能的goals设定</h2><p>由于代理知道自己的goals，因此在生成全局goal set时，只需考虑其他agent可能的goals。在初始化模型时，每个Agent都会为所有可能的goals set。</p><h2 id="过滤goals">过滤goals</h2><p>这便是研究的难点所在了。现有思路如下：</p><ul><li>每当一个代理行动，程序便会让所有其他代理观察该代理：<ul><li>如果能看见该代理的行为，则根据上一次看见该代理时其信念状态和这一次的信念状态的差异，判断该代理可能想要做什么。</li><li>如果看不见该代理的行为，则不做更新。</li></ul></li></ul><p>现考虑一个世界状态：两个连通的房间，两个代理，一个物品。<strong>代理只能看见与自己在同一个房间的其他代理的行为，但是他们总是能知道其他代理和所有物品的所在位置。goal set中只会存在holdby</strong></p><p><strong>假设a的目标为a相信b拿着物品，b的目标是b相信自己没拿物品</strong>。</p><p>现在的世界状态为：<strong>a与b在同一房间内，a拿着物品，b没拿物品</strong>。</p><p>假设现在是a行动的轮次，a的局部bfs会判断a当前需要做的是<strong>把物品放下来</strong>。</p><p>此时，b观察到a把东西放了下来，b对a的信念状态会更新一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>→</mo><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">holdby(i,a) = 1 \rightarrow holdby(i,a) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。但是b却观察到a的goal complete信号灯没有亮，因此b首先会知道此时a并没有完成自己的任务，因此b会生成在此状态下，下一次轮到a前，所有可能的未来状态。其中对a有信念更新的状态便是b认为a可能的goals。</p><p>比如说，a放下东西后，在下一次轮到a前，b会行动一下。而b的行动中有pick_up, move 和stay三种。其中，move和stay都对a来说没什么帮助：</p><ul><li><p>stay就不会对世界状态带来改变，因此对a的信念也不会有任何改变</p></li><li><p>move虽然会对b的所在位置带来改变，但这并不在goal set的考虑中，所以对a的goal相关信念也不会有任何改变</p></li><li><p>pick up会让b拿起物品，这对a的goal相关信念发生了改变</p></li></ul><p>所以b会认为pick up后的某些更新状态是a的goal。其中包括了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">holdby(i,b)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，至此，b会在生成虚拟世界时，将所有包含了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">B_aholdby(i,b)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的goal set统一进行考虑，最后应当得出结论为pick up。</p><p>因此，经过一回合行动后，变成了：a没拿物品，b拿着物品。</p><p>然而，在b拿起物品后，他的goal complete信号被关闭了。a也可以发现这个现象，因此a可以判断是b的上一个行为带来的改变让b无法完成任务。</p><p>而pick up带来的变化为:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo>→</mo><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">holdby(i,b) = 0 \rightarrow holdby(i,b) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><p>因此，a会以b上一个世界中的状态作为a对b的goal信念。因此a的goal set中会加入一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">B_bholby(i,b)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></p><p>如果该问题设定的max belief depth为2，则可能会多一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">B_bB_aholdby(i,b)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，但这都是后话。</p><p>此时轮到了a的回合，a此时的goal set中有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">B_aholdby(i,b)=1, B_bholdby(i,b) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。根据现有条件，a应该做的是move。</p><p>b观察到a离开了房间，由于b无法再看到a，所以b不知道a的信号状态，因此b不对goal set进行更新。此时，b的goal set中有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">B_bholdby(i,b)= 0, B_aholdby(i,b) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。要完成这个目标，只需放下物品即可。</p><p>至此，问题解决。</p><h2 id="两个方案">两个方案</h2><p>上面一个部分是在代理一开始就能够观察到其他代理行为的情况。假设代理没有观察到其他代理的行为，此时该怎么办？</p><p>现有两个方案：</p><ol><li>将其他代理的goals设为自己的Goal，但是做一下转换</li><li>对所有可能的goal set都做一次模拟，统计模拟数据，得出结果。</li></ol><p>现在先试一下第一种方案。</p><p><strong>结果证明该方法会出现一些问题</strong>，在某些极端情况下，代理可能会陷入死循环。（比如多智能体寻路的情况）</p>]]></content>
    
    
    <categories>
      
      <category>Decentralized Epistemic Planning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEL</tag>
      
      <tag>Epistemic Planning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fluid主题下，如何解决文章目录的一级标题无法跳转的bug</title>
    <link href="/2025/08/04/Fluid%E4%B8%BB%E9%A2%98%E4%B8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95%E7%9A%84%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98%E6%97%A0%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84bug/"/>
    <url>/2025/08/04/Fluid%E4%B8%BB%E9%A2%98%E4%B8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95%E7%9A%84%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98%E6%97%A0%E6%B3%95%E8%B7%B3%E8%BD%AC%E7%9A%84bug/</url>
    
    <content type="html"><![CDATA[<h1>问题描述</h1><p>有一天我写博客的时候，突然发现在文章界面中点击一级标题时无法正常跳转到对应章节，而是会跳到页面顶部。</p><h1>问题解决方案</h1><p>在网上查了很多资料，包括官方git issues里面提出的解决方案，都无法正常解决这个问题。</p><p>随后我发现当鼠标悬停在一级标题时，浏览器左下角显示的网址链接总是只会以’#'结尾，因此我认为可能是因为在网站构建时没有正确地给<code>href</code>连接对应toc文本导致的问题，因此我找到了疑似用于操作toc的js文件<code>toc.ejs</code>。此文件在<code>你的博客项目根目录\themes\fluid\layout\_partials\post</code>目录下。</p><p><img src="/images/toc-ejs%E6%96%87%E4%BB%B6%E6%89%80%E5%9C%A8%E4%BD%8D%E7%BD%AE.png" alt="toc-ejs文件所在位置"></p><p>打开后，emmm由于我不做前端，所以我看不懂。</p><p>将该文件的内容交给deepseek老师之后，老师告诉我可以尝试做一下后处理。绑定toc地址的部分为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">window</span>.<span class="hljs-property">tocbot</span>.<span class="hljs-title function_">init</span>(<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(&#123;<br>  tocSelector     : <span class="hljs-string">&#x27;#toc-body&#x27;</span>,<br>  contentSelector : <span class="hljs-string">&#x27;.markdown-body&#x27;</span>,<br>  linkClass       : <span class="hljs-string">&#x27;tocbot-link&#x27;</span>,<br>  activeLinkClass : <span class="hljs-string">&#x27;tocbot-active-link&#x27;</span>,<br>  listClass       : <span class="hljs-string">&#x27;tocbot-list&#x27;</span>,<br>  <span class="hljs-attr">isCollapsedClass</span>: <span class="hljs-string">&#x27;tocbot-is-collapsed&#x27;</span>,<br>  <span class="hljs-attr">collapsibleClass</span>: <span class="hljs-string">&#x27;tocbot-is-collapsible&#x27;</span>,<br>  scrollSmooth    : <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">includeTitleTags</span>: <span class="hljs-literal">true</span>,<br>  headingsOffset  : -boardTop,<br>&#125;, <span class="hljs-variable constant_">CONFIG</span>.<span class="hljs-property">toc</span>));<br></code></pre></td></tr></table></figure><p>这段代码似乎就是fluid使用tocbot这个第三方库来动态生成目录，但是似乎除了写差错，导致没有正常给以及标题生成对应的<code>href</code>。</p><p>所以可以在这段代码后面加上一段对目录跳转地址进行后处理的代码。还是一样的我没弄过前端，看不懂怎么搞，依然交给ds老师。</p><p>老师告诉我这个方法：</p><p>在之前给的那段代码后面加上</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 最佳方案：找到对应的标题元素并获取其真实ID</span><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-title function_">jQuery</span>(<span class="hljs-string">&#x27;#toc-body a[href=&quot;#&quot;]&#x27;</span>).<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> $link = <span class="hljs-title function_">jQuery</span>(<span class="hljs-variable language_">this</span>);<br>    <span class="hljs-keyword">var</span> linkText = $link.<span class="hljs-title function_">text</span>().<span class="hljs-title function_">trim</span>();<br>    <br>    <span class="hljs-comment">// 找到文本内容匹配的标题元素</span><br>    <span class="hljs-keyword">var</span> $matchingHeader = <span class="hljs-title function_">jQuery</span>(<span class="hljs-string">&#x27;.markdown-body h1&#x27;</span>).<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">jQuery</span>(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">text</span>().<span class="hljs-title function_">trim</span>() === linkText;<br>    &#125;).<span class="hljs-title function_">first</span>();<br>    <br>    <span class="hljs-keyword">if</span> ($matchingHeader.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>      <span class="hljs-keyword">var</span> headerId = $matchingHeader.<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;id&#x27;</span>);<br>      headerID = headerId.<span class="hljs-title function_">trim</span>().<span class="hljs-title function_">toLowerCase</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[\s]+/g</span>, <span class="hljs-string">&#x27;-&#x27;</span>);<br>      <span class="hljs-keyword">if</span> (headerId) &#123;<br>        $link.<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&#x27;#&#x27;</span> + headerId);<br>      &#125;<br>    &#125;<br>  &#125;);<br>&#125;, <span class="hljs-number">300</span>); <span class="hljs-comment">// 给tocbot更多时间完成渲染</span><br></code></pre></td></tr></table></figure><p>然后<code>hexo clean &amp;&amp; hexo s</code>，就好了。</p><p>实际上最主要的就是这一段：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> ($matchingHeader.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) &#123;<br>  <span class="hljs-keyword">var</span> headerId = $matchingHeader.<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;id&#x27;</span>);<br>  headerID = headerId.<span class="hljs-title function_">trim</span>().<span class="hljs-title function_">toLowerCase</span>().<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/[\s]+/g</span>, <span class="hljs-string">&#x27;-&#x27;</span>);<br>  <span class="hljs-keyword">if</span> (headerId) &#123;<br>    $link.<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&#x27;#&#x27;</span> + headerId);<br>  &#125;<br></code></pre></td></tr></table></figure><p>将找到的header做一下字符替换，然后加一个#前缀后连接到<code>href</code>中。</p><p>也许这并不是最优解，有什么更好的解决方案，敬请分享啊！</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid主题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对neutral settings下的epistemic problem的规划逻辑的一个尝试</title>
    <link href="/2025/08/02/Decentralized-Epistemic-Planning/%E5%AF%B9neutral%20settings%E4%B8%8B%E7%9A%84epistemic%20problem%E7%9A%84%E8%A7%84%E5%88%92%E9%80%BB%E8%BE%91%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%9D%E8%AF%95/"/>
    <url>/2025/08/02/Decentralized-Epistemic-Planning/%E5%AF%B9neutral%20settings%E4%B8%8B%E7%9A%84epistemic%20problem%E7%9A%84%E8%A7%84%E5%88%92%E9%80%BB%E8%BE%91%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%9D%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1>Policy 决策的基础解决方案</h1><p>现在，基本的解决方案流程如下：</p><pre><code class=" mermaid">graph TDa[&quot;基于agent自身对ontic world的认知，生成所有可能的virtual world&quot;] --&gt; b[&quot;使用BFS，Centralized地模拟每一个virtual world，并在完成任务时返回action sequence的第一个元素&quot;] b --&gt; c[&quot;统计所有virtual world的模拟输出，action使用次数最高的为最终policy&quot;] </code></pre><p>virtual world的生成流程如下：</p><pre><code class=" mermaid">graph TDa[&quot;获取当前agent对于Ontic world的认知世界 epistemic world&quot;] --&gt; b[&quot;将epistemic world中的每一个agent的goal设置为当前agent的belief_goals_to_others中的goal&quot;]b --&gt; c[&quot;基于epistemic world，找到所有可能且合理的ontic world&quot;]</code></pre><h1>Neutral Setting与Cooperative Setting</h1><p>由于planning的目标是让每个agent都能够完成自己的目标，因此他们是否知道其他agent的目标只能够对模型的policy生成产生一些帮助性的作用，而非绝对的需求。</p><h2 id="Cooperative-Setting">Cooperative Setting</h2><p>Cooperative setting在该项目中被认为成如下情况之一：</p><ul><li>所有agent的goals也许都不一样，但他们都在初始化时就知道对方的goals是什么。</li><li>所有agent的goals都相同，然而这个setting在decentralized problem的情况下不是很合理。</li></ul><p>项目中采用的是第一个setting，即会给每个Agent分别分配goals <code>self_goals</code>，然后再初始化的时候让这些agent拥有对于其他agent的goals的信息 <code>blief_goals_to_others</code>。 <code>belief_goals_to_others</code>中的信息只会在生成<code>virtual worlds</code>时使用，用于将goals分配给其他agents。</p><h2 id="Neutral-Setting">Neutral Setting</h2><p>Neutral setting在该项目中被视为：所有agent都不知道对方的goals。</p><p>在创建<code>virtual world</code>时，让所有Agent都拥有自己的goal才比较符合常理，然而在bfs算法中，即便agent没有goals也不会出现什么问题，因为在expand action的时候与goals无关。但是也许会让最终的输出结果变得并不准确。</p><p>因此，我们最早的解决方案是，列出所有可能的，对其他agent有关的goals，并且分配给<code>belief_goals_to_others</code>。然而，这很容易出现goals冲突问题导致问题无解。而这种无解的问题无法用直观的角度来判断，因此只能在程序模拟的过程中判断bfs无解问题。而这通常对性能会带来极大的开销。</p><p>因此，目前也可以考虑当没有对其他agent的goals产生信念时，便不再假设对方的goals。</p><h3 id="virtual-world中对其他agent的goals的分配方案">virtual world中对其他agent的goals的分配方案</h3><p>为了更好地描写，现在假设只有两个agent: a, b。目前尝试的方法是：</p><ul><li><p>a没有其他b的goal信念时：在创建<code>virtual world</code>时，将b的goal设为a的goal，但是要做一些调整</p><ul><li><p>复制a的goals，对a的每一个goals中belief sequence中的第一个元素调整为b。也就是说，如果在a的goal中为$ B_aB…\varphi<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，那么在分配给</mtext><mi>b</mi><mtext>的时候便会是</mtext></mrow><annotation encoding="application/x-tex">，那么在分配给b的时候便会是</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord cjk_fallback">，那么在分配给</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">的时候便会是</span></span></span></span>B_bB…\varphi$。如果出现了相同连续的belief sequence，则只保留一个。belief sequence在程序中用一个<code>list[str]</code>表示，那么假如修改后的sequence为<code>[b,b,a]</code>，那么就会被修改为<code>[b,a]</code>。这里贴一个完整例子：</p><ul><li><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>G</mi><mi>a</mi></msub><mo>=</mo><msub><mi>B</mi><mi>a</mi></msub><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi>φ</mi><mo>→</mo><msubsup><mi>G</mi><mi>b</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi>φ</mi><mo>→</mo><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi>φ</mi></mrow><annotation encoding="application/x-tex">G_a = B_aB_bB_a\varphi \rightarrow G&#x27;_b = B_bB_bB_a\varphi \rightarrow B_bB_a\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0489em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span></span></span></span></span></p></li></ul></li></ul></li><li><p>a有b的goal信念时，创建virtual world时，则直接将b的goal设为a对b goals的信念。如果有多个不同的信念，则会创建多个<code>virtual world</code></p></li></ul><h3 id="一个agent-如何对其他agent的goals产生信念">一个agent 如何对其他agent的goals产生信念</h3><p>现在每一个agent都会维护一个<code>complete signal</code>，后面简称信号。当信号为true时，代表该agent已经完成了自己的goal。</p><p>当然，在这个问题中，agent的信号可以被激活也可以被取消，当他发现自己又没有完成目标时，信号又会被取消。</p><p>现在只考虑了agent只能观察到能看见的其他agent当前的信号状态，不会考虑他们以前是什么样的。后续可以考虑也把这个加入进去。</p><p>当一个agent观察到有另一个agent的信号为true时，它会在能够观察到的agent的状态中枚举出所有可能的goals组合，并且将其全部假如到自己对那个agent的belief goals中。</p><p>这个方法有诸多问题需要考虑，比如说他们的goals如果是对其他人的信念，该如何处理？</p><p>这个问题似乎没有什么很好的解决方案，我们可以像一个辅助方案来减轻这个问题带来的影响。</p><p>现在，系统也会维护在每一个时间戳上agent做出的行为，由于一个时间戳上只能有一个agent行动，所以用于维护的是一个<code>history_action: list[tuple[agent_name, action]]</code>，这个列表长度应该与<code>history_world: list[list[Function]]</code> 等长。两个列表综合来看就可以理解为<code>agent_name</code>在某个<code>world</code>下选择了<code>action</code>行为。其他agent是否能够观察到这个行为，取决于<code>observation_function</code>中的定义。比如说当两个agent在那个时间戳上在同一个房间中时，这两个agent便可以得知对方在那时的action（如果那对方的行动轮次）。</p>]]></content>
    
    
    <categories>
      
      <category>Decentralized Epistemic Planning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEL</tag>
      
      <tag>Epistemic Planning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>证明：使用代理单步行为后的状态差异无法让分布式代理找出合理策略</title>
    <link href="/2025/08/02/Decentralized-Epistemic-Planning/%E8%AF%81%E6%98%8E%EF%BC%9A%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E5%8D%95%E6%AD%A5%E8%A1%8C%E4%B8%BA%E5%90%8E%E7%9A%84%E7%8A%B6%E6%80%81%E5%B7%AE%E5%BC%82%E6%97%A0%E6%B3%95%E8%AE%A9%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%A3%E7%90%86%E6%89%BE%E5%87%BA%E5%90%88%E7%90%86%E7%AD%96%E7%95%A5/"/>
    <url>/2025/08/02/Decentralized-Epistemic-Planning/%E8%AF%81%E6%98%8E%EF%BC%9A%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86%E5%8D%95%E6%AD%A5%E8%A1%8C%E4%B8%BA%E5%90%8E%E7%9A%84%E7%8A%B6%E6%80%81%E5%B7%AE%E5%BC%82%E6%97%A0%E6%B3%95%E8%AE%A9%E5%88%86%E5%B8%83%E5%BC%8F%E4%BB%A3%E7%90%86%E6%89%BE%E5%87%BA%E5%90%88%E7%90%86%E7%AD%96%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1>对代理状态差异方法的解释</h1><p>我们把一个代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>在世界状态序列为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>的justified perspective world写为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_a(\vec{w})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，在代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>的观点中，代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>在世界状态为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>的justified perspective world写为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>b</mi></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_b(f_a(\vec{w}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span>。另外，一个问题模型的所有时间戳下的世界状态集合为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>w</mi><mi>n</mi></msub><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">{</mo><msub><mi>w</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\vec{w_n} = \{w_0, w_1, w_2, ..., w_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.864em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。</p><p>在某个代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>执行一个行为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>c</mi><mi>t</mi><mo>∈</mo><mi>A</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">act \in A(a,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6542em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>后，所带来的下一个世界状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mi>c</mi><mi>t</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w&#x27;=f(act, w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>。此处<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">w&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>代表在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>世界下进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>c</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">act</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span></span></span></span>行为后所抵达的世界状态。</p><p>所谓代理状态差异，便是其他代理在代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>A</mi><mi>g</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">a\in Agt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span></span></span></span>做出行为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>c</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">act</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span></span></span></span>后，根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>f</mi><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>a</mi></mrow></msub><mo stretchy="false">)</mo><mo>⊆</mo><msub><mi>f</mi><mi>a</mi></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mover accent="true"><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>−</mo><msub><mi>f</mi><mi>a</mi></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⊂</mo><mi>G</mi><mo separator="true">,</mo><mi>i</mi><mo>∈</mo><mi>A</mi><mi>g</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">diff_{w,w&#x27;}(f_{i,a}) \subseteq f_a(f_{i}(\vec{w&#x27;})) - f_a(f_{i}(\vec{w})) \subset G, i \in Agt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2109em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9609em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6779em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2469em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span></span></span></span>的内容来判断代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>相信<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>做出行为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>c</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">act</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span></span></span></span>的目的有哪些，并以此让代理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>在下一次轮到自己的行动回合时所纳入考虑的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B(G_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><h1>证明</h1><p>假如当前问题中有四个房间</p><pre><code class=" mermaid">graph LRa(1) &lt;--&gt; b(2)b &lt;--&gt; c(3)b &lt;--&gt; d(4)</code></pre><p>代理a在1，b在3，a要去3，b要去1。假设代理知道环境中的所有内容，但是不知道对方要去哪里。思考如何用去中心化的方式解决这个问题，要求：</p><ul><li>代理之间不能沟通，交换任何信息</li><li>代理在完成目标时可以发出完成的信号</li></ul><p>首先例举出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>认为的所有可能的目标组合：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>G</mi><mi>a</mi></msub><mo>:</mo><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mspace linebreak="newline"></mspace><msub><mi>G</mi><mi>b</mi></msub><mo>:</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">G_a: B_a loc(a) = 3\\G_b: \left \{ \begin{array}{} B_bloc(b) = 1 \\ B_bloc(b) = 2 \\ B_bloc(b) = 4 \\ B_bloc(a) = 3 \end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewBox="0 0 888.89 616" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewBox="0 0 888.89 616" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>以上通过组合后，会得到7个不同的Goal settings：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>G</mi><mi>a</mi></msub><mo>:</mo><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mspace linebreak="newline"></mspace><msub><mi>G</mi><mi>b</mi></msub><mo>:</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>4.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>5.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>6.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>7.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">G_a: B_aloc(a) = 3\\G_b: \left \{ \begin{array}{}1. \left\{\begin{array}{} B_bloc(b) = 1 \end{array}\right.\\2. \left\{\begin{array}{} B_bloc(b) = 2 \end{array}\right.\\3. \left\{\begin{array}{} B_bloc(b) = 4 \end{array}\right.\\4. \left\{\begin{array}{} B_bloc(a) = 3 \end{array}\right.\\5. \left\{\begin{array}{} B_bloc(b) = 1 \\ B_bloc(a) = 3\end{array}\right.\\6. \left\{\begin{array}{} B_bloc(b) = 2 \\ B_bloc(a) = 3\end{array}\right.\\7. \left\{\begin{array}{} B_bloc(b) = 4 \\ B_bloc(a) = 3\end{array}\right.\\\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:12.0401em;vertical-align:-5.77em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-1.366em;"><span class="pstrut" style="height:6.216em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:6.216em;"></span><span style="height:4.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="4.216em" style="width:0.8889em" viewBox="0 0 888.89 4216" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V4216 H384z M384 0 H504 V4216 H384z"/></svg></span></span><span style="top:-6.216em;"><span class="pstrut" style="height:6.216em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-7.358em;"><span class="pstrut" style="height:6.216em;"></span><span style="height:4.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="4.216em" style="width:0.8889em" viewBox="0 0 888.89 4216" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V4216 H384z M384 0 H504 V4216 H384z"/></svg></span></span><span style="top:-11.566em;"><span class="pstrut" style="height:6.216em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.27em;"><span style="top:-8.87em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">1.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">2.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-6.45em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">3.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-5.24em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">4.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">5.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.03em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">6.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:1.37em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">7.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.77em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>b认为所有的目标组合与a的类似：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>G</mi><mi>b</mi></msub><mo>:</mo><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>G</mi><mi>a</mi></msub><mo>:</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">G_b: B_b loc(b) = 1\\G_a: \left \{ \begin{array}{} B_aloc(a) = 2 \\ B_aloc(a) = 3 \\ B_aloc(a) = 4 \\ B_aloc(b) = 1 \end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewBox="0 0 888.89 616" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewBox="0 0 888.89 616" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>同样会有7个不同的Goal settings：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>G</mi><mi>b</mi></msub><mo>:</mo><msub><mi>B</mi><mi>b</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>G</mi><mi>a</mi></msub><mo>:</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>4.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>5.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>6.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>7.</mn><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">G_b: B_bloc(b) = 1\\G_a: \left \{ \begin{array}{}1. \left\{\begin{array}{} B_aloc(a) = 2 \end{array}\right.\\2. \left\{\begin{array}{} B_aloc(a) = 3 \end{array}\right.\\3. \left\{\begin{array}{} B_aloc(a) = 4 \end{array}\right.\\4. \left\{\begin{array}{} B_aloc(b) = 1 \end{array}\right.\\5. \left\{\begin{array}{} B_aloc(a) = 2 \\ B_aloc(b) = 1\end{array}\right.\\6. \left\{\begin{array}{} B_aloc(a) = 3 \\ B_aloc(b) = 1\end{array}\right.\\7. \left\{\begin{array}{} B_aloc(a) = 4 \\ B_aloc(b) = 1\end{array}\right.\\\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:12.0401em;vertical-align:-5.77em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.25em;"><span style="top:-1.366em;"><span class="pstrut" style="height:6.216em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:6.216em;"></span><span style="height:4.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="4.216em" style="width:0.8889em" viewBox="0 0 888.89 4216" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V4216 H384z M384 0 H504 V4216 H384z"/></svg></span></span><span style="top:-6.216em;"><span class="pstrut" style="height:6.216em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-7.358em;"><span class="pstrut" style="height:6.216em;"></span><span style="height:4.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="4.216em" style="width:0.8889em" viewBox="0 0 888.89 4216" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V4216 H384z M384 0 H504 V4216 H384z"/></svg></span></span><span style="top:-11.566em;"><span class="pstrut" style="height:6.216em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.27em;"><span style="top:-8.87em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">1.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">2.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-6.45em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">3.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-5.24em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">4.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">5.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.03em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">6.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:1.37em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">7.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">oc</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.77em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="推演步骤">推演步骤</h2><ol><li>首先是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>行动，由于a对b的目标没有信念，所以a只会将b的目标设为与自己相同，因此，此时a在进行local planning的时候使用的goal set为：</li></ol><p class='katex-block katex-error ' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;&amp;&#039; at position 6: G_a: &amp;̲B_a loc(a) = 3\…'>G_a: &amp;B_a loc(a) = 3\\G_b: &amp;B_b loc(a) = 3</p><p>​此时，a在经过BFS算法之后得出自己此时最优的策略为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">stay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，故，a会选择<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">stay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p><ol start="2"><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">stay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>之后，其他代理会本地地算出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>a</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">diff(f_{i,a})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，由于本问题只有a和b两个代理，因此只需要算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>i</mi><mi>f</mi><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><msup><mi>w</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi>b</mi><mo separator="true">,</mo><mi>a</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">diff_{w,w&#x27;}(f_{b,a})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。很明显可以看到，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">stay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>没有将世界状态发生任何变化，因此b没有更新本地的目标信念。</p></li><li><p>现在是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>行动，b对a的目标同样没有信念，因此接下来的方法与a相同，b此时的goal set为：</p><p class='katex-block katex-error ' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;&amp;&#039; at position 6: G_a: &amp;̲B_aloc(b) = 1\\…'>G_a: &amp;B_aloc(b) = 1\\G_b: &amp;B_bloc(b) = 1</p><p>此时b在经过BFS算法后也得出自己此时最优的策略为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">stay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，故，b会选择<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">stay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p></li><li><p>不难看出，该过程会一直循环下去，卡主不动。</p></li></ol><p>因此，该方法并无法保证能够找到目标路径，会出现死循环的现象。</p>]]></content>
    
    
    <categories>
      
      <category>Decentralized Epistemic Planning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEL</tag>
      
      <tag>Epistemic Planning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Decentralized Epistemic Planning中的Goals生成策略</title>
    <link href="/2025/08/01/Decentralized-Epistemic-Planning/Decentralized-Epistemic-Planning%E4%B8%AD%E7%9A%84Goals%E7%94%9F%E6%88%90%E7%AD%96%E7%95%A5/"/>
    <url>/2025/08/01/Decentralized-Epistemic-Planning/Decentralized-Epistemic-Planning%E4%B8%AD%E7%9A%84Goals%E7%94%9F%E6%88%90%E7%AD%96%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1>基本示例</h1><p>假设goal set中只会出现hold_by相关内容，现在在a的角度假设b的goal：</p><p>假如a自己的goal为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">B_a holdby(a, i) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，允许的belief深度为2</p><p>那么现在可能得所有goals为:</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>a</mi></msub><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>a</mi></msub><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>a</mi></msub><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>a</mi></msub><msub><mi>B</mi><mi>b</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><msub><mi>B</mi><mi>b</mi></msub><msub><mi>B</mi><mi>a</mi></msub><mi>h</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>b</mi><mi>y</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">B_aholdby(a,i) = 1\\B_aholdby(a,i) = 0\\B_aholdby(b,i) = 1\\B_aholdby(b,i) = 0\\B_bholdby(a,i) = 1\\B_bholdby(a,i) = 0\\B_bholdby(b,i) = 1\\B_bholdby(b,i) = 0\\B_aB_bholdby(a,i) = 1\\B_aB_bholdby(a,i) = 0\\B_aB_bholdby(b,i) = 1\\B_aB_bholdby(b,i) = 0\\B_bB_aholdby(a,i) = 1\\B_bB_aholdby(a,i) = 0\\B_bB_aholdby(b,i) = 1\\B_bB_aholdby(b,i) = 0\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span></span></span></span></p><p>如果我们忽略state的value，仅以belief sequence和state name和parameters来进行分组的话，有8种不同的组，每个组有两个可能的value。此外，既然a是在对b的goal进行预测，那么belief sequence中不以b开头的goal都可以过滤掉。这样就只剩下了4个组。然后我们对这些组中的内容进行排列组合即可。组合总量公式应该是</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>C</mi><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">\sum_{i=1}^NC(N,i)2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span></span></p><p>因此这个例子中总共应该有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mo>×</mo><mn>2</mn><mo>+</mo><mn>6</mn><mo>×</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mn>4</mn><mo>×</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>4</mn></msup><mo>=</mo><mn>8</mn><mo>+</mo><mn>24</mn><mo>+</mo><mn>32</mn><mo>+</mo><mn>16</mn><mo>=</mo><mn>80</mn></mrow><annotation encoding="application/x-tex">4\times2+6\times 2^2 + 4\times2^3 + 1 \times 2^4 = 8 + 24 + 32 + 16 = 80</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">24</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">32</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">16</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">80</span></span></span></span> 个。</p><h1>冲突Goal解释</h1><p>从以前的Proposal中提出的观点来看，判断conflict的方法为将goal集合进行低阶映射后对新集合中的元素进行判断。如果存在conflict情况（即在同belief sequence和state name &amp; param的情况下， value不同），便视为goal集中存在conflict。</p><p>然而，之前的判断是为了定义adversarial problem，其目的并非是判断该goal集合是否成立，而是判断改goal集合是否有conflict存在。</p><p>而当前问题是要明确找到一个方法，以判断一个goal集合是否在当前domain下成立。</p><p><strong>此处提出假设：假设现在是a要得到b所有可能的goal，在判断goal集合前需要将a自己的goal与其合并。现在只对生成的b的goal进行低阶映射，如果其中含有与a的goal互斥的元素，则视为该goal集合不成立。</strong></p>]]></content>
    
    
    <categories>
      
      <category>Decentralized Epistemic Planning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEL</tag>
      
      <tag>Epistemic Planning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java学习 - 锁</title>
    <link href="/2024/12/04/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E9%94%81/"/>
    <url>/2024/12/04/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E9%94%81/</url>
    
    <content type="html"><![CDATA[<h1>乐观锁与悲观锁</h1><h2 id="悲观锁">悲观锁</h2><p>悲观锁，即以最差的情况假设每一次并发操作。简单来说，就是悲观地认为每一次并发操作都有可能受到其他线程的影响，导致数据不一致或错误。因此，悲观锁旨在一次只让一个线程进行操作，在操作完毕后再讲数据传递给下一个线程。</p><p>我们常见的<code>synchronized</code>关键字和<code>ReentrantLock</code>类就是悲观锁的一种表示形式，其能够保证代码块或者方法一次只会让一个线程执行，其余线程则需要等待锁释放。</p><h3 id="优势">优势</h3><ul><li>资源的一致性高</li><li>操作简单</li></ul><h3 id="劣势">劣势</h3><ul><li>性能开销大</li><li>死锁问题</li><li>资源浪费问题</li></ul><h2 id="乐观锁">乐观锁</h2><p>乐观锁，即认为每一次并发操作都不会出现冲突，或者概率很低。这种锁旨在让线程操作时不去上锁，而是在操作结束时对比预期值和真实值来决定操作是否成功。</p><p>我们常说的 <strong>CAS(Compare-And-Swap)</strong> 技术便是乐观锁的核心算法。<code>Atomic</code>类都是乐观锁的一种实现，其使用对数据的原子操作来确保共享资源的更新是原子的。</p><h3 id="优势-2">优势</h3><ul><li>适合高并发高吞吐场景</li><li>无锁</li><li>没有死锁问题</li></ul><h3 id="劣势-2">劣势</h3><ul><li>操作复杂</li><li>无法保证资源一致性</li><li><strong>死循环风险：</strong> 乐观锁更新失败通常都会出现自旋，自旋操作也许会因为一直不正确或者错误操作导致永远无法结束</li></ul><h2 id="乐观锁的一个简单的实现方式">乐观锁的一个简单的实现方式</h2><p>乐观锁的一个非常简单的实现方式是为数据添加一个版本号<code>version</code></p><p>假如有两个线程A和B，且他们正尝试对一个共享资源进行读和写。</p><ul><li>A读取资源值为1，获取预期<code>expectVersionA = 1</code></li><li>B读取资源值为1，获取预期<code>expectVersionB = 1</code></li><li>B尝试为资源值加1，对比<code>currentVersion = 1 == expectVersionB</code></li><li>B成功操作，将<code>version++</code></li><li>A尝试为资源值加1，对比<code>curentVersion = 2 != expectVersionA</code></li><li>由于当前<code>version</code>与预期<code>version</code>不相等，故A操作失败，执行自旋操作（重新再操作一遍）</li></ul><p>可以看到，整个操作过程中没有用到锁（或者说用了自旋锁），期间也发生了冲突的问题，但是最终却依然能够保证共享资源的一致性。</p><p>但是现实场景中肯定不止这么简单，在有大量线程并发时，这种操作也可能会变得效率低下（大量自旋操作发生）。</p><h1>synchronized(同步)</h1><p>Java的<code>synchronized</code>关键字可以用来修饰：</p><ul><li>实例方法</li><li>静态方法</li><li>代码块</li></ul><p><strong>注意：</strong><code>synchronized</code>无法用来修饰抽象方法。<code>synchronized</code>关键字是用于控制方法执行的同步，是在方法体内部实现线程同步的机制。抽象方法没有方法体，无法实现同步代码块和同步方法所需的逻辑。</p><p>早期的<code>synchronized</code>是一个<strong>重量级锁</strong>。在早期的 Java 版本中，<code>synchronized</code>关键字在底层实现上比较依赖操作系统提供的互斥锁（如通过<code>monitorenter</code>和<code>monitorexit</code>指令与对象头中的锁标志位配合）。<strong>当一个线程获取锁时，它需要向操作系统请求互斥锁资源。这种方式涉及到用户态和内核态的切换，这是一个相对复杂且耗时的过程。</strong></p><p>在Java 6之后对<code>synchronized</code>进行了大量优化：</p><ul><li>偏向锁（Biased Locking）<ul><li><strong>原理</strong>：偏向锁的核心思想是如果一段同步代码一直被一个线程访问，那么这个线程会自动获取锁，并且在之后的执行过程中，这个锁会偏向这个线程，不需要每次都进行锁的获取和释放操作。例如，在一个单线程频繁访问同步代码块的场景下，偏向锁可以大大减少获取锁的开销。当一个线程第一次访问带有<code>synchronized</code>的代码块时，JVM 会在对象头中记录这个线程的 ID，表示这个锁偏向该线程。后续这个线程再次访问时，只要检查对象头中的线程 ID 与自己一致，就可以直接进入同步代码块。</li><li><strong>性能提升</strong>：通过减少不必要的锁获取和释放操作，偏向锁能够显著提高程序在单线程访问同步代码块场景下的性能。在很多实际应用中，有相当一部分同步代码块在一段时间内是被单线程访问的，偏向锁正好可以利用这一特性。</li></ul></li><li>轻量级锁（Lightweight Locking）<ul><li><strong>原理</strong>：当出现多个线程竞争偏向锁时，偏向锁会升级为轻量级锁。轻量级锁是基于 CAS（Compare - And - Swap）操作实现的。CAS 操作是一种无锁的原子操作，它通过比较内存中的值和期望的值，如果相同则进行更新。在轻量级锁的场景下，线程会通过 CAS 操作尝试获取锁，如果获取成功，就可以进入同步代码块。如果 CAS 操作失败，说明有其他线程正在占用锁，此时线程不会立即阻塞，而是会自旋（不断尝试获取锁）一段时间。</li><li><strong>性能提升</strong>：相比于传统的重量级锁，轻量级锁避免了线程在竞争锁时立即进入阻塞状态。自旋操作在竞争不激烈的情况下，可以让线程在较短的时间内获取到锁，减少了线程上下文切换的次数，从而提高了性能。</li></ul></li><li>锁粗化（Lock Coarsening）<ul><li><strong>原理</strong>：JVM 会自动检测到一连串连续的、对同一个对象加锁和解锁的操作，并将这些操作合并为一次范围更大的加锁和解锁操作。例如，在一个循环体内频繁地对同一个对象进行<code>synchronized</code>操作，JVM 可能会将这些多次的小范围锁操作合并为一个在整个循环体外的大范围锁操作。这样可以减少获取和释放锁的次数，降低开销。</li></ul></li><li>锁消除（Lock Elimination）<ul><li><strong>原理</strong>：JVM 在编译阶段会通过逃逸分析来判断一个对象是否被多个线程访问。如果一个对象只在一个线程内被访问，即使代码中有<code>synchronized</code>操作，JVM 也会认为这个锁是不必要的，并将其消除。例如，在一个方法内部定义的局部对象，并且这个对象没有被方法返回或者传递给其他线程，那么对这个对象的<code>synchronized</code>操作就会被 JVM 消除。</li><li><strong>性能提升</strong>：通过避免不必要的锁操作，锁消除能够提高代码的性能，特别是在有大量局部对象使用<code>synchronized</code>操作的场景下。</li></ul></li></ul><div class="note note-info">            <p>从<a href="https://javaguide.cn/java/concurrent/java-concurrent-questions-02.html#synchronized-%E5%85%B3%E9%94%AE%E5%AD%97">Java Guide</a>中看到了这段内容：关于偏向锁多补充一点：由于偏向锁增加了 JVM 的复杂性，同时也并没有为所有应用都带来性能提升。因此，在 JDK15 中，偏向锁被默认关闭（仍然可以使用 <code>-XX:+UseBiasedLocking</code> 启用偏向锁），在 JDK18 中，偏向锁已经被彻底废弃（无法通过命令行打开）。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Java Guide](https://javaguide.cn/java/concurrent/java-concurrent-questions-02.html#synchronized-%E5%85%B3%E9%94%AE%E5%AD%97)">[1]</span></a></sup></p>          </div><h1>ReentrantLock</h1><p><code>ReentrantLock</code>，顾名思义，是一个可重入的互斥锁。所谓可重入，就是指同一个线程在获取了锁之后，可以再次获取该锁而不会被阻塞，这在递归调用或嵌套同步块的场景中非常有用。例如，一个线程在进入一个同步方法后，又在该方法内部调用了另一个同样被该锁保护的同步方法，如果是不可重入锁，此时线程将会被阻塞，导致死锁的发生；而<code>ReentrantLock</code>则允许这种情况，提高了代码的灵活性和安全性。</p><p><code>ReentrantLock</code>实现了<code>Lock</code>接口，该接口定义了一系列用于获取锁、释放锁以及处理锁相关状态的方法，如<code>lock()</code>、<code>unlock()</code>、<code>tryLock()</code>等。通过这些方法，开发者可以更加精细地控制线程对共享资源的访问。</p><h2 id="ReentrantLock特性">ReentrantLock特性</h2><h3 id="可重入性">可重入性</h3><p>如前所述，<code>ReentrantLock</code>的可重入性允许一个线程多次获取同一个锁。每次获取锁时，内部的计数器会递增，而每次释放锁时，计数器会递减，当计数器为 0 时，锁才真正被释放，其他线程才有机会获取该锁。</p><h3 id="公平性与非公平性">公平性与非公平性</h3><p><code>ReentrantLock</code>中有一个内部类，名为<code>Sync</code>，其有两个子类，<code>FairSync</code>和<code>NonfairSync</code>，分别意味着公平锁和非公平锁。</p><ul><li><strong>公平模式</strong>：在公平模式下，线程获取锁的顺序遵循先来后到的原则。当锁被释放时，等待时间最长的线程将优先获取锁。这种模式可以避免线程饥饿现象，即某个线程长时间无法获取锁而一直处于等待状态。但是，公平模式的实现通常会带来一定的性能开销，因为需要维护一个等待线程的队列，并按照顺序唤醒线程。</li><li><strong>非公平模式</strong>：非公平模式下，线程获取锁时会先尝试直接获取，如果获取成功则直接进入临界区，而不会考虑是否有其他线程已经在等待。如果直接获取失败，才会像公平模式一样进入等待队列。这种模式的优点是减少了线程上下文切换和唤醒等待线程的开销，在高并发场景下可能会有更好的性能表现，但可能会导致某些线程长时间无法获取锁。</li></ul><p>默认情况下<code>ReentrantLock</code>是非公平锁，但也可以在创建<code>ReentrantLock</code>实例时通过构造函数参数指定公平模式，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ReentrantLock</span> <span class="hljs-variable">fairLock</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReentrantLock</span>(<span class="hljs-literal">true</span>); <span class="hljs-comment">//创建一个公平锁。</span><br></code></pre></td></tr></table></figure><h3 id="可中断锁与不可中断锁">可中断锁与不可中断锁</h3><p>看名字也可以明显看出来，可中断锁就是在获取锁的过程中可以被中断，而不可中断所就是一旦申请了锁，便必须等到获取了锁之后才能做别的事情。</p><p><code>ReentrantLock</code>支持锁中断操作。通过<code>lockInterruptibly()</code>方法获取锁时，如果线程在等待锁的过程中被中断，会抛出<code>InterruptedException</code>异常，从而允许线程响应中断信号并进行相应的处理。这在一些需要灵活控制线程等待时间或响应外部中断事件的场景中非常有用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ReentrantLock</span> <span class="hljs-variable">lock</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReentrantLock</span>();<br><span class="hljs-type">Thread</span> <span class="hljs-variable">thread</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(() -&gt; &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">// 尝试获取锁，如果被中断则抛出异常</span><br>        lock.lockInterruptibly();<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 临界区代码</span><br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            lock.unlock();<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>        <span class="hljs-comment">// 处理中断异常</span><br>        System.out.println(<span class="hljs-string">&quot;线程被中断&quot;</span>);<br>    &#125;<br>&#125;);<br>thread.start();<br><span class="hljs-comment">// 中断线程</span><br>thread.interrupt();<br></code></pre></td></tr></table></figure><h2 id="ReentrantLock-与-synchronized-的对比">ReentrantLock 与 synchronized 的对比</h2><ul><li><p><code>ReentrantLock</code>比<code>synchronized</code>更加灵活，提供了诸如公平性选择、锁中断、条件变量等高级功能，而<code>synchronized</code>相对简单，仅提供基本的互斥和可重入功能。</p></li><li><p><code>ReentrantLock</code>可以通过<code>tryLock()</code>方法尝试获取锁，立即返回获取锁是否成功的结果，而<code>synchronized</code>在获取锁失败时会一直阻塞线程。</p></li><li><p>在低并发场景下，<code>synchronized</code>的性能与<code>ReentrantLock</code>（非公平模式）相近，因为<code>ReentrantLock</code>的非公平模式获取锁时也有一定的优化。</p></li><li><p>在高并发场景下，如果对性能要求极高且能合理利用<code>ReentrantLock</code>的特性（如非公平模式减少线程上下文切换），<code>ReentrantLock</code>可能会有更好的性能表现；但如果使用公平模式且频繁地进行锁获取和释放操作，<code>ReentrantLock</code>可能会因为维护等待队列等操作而导致性能下降，而<code>synchronized</code>的性能相对稳定。</p></li><li><p><code>synchronized</code>是 Java 语言的关键字，使用起来较为简洁，无需显式地创建锁对象和进行锁的释放操作（由虚拟机自动处理）。</p></li><li><p><code>ReentrantLock</code>需要显式地创建锁对象，并且在<code>finally</code>块中手动释放锁，以确保锁的正确释放，否则可能会导致死锁或资源泄漏等问题，这增加了代码的编写和维护成本。</p></li></ul><h1>扩展一下思维</h1><p>我们讨论了这么久锁机制，似乎目前每一个锁都只允许一个线程持有。当然，这也合理，毕竟目前我们讨论的情况都是对共享资源进行大量混合的并发操作的情况。</p><p>但是，实际上我们能够对共享资源能做的无非就是读和写两个行为，而在现实生活中，需要大规模读的情况往往远大于大规模写。而这显然是两种操作。</p><p>那么现在就可以这么想，为什么不为这两种行为分别分配一把锁呢?</p><p>这就是<strong>读写锁</strong>的由来。</p><h2 id="读写锁">读写锁</h2><p>Java中实现了读写锁的有<code>ReentrantReadWriteLock</code>，<code>StampedLock</code>。实际上就是为一个共享资源分配了两把锁，读锁和写锁。其中，读锁是<strong>共享锁</strong>，允许多个线程同时拥有。而写锁是<strong>独占锁</strong>，只能有一个线程拥有。</p><p>可以想象一下我们可以用这种锁来干什么：</p><ul><li>大量的读操作中有少许写操作：写操作的突然乱入也许会导致读的结果出现问题，但是我们可以将写锁与读锁互斥，并且让写锁的出现阻塞后续的读锁。也就是说，执行写操作的线程需要等到读操作的线程执行完毕，而同时也会阻塞后续所有线程。写锁被释放后，后续的读操作依然能够正常执行。</li><li>大量的写操作：这时候的锁的综合表现会像是重量级锁。</li></ul><p>想到这些，你也就差不多完成了对<code>ReentrantReadWriteLock</code>的理解。唯一需要加一句的是，已经获取了写锁的线程依然可以获取读锁，但是已经获取了读锁的线程却不允许获取写锁。想想为什么？</p><p>综合来说，读写锁机制会对性能带来一些提升，毕竟现在并不会限制读操作的并发访问。</p><p>然而，Java提出的<code>StampedLock</code>中引入了<strong>乐观读</strong>，旨在允许多个线程获取读锁的同时，也允许一个写线程获取写锁。这提高了并发性能，也是它比<code>ReentrantReadWriteLock</code>性能更好的原因。</p><h1>引用</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://javaguide.cn/java/concurrent/java-concurrent-questions-02.html#synchronized-%E5%85%B3%E9%94%AE%E5%AD%97">Java Guide</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>锁机制</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java学习 - 进程，线程，协程</title>
    <link href="/2024/12/04/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E8%BF%9B%E7%A8%8B%EF%BC%8C%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%8D%8F%E7%A8%8B/"/>
    <url>/2024/12/04/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E8%BF%9B%E7%A8%8B%EF%BC%8C%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%8D%8F%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1>进程(Process)</h1><p>直观来看，在打开你的任务管理器时，出现的窗口上面就会有“进程”二字。</p><p><img src="/images/%E8%BF%9B%E7%A8%8B.png" alt="进程"></p><p>由此可以看出很多东西：</p><ul><li>进程间相互独立（关闭一个进程时，其他进程没有受到影响）<ul><li>每个进程都分配了各自的内存空间（内存隔离），来避免干扰。</li><li>一个进程无法直接访问，修改或调用另一个进程的内容。</li><li>分布式系统中，如果两端之间进行了某种通信连接，那么在某一端崩溃时需要进行错误处理来避免连带另一端发生错误。</li></ul></li></ul><p>总的来说，进程就是一个程序的生命周期。</p><h2 id="进程间如何相互通信？">进程间如何相互通信？</h2><p>即便是在同一台机器中，进程间也无法直接访问到对方的内存空间，而是需要发出请求并且获得回复。现在有很多种通信方式，举一个简单的例子就是使用TCP/IP连接。可以尝试自己写一个服务器和一个客户端，然后分别运行他们，让他们之间互相通信。这也就是一种进程间通信的方法。</p><p>现实场景中，也许更多地会用到<strong>管道（Pipe）、消息队列（Message Queue）、共享内存（Shared Memory）和信号量（Semaphore）等</strong>进程间通信的方式。</p><p>以管道为例，管道是一种半双工的通信方式，它可以在具有亲缘关系（如父子进程）的进程之间传递数据。一个进程向管道写入数据，另一个进程从管道读取数据，这个过程就像是两个房间之间通过一个管道来传递物品，而不是直接进入对方的房间（内存空间）拿东西。</p><p>共享内存机制虽然允许不同进程访问同一块物理内存区域，但进程并不能随意访问，需要通过操作系统提供的接口进行申请和管理。例如，在使用共享内存时，进程需要先请求操作系统分配共享内存段，然后通过映射等操作才能访问，并且在访问过程中还要考虑同步和互斥问题，以防止数据不一致。</p><h1>线程(Thread)</h1><p>假想一下，如果一个进程中只能从头到尾运行一个任务，而无法执行别的动作。也许可以想到，对于同一个系统，可以多创建一些进程，并让他们之间相互协作。但是，进程的创建往往伴随着新的内存空间的划分，进程之间的通信往往也是非常耗时，在面对一些需要频繁进行信息交换和修改，或有大量同时运行的系统时似乎会非常难用。因此，我们可以在同一个进程中使用多线程来解决这些问题。</p><p>然而，对于计算机来说，单核CPU每一次只能处理一个任务，因此我们看到的（单核CPU）并行任务实际上是极快的CPU处理速度和任务切换速度带来的假象。</p><p>既然多线程可以解决这些问题，那么可以看出，线程具备以下特点</p><ul><li>一个进程中可以有多个线程</li><li>线程可以直接访问同一个内存空间（<strong>共享堆和方法区资源</strong>）</li></ul><p>此外，线程当然也会有属于自己的东西：</p><ul><li><strong>程序计数器：</strong> 程序计数器是一块较小的内存空间，它可以看作是当前线程所执行的字节码的行号指示器。字节码解释器工作时就是通过改变程序计数器的值来选取下一条需要执行的字节码指</li><li><strong>虚拟机栈</strong> 虚拟机栈用于存储线程执行方法时的栈帧。栈帧是一个内存区域，它包含了局部变量表、操作数栈、动态连接、方法出口等信息。当一个方法被调用时，就会创建一个对应的栈帧并压入虚拟机栈；当方法执行完成时，栈帧会出栈。</li><li><strong>本地方法栈：</strong> 本地方法栈与虚拟机栈非常相似，它主要用于为本地（Native）方法服务。本地方法是指用非 Java 语言（如 C 或 C++）编写的，通过 Java 本地接口（JNI）可以被 Java 程序调用的方法。本地方法栈为这些本地方法的执行提供了类似于虚拟机栈的支持，存储本地方法调用的相关信息，如本地方法的参数、局部变量等。</li></ul><p>综上，<strong>线程是一个比进程更加轻量级的执行单位</strong>。</p><h2 id="线程的生命周期">线程的生命周期</h2><ul><li><p>NEW: 初始状态，线程被创建出来但没有被调用 <code>start()</code> 。</p></li><li><p>RUNNABLE: 运行状态，线程被调用了 <code>start()</code>等待运行的状态。</p></li><li><p>BLOCKED：阻塞状态，需要等待锁释放。</p></li><li><p>WAITING：等待状态，表示该线程需要等待其他线程做出一些特定动作（通知或中断）。</p></li><li><p>TIME_WAITING：超时等待状态，可以在指定的时间后自行返回而不是像 WAITING 那样一直等待。</p></li><li><p>TERMINATED：终止状态，表示该线程已经运行完毕。</p></li></ul><p><img src="/images/%E7%BA%BF%E7%A8%8B%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="线程生命周期"></p><ul><li><p>任何的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">Waiting</mtext></mrow><annotation encoding="application/x-tex">\texttt{Waiting}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">Waiting</span></span></span></span></span>状态都可以在被其他线程的<code>notify</code>方法通知后进入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">Runnable</mtext></mrow><annotation encoding="application/x-tex">\texttt{Runnable}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6111em;"></span><span class="mord text"><span class="mord texttt">Runnable</span></span></span></span></span>状态。</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">Waiting</mtext></mrow><annotation encoding="application/x-tex">\texttt{Waiting}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">Waiting</span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">Time_Waiting</mtext></mrow><annotation encoding="application/x-tex">\texttt{Time\_Waiting}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">Time_Waiting</span></span></span></span></span>状态唯一的不同就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">Time_Waiting</mtext></mrow><annotation encoding="application/x-tex">\texttt{Time\_Waiting}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.2222em;"></span><span class="mord text"><span class="mord texttt">Time_Waiting</span></span></span></span></span>多了一个时限，在Java中声明<code>sleep(long millis)</code>或<code>wait(long millis)</code>时会进入该状态，并且在超时时进入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">Runnable</mtext></mrow><annotation encoding="application/x-tex">\texttt{Runnable}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6111em;"></span><span class="mord text"><span class="mord texttt">Runnable</span></span></span></span></span>状态。</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">Blocked</mtext></mrow><annotation encoding="application/x-tex">\texttt{Blocked}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6111em;"></span><span class="mord text"><span class="mord texttt">Blocked</span></span></span></span></span>状态是指在线程进入到了被锁定的方法块中时，由于没有持有对应的锁导致的阻塞状态。</p></li></ul><p>综上可见，线程的运行经常会伴随着大量的状态切换。在同一个CPU在某一时刻只能运行一个线程的情况下，CPU也需要灵活地切换当前的状态来知道自己在执行哪一个线程的什么内容。但这里会出现一个问题：<strong>CPU如何知道这个线程任务在上一次暂停时运行到哪里了？</strong></p><h2 id="上下文切换">上下文切换</h2><p>在单核 CPU 中，多线程或多进程表现出的并行效果是通过时间片轮转（分时复用）机制实现的。操作系统会为每个线程或进程分配一个时间片，例如每个时间片为 10 - 20 毫秒。</p><p>当一个线程的时间片用完后，CPU 会暂停该线程的执行，保存其上下文（包括程序计数器、寄存器等状态），然后切换到下一个线程执行。由于 CPU 切换任务的速度非常快，在人的感知或者宏观层面上，就好像这些线程或进程是在同时运行。</p><p>因此，可以想一下有哪些情况会导致一个线程停止：</p><ul><li>线程调用了<code>wait()</code>或<code>sleep()</code>方法</li><li>线程的时间片用完了</li><li>线程被阻塞</li><li>线程崩溃中止</li></ul><p>前三个会需要程序存储线程当前的运行状态，造成上下文切换。而最后一个不需要。</p><h2 id="多线程问题">多线程问题</h2><p>多线程通常是并发任务，在访问和修改公共数据时也许会因为CPU调度问题出现无法预料的同步问题，这便是造成<strong>线程不安全</strong>问题的主要原因。因此，我们经常会讨论到线程安全问题，并且提出各种解决方案。</p><p>先说一下基本概念：</p><ul><li><strong>线程安全：</strong> 一个数据，不论有多少线程同时对其进行访问和修改，都能够保证这个数据的正确性和一致性。</li><li><strong>线程不安全：</strong> 一个数据，在多线程环境下，多个线程同时对其进行访问和修改时，可能导致了数据错误，丢失和不符合预期的结果。</li></ul><p>一个线程不安全的简单例子就是：对于一个数据a = 1，有两个线程，线程A要读取这个数据，另一个线程B要修改这个数据为2。假设程序中我是先运行的线程A，后运行的线程B。那么我的预期就应该是A中会获取到a = 1，B会将a修改。 但是由于出现了某些问题，线程A在准备读取数据前，线程B先完成了修改，那么线程A便获取到了a = 2。这不符合预期，也就造成了现成不安全问题。</p><p><strong>如何解决这个问题？实际上可以很轻松地想到，这类操作一次只让一个线程执行不就好了吗？</strong></p><p>这个解法，基本上就是我们最常见的<code>synchronized</code>或者是锁了。但是现实应用当中，这个解法也会带来一些问题，比如占用资源，运行效率低，死锁问题等等。因此，我们也需要想出一些别的解决方法来处理这类问题。</p><h2 id="线程池">线程池</h2><p>每一个线程的创建的销毁都伴随着一定的资源消耗，对于有大量并发的场景来说，频繁地创建和销毁线程会对系统带来极大的负担，一个个独立的线程也难以管理。因此，可以考虑使用线程池来解决这个问题。</p><h3 id="线程池的好处">线程池的好处</h3><ul><li>方便管理</li><li>节省资源</li><li>提高响应速度</li></ul><p>实际上，基本所有的好处要么就是因为线程池本身可以被理解为一个管理多个线程的类，符合面向对象的编程思想；要么就是省去了大量且频繁地创建和销毁流程。</p><h3 id="线程池的创建">线程池的创建</h3><p>Java中常见的创建线程池的方法为：</p><ul><li>ThreadPoolExecutor()</li><li>Executor框架的Executors工具</li><li>自定义线程池</li></ul><p>前两个比较常用，想要折磨一下自己或者想要充分了解线程池的一些内部细节和可能面对的问题则可以用考虑自己从头自定义线程池。</p><p>不过要注意，Executor框架中一些常用的Executors工具并不会保证程序不会出现OOM（Out-Of-Memory 内存耗尽）问题，因为它们虽然维持了一个固定量的核心线程池，但是在超过了这个核心线程池上限之后，也并不是说一定就不会再创建新线程，而是会做一些别的事情。这需要从线程池创建的流程中讲起。</p><h3 id="线程池创建流程和潜在问题">线程池创建流程和潜在问题</h3><p>以下为<code>ThreadPoolExecutor</code>的构造函数和相关参数<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Java 线程池详解](https://javaguide.cn/java/concurrent/java-thread-pool-summary.html)">[1]</span></a></sup></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">ThreadPoolExecutor</span><span class="hljs-params">(<span class="hljs-type">int</span> corePoolSize,//线程池的核心线程数量</span><br><span class="hljs-params">                          <span class="hljs-type">int</span> maximumPoolSize,//线程池的最大线程数</span><br><span class="hljs-params">                          <span class="hljs-type">long</span> keepAliveTime,//当线程数大于核心线程数时，多余的空闲线程存活的最长时间</span><br><span class="hljs-params">                          TimeUnit unit,//时间单位</span><br><span class="hljs-params">                          BlockingQueue&lt;Runnable&gt; workQueue,//任务队列，用来储存等待执行任务的队列</span><br><span class="hljs-params">                          ThreadFactory threadFactory,//线程工厂，用来创建线程，一般默认即可</span><br><span class="hljs-params">                          RejectedExecutionHandler handler//拒绝策略，当提交的任务过多而不能及时处理时，我们可以定制策略来处理任务</span><br><span class="hljs-params">                          )</span> &#123;...&#125;<br></code></pre></td></tr></table></figure><p>线程池包含了以下关键参数：</p><ul><li>核心线程数</li><li>等待队列最大长度</li><li>最大线程数</li><li>拒绝策略</li></ul><p><strong>线程创建流程：</strong></p><p><img src="/images/%E7%BA%BF%E7%A8%8B%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B.png" alt="线程创建流程"></p><p>在某一个核心线程执行完毕进入空闲状态时，会检查等待队列中是否有任务，如果有，则为这个任务分配一个线程并执行。</p><p>当一个非核心线程执行完毕后，会空闲一段<code>keepAliveTime</code>时间。如果在这段时间中一直没有新的任务请求非核心线程，则会被销毁。</p><h3 id="拒绝策略">拒绝策略</h3><ol><li><p><code>ThreadPoolExecutor.AbortPolicy</code>：抛出 <code>RejectedExecutionException</code>来拒绝新任务的处理。</p></li><li><p><code>ThreadPoolExecutor.CallerRunsPolicy</code>： 直接创建一个线程并执行新任务。也就是直接在调用<code>execute</code>方法的线程中运行(<code>run</code>)被拒绝的任务，如果执行程序已关闭，则会丢弃该任务。</p></li><li><p><code>ThreadPoolExecutor.DiscardPolicy</code>：不管了，摆了，直接丢掉</p></li><li><p><code>ThreadPoolExecutor.DiscardOldestPolicy</code>：也是摆了，但是是丢掉最早没有执行的任务请求</p></li></ol><p>可以看出，1,3,4 都会维持一个最大线程量，而2则不会维持这个最大线程，所以也许会为程序带来一些延迟或者无法预料的问题。</p><h1>协程(Coroutine)</h1><p>Coroutine这个词挺有意思，routine可以是一个程序，co一般代表“合作”或者“多”的意思，两者加起来就成了协程。</p><p>协程（Coroutine）是一种比线程更加轻量级的用户态执行单元。它可以在一个线程内实现类似多任务的调度，允许在函数执行过程中暂停，然后在需要的时候恢复执行。</p><p><strong>跟线程比起来，线程的切换会涉及到用户态和内核态的切换，开销相对较大。协程则是在用户态中调度，有着极低的切换成本。</strong></p><p>协程提供了一种类似于顺序编程的并发模型，使得开发者可以用同步的思维方式来编写异步代码。通过使用特定的关键字（如 Python 中的<code>async/await</code>），开发者可以很方便地在函数执行过程中暂停协程，等待某个异步操作完成后再继续执行。不难发现，由于协程是在一个线程下工作，不存在多线程同时访问资源的问题，也就不会出现同步问题（因为是线性的，顺序性的执行）。</p><p><strong>既然协程对比线程有这么多的关键优势，为什么没有大量使用协程？</strong></p><ul><li><p>协程在同一个线程下运行，在多核CPU环境的今天，无法充分发挥多核的优势。</p></li><li><p>现有的系统大多数都是在多进程和多线程架构构建的，将整个系统转化为协程也许会需要将整个系统重写，成本高昂。</p></li><li><p>不是所有的编程语言都原生支持协程。虽然一些现代语言（如 Python、Go 等）对协程有很好的支持，但还有许多其他语言可能没有内置的协程机制，或者支持得不够完善。在这些语言中使用协程可能需要引入第三方库，而这些库的质量、性能和兼容性可能参差不齐。</p></li><li><p>即使在支持协程的语言中，一些现有的软件框架和库可能没有针对协程进行优化。</p></li><li><p>协程的调试相对复杂，因为其执行流程是非线性的，可能会在多个地方暂停和恢复。目前，许多调试工具是基于传统的顺序编程或者多线程编程模型设计的，对于协程的调试支持有限。</p></li></ul><p>总的来说，似乎就是生态不够完善。</p><h1>引用</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://javaguide.cn/java/concurrent/java-thread-pool-summary.html">Java 线程池详解</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>进程</tag>
      
      <tag>线程</tag>
      
      <tag>协程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java学习 - 集合类</title>
    <link href="/2024/12/03/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E9%9B%86%E5%90%88%E7%B1%BB/"/>
    <url>/2024/12/03/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E9%9B%86%E5%90%88%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<p>想到有关Java集合类有关的内容，就是几点：</p><ul><li>列表(ArrayList)</li><li>链表(LinkedList)</li><li>集合(Set, HashSet)</li><li>键值对(HashMap, HashTable)</li><li>线程安全</li></ul><h1>ArrayList相关</h1><p>一般来说，<strong>ArrayList</strong>要不就是跟<strong>LinkedList</strong>进行对比，要不就是询问有关<strong>线程安全</strong>相关的内容。</p><h2 id="ArrayList-VS-Vector-VS-Array-VS-LinkedList">ArrayList VS. Vector VS. Array VS. LinkedList</h2><table><thead><tr><th style="text-align:center">ArrayList</th><th style="text-align:center">LinkedList</th><th style="text-align:center">Vector</th><th style="text-align:center">Array</th></tr></thead><tbody><tr><td style="text-align:center">底层维护的是一个数组</td><td style="text-align:center">底层是一个双向链表</td><td style="text-align:center">底层维护的是一个数组</td><td style="text-align:center">本身就是一个数组</td></tr><tr><td style="text-align:center">内存是连续的</td><td style="text-align:center">内存不是连续的</td><td style="text-align:center">内存是连续的</td><td style="text-align:center">内存是连续的</td></tr><tr><td style="text-align:center">支持随机访问</td><td style="text-align:center">不支持随机访问</td><td style="text-align:center">支持随机访问</td><td style="text-align:center">支持随机访问</td></tr><tr><td style="text-align:center">线程不安全</td><td style="text-align:center">线程不安全</td><td style="text-align:center">线程安全</td><td style="text-align:center">线程不安全</td></tr></tbody></table><h2 id="ArrayList扩容">ArrayList扩容</h2><p>关于ArrayList的扩容，可以将其分阶段来讲</p><p>创建新ArrayList对象：</p><ul><li>指定了大小：ArrayList大小即为指定大小</li><li>没有指定大小：ArrayList容量初始化为0</li></ul><p>添加元素：</p><ul><li>大小不为0：判断添加元素后ArrayList长度是否超过了capacity。如果超过了：<ul><li>扩容后没有超过最大指定容量(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">MIN_ARRAY_SIZE</mtext></mrow><annotation encoding="application/x-tex">\texttt{MIN\_ARRAY\_SIZE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7063em;vertical-align:-0.0951em;"></span><span class="mord text"><span class="mord texttt">MIN_ARRAY_SIZE</span></span></span></span></span>)：<code>capacity = capacity + (capacity &gt;&gt; 1)</code>，基本上就是为原上限的1.5倍</li><li>扩容后超过了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">MIN_ARRAY_SIZE</mtext></mrow><annotation encoding="application/x-tex">\texttt{MIN\_ARRAY\_SIZE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7063em;vertical-align:-0.0951em;"></span><span class="mord text"><span class="mord texttt">MIN_ARRAY_SIZE</span></span></span></span></span>：<ul><li>超过了最大容量：<code>capacity = INTEGER.MAX_VALUE</code></li><li>没有超过最大容量：<code>capacity = MIN_ARRAY_SIZE</code></li></ul></li></ul></li><li>扩容之后，新建一个容量为新<code>capacity</code>的数组，将旧数组内容使用<code>copyof()</code>复制到新数组中，将引用指向新数组的内存地址，释放旧数组。</li></ul><h2 id="CopyOnWriteArrayList">CopyOnWriteArrayList</h2><p><strong>CopyOnWriteArrayList</strong>是一个线程安全的ArrayList，在现实中的运用场景，通常会假设读情况远远大于写情况。</p><p>在该数据结构中引入了一个“写时复制”的理念，其核心非常简单。由于假设了读频率远大于写，所以在出现写的情况时，会生成一个原数组的拷贝，然后写操作只会在这个拷贝上进行修改。在修改结束之后，再将结果覆盖到原数组上。</p><p><strong>除此以外，跟正常ArrayList的差别不大</strong>，<strong>为数不多的差别体现在CopyOnWriteArrayList中没有实现像ArrayList中那样的扩容机制。</strong></p><h1>Map相关</h1><p>Map的核心就是键值对，然后设计了一系列的针对解决高性能键值对操作问题的数据结构。</p><h2 id="HashMap-VS-HashTable">HashMap VS. HashTable</h2><table><thead><tr><th style="text-align:center">HashMap</th><th style="text-align:center">HashTable</th></tr></thead><tbody><tr><td style="text-align:center">非线程安全</td><td style="text-align:center">线程安全</td></tr><tr><td style="text-align:center">常用类</td><td style="text-align:center">古早版本的产物，少用</td></tr><tr><td style="text-align:center">接受null值</td><td style="text-align:center">不接受null值</td></tr><tr><td style="text-align:center">扩容机制: 2n</td><td style="text-align:center">扩容机制: 2n+1</td></tr><tr><td style="text-align:center">对哈希值进行了高位和低位<br />的混合扰动处理以减少冲突</td><td style="text-align:center">直接使用hashcode()</td></tr><tr><td style="text-align:center">桶大小小时：值为链表<br />桶大小大时：只为红黑树</td><td style="text-align:center">没有动态策略</td></tr></tbody></table><p><strong>扩容机制:</strong></p><p><strong>HashTable:</strong></p><ul><li>没有指定初始值：11</li><li>扩容时： 2n +1</li></ul><p><strong>HashMap:</strong></p><ul><li>没有指定初始值：16</li><li>指定了初始值：取决于初始值扩容到2的幂次方大小</li><li>扩容时：2n</li></ul><h2 id="HashCode相关">HashCode相关</h2><h3 id="经典问题：重写equals-时为什么必须重写hashCode-方法">经典问题：重写equals()时为什么必须重写hashCode()方法?</h3><p>在将类实例添加到Hash相关数据结构中时，有如下步骤：</p><ol><li>计算该实例对应的hashCode()，同时计算其他已添加到数据结构中对象的hashCode</li><li>如果没有相同hashCode，程序会认为没有相同对象被添加进结构中，否则调用equals方法来判断两个对象是否相同</li><li>根据结果，判断是否成功添加了对象</li></ol><p>由以上可以看出来，在某些情况下，equals和hashCode都被用来检测两个对象是否相等，如果没有重写hashCode方法，也许会发生以下问题：</p><ul><li>两个不同的对象由极大可能性拥有相同的hashCode，这违背了java的equals与hashcode的契约（即对象A与对象Bequals  -&gt; 对象A的hashcode与对象B的hashcode相同）</li><li>添加对象到结构中时，equals为true的两个对象也许hashcode不相同，这导致两个本应放在相近或者同一个桶中的对象被分在了不同的桶中</li><li>在结构中查找对象时，无法精确定位到目标对象，导致潜在的错误的查询失败问题</li></ul><h2 id="LinkedHashMap">LinkedHashMap</h2><p>其本质就是为每一个键值添加了一个双向链表节点的特性，让他们多了一个next指针和一个prev指针。</p><p>由于依然保留了HashMap的特性，LinkedHashMap在桶大小到了一定阈值时便将内部结构变为红黑树。因此，可以延伸出一个问题：这里的红黑树节点与HashMap的红黑树节点是一样的吗？</p><p><strong>答案是一样的</strong>，HashMap中的TreeNode继承了有双向链表特性的Entry。这让它们有着Entry的特性的同时，也拥有TreeNode的特性。只是在HashMap中并不会用到Entry的特性。Java的设计者应该是为了统一节点风格而这么做的。但是这样做，似乎会让TreeNode多了两个没有用的引用指针，导致资源浪费。关于这一点，听听Java设计者怎么说的：</p><div class="note note-info">            <p>Because TreeNodes are about twice the size of regular nodes, weuse them only when bins contain enough nodes to warrant use(see TREEIFY_THRESHOLD). And when they become too small (due toremoval or resizing) they are converted back to plain bins.  Inusages with well-distributed user hashCodes, tree bins arerarely used.  Ideally, under random hashCodes, the frequency ofnodes in bins follows a Poisson distribution</p>          </div><p>大意就是HashMap中的键值被转化为红黑树的可能性比较低。就算转为红黑树变为树节点，也可能会因为移除或者扩容将 <code>TreeNode</code> 变为 <code>Node</code>，所以 <code>TreeNode</code> 的使用概率不算很大，对于这一点资源空间的浪费是可以接受的。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[LinkedHashMap 源码分析](https://javaguide.cn/java/collection/linkedhashmap-source-code.html)">[1]</span></a></sup></p><h2 id="ConcurrentHashMap">ConcurrentHashMap</h2><p>顾名思义，是一个线程安全的HashMap。这个类被分为两个时期进行讨论</p><h3 id="Java-8-以前">Java 8 以前</h3><p>采用了Segment + HashMap的方式，将HashMap数据分为多个Segment,每一个Segment中都维护着一个类似于HashMap的结构。每一个Segment中都分配了一把锁，以保证在对某一个Segment中的内容进行操作时，不会让其他Segment中的内容的读写造成影响。</p><p>这里的Segment继承了ReentrantLock，所以每一个Segment本身也就是一个可重入锁。在1.8以前，ConcurrentHashMap维护的是一个Segment数组，其大小在初始化之后便无法改变，也就是说，假设初始化大小为n，则意味着最高可支持n个线程并行操作。然而，默认n = 16。</p><h3 id="Java-8之后">Java 8之后</h3><p>摒弃了Segment，采取了Node + CAS / Synchronized 来实现线程安全。当然，这里的Node取决于键值形式，也许是双向链表Node，也也许是TreeNode。</p><p>新的ConcurrentHashMap大量使用了CAS机制来进行读写操作，但是在某些情况下依然会使用Synchronized来保证线程安全。比如说，当一个桶的大小（冲突量）超过阈值，需要将键值结构转为红黑树时，ConcurrentHashMap会使用Synchronized将该key中的内容锁住，以保证数据完整性和安全性。</p><h1>引用</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://javaguide.cn/java/collection/linkedhashmap-source-code.html">LinkedHashMap 源码分析</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>集合类</tag>
      
      <tag>ArrayList</tag>
      
      <tag>LinkedList</tag>
      
      <tag>Queue</tag>
      
      <tag>HashMap</tag>
      
      <tag>HashTable</tag>
      
      <tag>ConcurrentHashMap</tag>
      
      <tag>Vector</tag>
      
      <tag>Array</tag>
      
      <tag>HashSet</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java学习 - 基本数据类型</title>
    <link href="/2024/12/03/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2024/12/03/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1>基本数据类型</h1><p>Java中有8种数据类型</p><table><thead><tr><th style="text-align:center">名称</th><th>包装类</th><th style="text-align:center">位数</th><th style="text-align:center">占用字节</th><th style="text-align:center">默认值</th><th style="text-align:center">是否有默认缓存？</th><th style="text-align:center">取值范围</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td>Byte</td><td style="text-align:center">8</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">是</td><td style="text-align:center">[-2^7, 2^7 - 1]</td></tr><tr><td style="text-align:center">short</td><td>Short</td><td style="text-align:center">16</td><td style="text-align:center">2</td><td style="text-align:center">0</td><td style="text-align:center">是</td><td style="text-align:center">[-2^15, 2^15 - 1]</td></tr><tr><td style="text-align:center">int</td><td>Integer</td><td style="text-align:center">32</td><td style="text-align:center">4</td><td style="text-align:center">0</td><td style="text-align:center">是</td><td style="text-align:center">[-2^31, 2^31 - 1]</td></tr><tr><td style="text-align:center">long</td><td>Long</td><td style="text-align:center">64</td><td style="text-align:center">8</td><td style="text-align:center">0L</td><td style="text-align:center">是</td><td style="text-align:center">[-2^ 63, 2^63 - 1]</td></tr><tr><td style="text-align:center">float</td><td>Float</td><td style="text-align:center">32</td><td style="text-align:center">4</td><td style="text-align:center">0f</td><td style="text-align:center">否</td><td style="text-align:center">1.4E-45 ~ 3.4028235E38</td></tr><tr><td style="text-align:center">double</td><td>Double</td><td style="text-align:center">64</td><td style="text-align:center">8</td><td style="text-align:center">0d</td><td style="text-align:center">否</td><td style="text-align:center">4.9E-324 ~ 1.7976931348623157E308</td></tr><tr><td style="text-align:center">char</td><td>Character</td><td style="text-align:center">4</td><td style="text-align:center">1</td><td style="text-align:center">‘u0000’</td><td style="text-align:center">是</td><td style="text-align:center">0 ~ 65535（2^16 - 1）</td></tr><tr><td style="text-align:center">boolean</td><td>Boolean</td><td style="text-align:center">1</td><td style="text-align:center">未明确定义</td><td style="text-align:center">false</td><td style="text-align:center">是</td><td style="text-align:center">true、false</td></tr></tbody></table><p>Java中，局部变量会被存入Java虚拟机栈中的局部变量表中，未被static修饰的基本数据则被存入Java虚拟机的堆中。而对于包装类，其本质是一个对象，而显而易见，基本上所有对象都被存在堆中。</p><div class="note note-info">            <p><strong>为什么说是几乎所有对象实例都存在于堆中呢？</strong> 这是因为 HotSpot 虚拟机引入了 JIT 优化之后，会对对象进行逃逸分析，如果发现某一个对象并没有逃逸到方法外部，那么就可能通过标量替换来实现栈上分配，而避免堆上分配内存 <sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[基础常用面试题总结(上)](https://javaguide.cn/java/basis/java-basic-questions-01.htmlJava)">[1]</span></a></sup></p>          </div><h2 id="基础数据包装类的默认缓存">基础数据包装类的默认缓存</h2><p>Java为大部分基础数据的包装类都添加了默认缓存，对于整型系列，都有[-128, 127]的缓存。对于Character则是[0,127]，而对于Boolean则是(True, False)。</p><p>默认缓存的意义在于将一些经常使用的对象优先进行缓存，以便在实际操作时减少由于频繁创建对象带来的性能损耗。</p><p><strong>缓存的实现，从底层代码来看是一目了然的</strong>。这里给一个Integer的例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Integer <span class="hljs-title function_">valueOf</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span> &#123;<br>    <span class="hljs-keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)<br>        <span class="hljs-keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Integer</span>(i);<br>&#125;<br><br> <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IntegerCache</span> &#123;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">low</span> <span class="hljs-operator">=</span> -<span class="hljs-number">128</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> high;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Integer cache[];<br><br>    <span class="hljs-keyword">static</span> &#123;<br>        <span class="hljs-comment">// high value may be configured by property</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> <span class="hljs-number">127</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">integerCacheHighPropValue</span> <span class="hljs-operator">=</span><br>            sun.misc.VM.getSavedProperty(<span class="hljs-string">&quot;java.lang.Integer.IntegerCache.high&quot;</span>);<br>        <span class="hljs-keyword">if</span> (integerCacheHighPropValue != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> parseInt(integerCacheHighPropValue);<br>                i = Math.max(i, <span class="hljs-number">127</span>);<br>                <span class="hljs-comment">// Maximum array size is Integer.MAX_VALUE</span><br>                h = Math.min(i, Integer.MAX_VALUE - (-low) -<span class="hljs-number">1</span>);<br>            &#125; <span class="hljs-keyword">catch</span>( NumberFormatException nfe) &#123;<br>                <span class="hljs-comment">// If the property cannot be parsed into an int, ignore it.</span><br>            &#125;<br>        &#125;<br>        high = h;<br><br>        cache = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Integer</span>[(high - low) + <span class="hljs-number">1</span>];<br>        <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> low;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">k</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; k &lt; cache.length; k++)<br>            cache[k] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Integer</span>(j++);<br><br>        <span class="hljs-comment">// range [-128, 127] must be interned (JLS7 5.1.7)</span><br>        <span class="hljs-keyword">assert</span> IntegerCache.high &gt;= <span class="hljs-number">127</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">IntegerCache</span><span class="hljs-params">()</span> &#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到，<strong><code>...Cache</code>是一个静态类</strong>，内部信息在类加载的时候便会被加载到内存中去（<strong>放进常量池</strong>）。<code>...Cache</code>这个静态类中维护了一个类型为<code>...</code>的数组，并在类加载时便初始化。valueOf()方法通常在装箱的时候调用，因此可以知道，装箱时并不是直接创建一个存储了基本类型的对象，而是先对基本类型进行一个范围判断知乎决定是否创建一个新的对象还是从缓存中获取对象。其他的包装类缓存也是大同小异，不过可以从中看出来，缓存的上限是可以通过JVM参数自定义的：<code>-XX:AutoBoxCacheMax</code>。</p><p>对于浮点数系列则没有设置缓存，个人觉得有如下几个原因：</p><ol><li>浮点是连续的。相较于整型，浮点很难在实际操作中对某一些数进行预缓存，并且经常使用它们。既然无法确保这一点，便无法提升性能。</li><li>浮点本身便有精度问题。</li></ol><h2 id="装箱与拆箱">装箱与拆箱</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Integer</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>; <span class="hljs-comment">// 装箱</span><br><span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> a; <span class="hljs-comment">// 拆箱</span><br></code></pre></td></tr></table></figure><p><strong>装箱：</strong> 调用包装类的valueOf()方法 （<code>Integer a = Integer.valueOf(10);</code>），因此在装箱时会判断对应值是否在缓存范围内，来决定是否直接返回缓存内容。</p><p><strong>拆箱：</strong> 调用xxxValue()方法 (<code>int b = a.intValue();</code>)。</p><h2 id="浮点数精度问题">浮点数精度问题</h2><p>其实很好理解，计算机来理解一个数，总是会有一个用于存储数据的字节量，而这个字节量一定是有限的，所以只能够存储一定位数的数据。作为浮点数（小数），我们都知道，我们无法确保其一定会是有限位数的小数，比如说无限循环小数，无理数等等。这些书无法用限定的字节量来精确表达，只能够到让它们到了一定小数点后位数之后将其截断，这也就是造成了浮点数的精度问题的其中之一。</p><p>我个人认为这么回答也没有问题，但是浮点数精度问题也是由于用于表示浮点数的二进制标准带来的问题。对于float来说，字节位数为32，细节分下来：第一位为符号位，2-9是指数位，10-32是尾数位。(double则是1为符号位，2-12是指数位，13-64是尾数位)。理论上而言，足够长的位数能够将浮点数的精度误差近似为0，但是终究会有表示能力的问题，这会让一些十进制的小数在表示二进制时是无限循环小数。</p><h3 id="如何解决精度问题">如何解决精度问题</h3><p><strong>考虑浮点数本身：</strong> 可以使用<code>BigDecimal</code>类来解决精度问题</p><p><strong>考虑浮点数之间的大小关系问题</strong> ： 可以为浮点数之间设一个误差空间来消除精度带来的问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">float</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-number">2.0f</span> - <span class="hljs-number">1.9f</span>;<br><span class="hljs-type">float</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">1.8f</span> - <span class="hljs-number">1.7f</span>;<br>System.out.println(a == b); <span class="hljs-comment">// false</span><br>System.out.println(Math.abs(a  - b) &lt; <span class="hljs-number">0.00001f</span>); <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><h1>引用</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://javaguide.cn/java/basis/java-basic-questions-01.htmlJava">基础常用面试题总结(上)</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>数据类型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java学习 - 面向对象</title>
    <link href="/2024/11/26/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <url>/2024/11/26/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h1>面向对象</h1><h2 id="何为面向对象？"><strong>何为面向对象？</strong></h2><p>面向对象是一种软件开发方法，一种编程范式<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[百度百科：面向对象](https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/2262089)">[1]</span></a></sup>。面向对象编程时一种以“<strong>对象</strong>”为核心的编程范式，而Java是一门典型的面向对象编程语言。通过<strong>类和对象</strong>的概念，将现实世界的实体机器行为映射到程序中。</p><ul><li><p><strong>类 (Class)：</strong> 类是对象的模板或蓝图，定义了对象的属性和方法。</p></li><li><p><strong>对象 (Object)：</strong> 对象是类的实例，具体表现为程序中具有独立状态和行为的实体。</p></li><li><p><strong>方法 (Method)：</strong> 定义对象的行为（功能）。</p></li><li><p><strong>属性 (Attribute)：</strong> 描述对象的特征（数据）。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="来自于GPT老师">[2]</span></a></sup></p></li></ul><p>这样解释程序结构与事物之间的联系是十分符合人的逻辑的，因此人们可以通过这个形式，给予程序结构各种不一样的设计。</p><h2 id="与面向过程的区别">与面向过程的区别</h2><p>面向过程将一个任务中所需要用到的方法拆开并进行使用。而面向对象则是创建一个个对象，并基于对象与对象之间的关系和他们内部的一些行为和方法来完成任务。</p><p>可以看出来，面向过程是针对任务的，相较面向对象会更加一目了然，并且少了很多步骤，因此面向过程的执行效率比面向对象要快。但是代码设计更加单一，难以管理和进行扩展重构，缺乏结构性和灵活性。</p><h2 id="面向对象的三大核心特征：封装，继承，多态"><strong>面向对象的三大核心特征：封装，继承，多态</strong></h2><h3 id="封装："><strong>封装：</strong></h3><p>将数据与方法集合（封装）到一起，使其形成一个独立的实体。数据在实体的内部，可以隐藏内部细节，只对外部开放一些接口来与外部产生联系。</p><p><strong>优点：</strong></p><ul><li><strong>减少耦合</strong>：确保了实体为独立的，因此一个实体的修改并不会对其他实体本身造成影响。</li><li><strong>方便性能检测：</strong> 因为试图独立且扮演着各自的角色与行为，因此在检测影响性能的因素时能够更加清晰地确定哪里出了问题。</li><li><strong>降低构建大型系统的风险：</strong> 系统的崩溃也许并不是因为这个独立的实体造成的。</li><li><strong>提高安全性：</strong> 有效隐藏了实体的内部信息，降低受到更改和攻击的风险。</li><li>符合直觉</li></ul><h3 id="继承："><strong>继承：</strong></h3><p>实现了<strong>A is a B</strong>这样的关系。指的是<strong>一个类（子类）可以从另一个类（父类）中获取属性和方法</strong>，从而实现代码复用和扩展。</p><ol><li><strong>父类（超类 / 基类）：</strong> 提供属性和方法的类。</li><li><strong>子类（派生类）：</strong> 继承父类的类，可以直接使用父类的属性和方法，也可以添加自己的功能。</li></ol><p>比如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>h</mi><mi>a</mi><mi>p</mi><mi>e</mi><mo>→</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>l</mi><mi>e</mi><mo>→</mo><mi>S</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>r</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Shape \rightarrow Rectangle \rightarrow Square</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">ha</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">Sq</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span></span></span></span>， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>l</mi><mo>→</mo><mi>R</mi><mi>a</mi><mi>b</mi><mi>b</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Animal \rightarrow Rabbit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">nima</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">abbi</span><span class="mord mathnormal">t</span></span></span></span>， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mi>e</mi><mi>h</mi><mi>i</mi><mi>c</mi><mi>l</mi><mi>e</mi><mo>→</mo><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Vehicle \rightarrow Train</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal">e</span><span class="mord mathnormal">hi</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">ain</span></span></span></span>​等等。</p><p>继承应该遵循里氏替换原则，子类对象必须能够替换掉所有父类对象。<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="[[Java 全栈知识体系: 面向对象](https://pdai.tech/md/java/basic/java-basic-oop.html)]">[3]</span></a></sup></p><p><strong>优点：</strong></p><ul><li><p><strong>代码复用：</strong> 子类可以直接复用父类的代码，无需重复编写。</p></li><li><p><strong>易于扩展：</strong> 新的功能可以通过扩展现有类实现。</p></li><li><p><strong>逻辑清晰：</strong> 类的层次关系体现了现实世界中“是某种类型”的逻辑。</p></li></ul><p><strong>局限性：</strong></p><ul><li><p><strong>单继承限制：</strong> Java 不支持类的多继承（但可以通过接口实现类似功能）。</p></li><li><p><strong>过度继承问题：</strong> 如果层次过深，子类和父类之间的关系复杂，会导致代码维护困难。</p></li><li><p><strong>强耦合：</strong> 子类与父类高度耦合，父类的修改可能影响所有子类。</p></li></ul><h3 id="多态："><strong>多态：</strong></h3><p><strong>指同一个方法或操作在不同对象中表现出不同的行为</strong><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="来自于GPT老师">[2]</span></a></sup>。多态主要有两种形式：</p><ol><li><p><strong>编译时多态（静态多态）：</strong> 方法重载（Method Overloading），在同一个类中定义多个拥有相同名称但参数类型或数量不同的方法。</p><ul><li>在<strong>编译器</strong>便决定</li><li><strong>不涉及继承或类层次结构</strong></li></ul></li><li><p><strong>运行时多态（动态多态）：</strong> 方法重写（Method Overriding），在不同类中，<strong>根据实际引用的对象类型调用方法（父类引用指向子类对象）</strong>。</p><ul><li>在<strong>运行期</strong>确定</li><li><strong>需要继承或实现接口</strong></li><li>父类引用可以指向子类对象</li></ul></li></ol><p><strong>优点：</strong></p><ul><li><p><strong>提高代码复用性：</strong> 子类可以直接使用父类的方法或重写其行为，减少代码重复。</p></li><li><p><strong>增强代码灵活性：</strong> 父类引用可以指向不同的子类对象，能够适应需求的变化。</p></li><li><p><strong>支持接口和抽象类的实现：</strong> 多态性使得面向接口编程更加简单。</p></li></ul><h1>问题</h1><ol><li><strong>什么是类？类在 Java 中有什么作用？</strong><ul><li>类在Java中是最基础的组件。类可以将一系列属性和方法综合起来，用于表示某一个东西。一个类可以被理解为一个对象的抽象，在创建对象时，需要使用类来创建实例。</li></ul></li><li><strong>解释 Java 中对象的创建过程，包括内存分配情况。</strong><ul><li>在Java中，<strong>创建对象前需要先用类加载器加载对象对应的类</strong>。流程如下：<ul><li>JVM会在首次使用一个类时加载它，JVM会加载类的字节码(.class)文件到内存中。</li><li>从磁盘或者网络等位置读取类的字节码文件，并将其转换为 JVM 内部可以处理的二进制数据结构，存放在方法区（在 Java 8 及以后，方法区的实现是元空间，位于本地内存）。</li><li>检查字节码文件的格式是否符合 Java 虚拟机规范，确保类文件的正确性，例如检查字节码是否被篡改等。</li><li>为类的静态变量分配内存并设置默认初始值。</li><li>将类、接口、字段和方法的符号引用转换为直接引用。简单来说，就是确定类中引用的其他类、方法等的实际内存地址。</li><li>执行类的初始化代码，主要是执行静态初始化块和对静态变量进行显式赋值。这个阶段是严格按照类中定义的顺序执行的。</li></ul></li><li><strong>创建对象：</strong><ul><li><strong>默认初始化</strong>：分配完内存后，JVM 会对对象的成员变量进行默认初始化。例如，对于基本数据类型，<code>int</code>类型会被初始化为 0，<code>boolean</code>类型会被初始化为<code>false</code>，引用类型会被初始化为<code>null</code>。</li><li><strong>显式初始化</strong>：接着会按照类中定义的变量初始化顺序，对成员变量进行显式初始化。例如，如果在<code>Person</code>类中有<code>private int age = 20;</code>，那么<code>age</code>会被初始化为 20。</li><li><strong>构造方法调用</strong>：最后会调用对象的构造方法。构造方法可以对对象进行更复杂的初始化操作，例如，在<code>Person</code>类的构造方法中可以初始化其他成员变量或者执行一些其他的逻辑操作。</li></ul></li></ul></li><li><strong>简述 Java 中构造函数的特点和用途，它与普通方法有何区别？</strong><ul><li>构造函数在创建对象实例时调用，通常用于初始化对象的属性，或者执行一些创建对象时所需的流程。</li><li>与普通方法的区别：<ol><li>代码中不需要定义返回类型，且没有返回值</li><li>无法被重写，但可以被重构</li><li>构造函数名必须与类名完全一致</li><li>生成类对象时，自动被调用</li></ol></li></ul></li><li><strong>继承在 Java 中有什么意义？请举例说明如何实现类的继承以及继承带来的好处和潜在风险。</strong><ul><li>继承可以让一个类（子类）从另一个类（父类）中获取属性和方法，并可以灵活地重写与进行扩展，符合面向对象的编程思想。</li><li>好处：代码复用，符合直觉，可灵活拓展</li><li>潜在风险：与父类或子类高度耦合；Java仅支持单继承；继承程度过深也许会导致代码维护难度大幅度提高。</li></ul></li><li><strong>什么是多态？在 Java 中如何通过方法重写和方法重载来体现多态性？</strong><ul><li>多态即方法可以被重载或重写，以让同一个方法在不同对象中具有不同的行为。重载即同名方法在使用不同类型和长度的参数时有着不同的行为。而重写则是在类中覆盖父类或接口方法来让类的行为变得不同。</li></ul></li><li><strong>接口在 Java 中的作用是什么？它与抽象类有哪些异同点？</strong><ul><li>接口在Java中可以让类具备某种功能或特性但并非继承关系。与抽象类不同的是接口可以多继承，但抽象类不能。因为抽象类主张的还是类与类之间的关系，强调代码复用。</li></ul></li><li><strong>如何在 Java 中实现封装？封装的好处有哪些？</strong><ul><li>Java中，可以将一个类考虑成一个封装的实现，因为封装的本意就是将多个数据和方法集合到一起，并且规定他们对外的可见度。</li><li>封装的好处：提高安全性；方便管理；减少耦合</li></ul></li><li><strong>谈谈你对 Java 中访问修饰符（public、private、protected、default）的理解，它们分别在什么场景下使用？</strong><ul><li><strong>public</strong>: 用public修饰的属性和方法对外是公开的，外部对象可以随时访问这些属性和方法并且进行修改和调用。</li><li><strong>private</strong>：用private修饰的属性和方法不对外公开，是内部私有的，只有对象本身可以对其进行直接访问和修改。</li><li><strong>protected</strong>：用protect修饰的属性和方法只对自己和子对象公开，其余对象无法访问和修改。</li><li><strong>default</strong>：在Java中，没有用任何修饰符修饰的属性或方法便为default。具有default访问权限的内容对同一个保重的其他类和对象是可见的。从Java 8开始，default被用来修饰接口中的方法，旨在为接口中的方法定义默认行为，这样即可在不修改实现类的情况下直接添加新功能。</li></ul></li><li><strong>静态成员（静态变量和静态方法）在 Java 中有什么特性？它们与实例成员有何不同？</strong><ul><li>静态成员与实例成员的不同就在于，静态成员属于类，而实例成员属于实例对象。静态成员在进行类加载的时候便会为其分配内存，而实例成员则需要在创建一个对象时才会对齐进行初始化和分配内存。</li></ul></li></ol><h1>引用</h1><h1></h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/2262089">百度百科：面向对象</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>来自于GPT老师<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>[<a href="https://pdai.tech/md/java/basic/java-basic-oop.html">Java 全栈知识体系: 面向对象</a>]<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>面向对象</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java学习 - JVM, JDK, JRE</title>
    <link href="/2024/11/24/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20JVM,%20JDK,%20JRE/"/>
    <url>/2024/11/24/Java%E5%AD%A6%E4%B9%A0/Java%E5%AD%A6%E4%B9%A0%20-%20JVM,%20JDK,%20JRE/</url>
    
    <content type="html"><![CDATA[<h1>Java SE vs Java EE</h1><p>简单来说，对比于Java，Java SE是Java的基础版本，包括了支持Java变成语言的基本功能和标准库，比如集合框架，IO，网络，并发等等。Java SE 适合用于小型或单机的应用程序，亦或者是控制台应用程序和工具（自动化脚本等）。而Java EE则是面向于开发复杂的企业级分布式应用，提供了面向企业级开发的扩展框架和API，比如Web服务、EJB、JPA等。Java EE适合用于企业级分布式应用，适用于具有多层架构系统和高并发，高可用性需求的大型应用程序。</p><p>由此，显然可以看出，Java EE对比Java SE是一个复杂得多的Java开发框架，因此，Java SE的应用场景和部署，配置难度对比起Java EE都简单许多。</p><h1>JVM vs JDK vs JRE</h1><p>从包含的角度来看，可以看成</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mi>V</mi><mi>M</mi><mo>⊂</mo><mi>J</mi><mi>R</mi><mi>E</mi><mo>⊂</mo><mi>J</mi><mi>D</mi><mi>K</mi></mrow><annotation encoding="application/x-tex">JVM \subset JRE \sub JDK</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal" style="margin-right:0.05764em;">RE</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal" style="margin-right:0.07153em;">DK</span></span></span></span></span></p><p><strong>JVM (Java Virtual Machine)</strong>， 顾名思义，就是Java虚拟机。JVM是实现让Java程序真正做到&quot;Write Once, Run Everywhere&quot;的功臣，其可以针对不同系统，使用相同的字节码和不同的实现方法，以得到相同的结果。</p><p><strong>JRE (Java RunTime Environment)</strong>， 顾名思义，也就是Java运行环境。其中显然包含了虚拟机，也包含了一系列基本的内置类库，用与基本运行Java程序所需的环境和类库。</p><p><strong>JDK (Java Development Kit)</strong>，顾名思义，也就是Java开发工具包，其中包含了JRE和JVM，并能够创建和编译Java程序(javac)。JDK拥有更多额外的工具，比如javadoc（文档生成器）、jdb（调试器）、jconsole（监控工具）、javap（反编译工具）等<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Java Guide: 基础常见面试题总结（上）](https://javaguide.cn/java/basis/java-basic-questions-01.html#jvm-vs-jdk-vs-jre)">[2]</span></a></sup>。</p><h1>优化一下Java运行速度吧！</h1><p>Java程序的运行逻辑基本上可以理解为：</p><pre><code class=" mermaid">graph LRc1[编写.java文件] --javac编译--&gt; c2[生成.class 字节码文件]c2 --JVM解释器&amp;JIT--&gt; c3[机器码]c3 --&gt; 运行程序</code></pre><p>在将.class文件转化为机器码的过程中，JVM类加载器首先会加载.class文件,然后通过解释器逐行解释执行。可以看出，这样子会比较慢。由于有些代码块会经常被调用，因此，不难想到可以将这些经常被用到的代码块的机器码保存下来，以节省大量的时间，这看起来就像是一种缓存的机制。</p><p>综上，Java引进了名为**JIT (Just In Time Compilation)**的编译器，使其在程序运行时进行动态的编译。其核心逻辑是，对于热点代码块，JIT会在完成第一次编译后将对应的机器码保存下来，以供下次直接使用。这时候我想到了一个问题：<strong>对于一个庞大的系统来说，JIT所带来的缓存量也会很大，也许会对内存带来很大的压力。我们应该如何处理这个问题？</strong></p><h2 id="JVM如何管理JIT缓存的内存-sup-id-fnref-1-class-footnote-ref-a-href-fn-1-rel-footnote-span-class-hint-top-hint-rounded-aria-label-来自于GPT老师-1-span-a-sup">JVM如何管理JIT缓存的内存<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="来自于GPT老师">[1]</span></a></sup></h2><p>JVM 使用以下机制来管理 JIT 编译生成的本地代码及其缓存：</p><ol><li><strong>代码缓存区（Code Cache）：</strong><ul><li>JVM 在内存中分配一个固定大小的区域，用于存储 JIT 编译后的本地机器码。</li><li>代码缓存有容量限制，当缓存满时，JVM 会自动清理较老或较少使用的编译代码，以腾出空间给新的热点代码。</li></ul></li><li><strong>分层编译（Tiered Compilation）：</strong><ul><li>JVM 会分阶段优化代码，减少不必要的内存占用。<ul><li>初始阶段：使用 C1 编译器快速生成基本的本地代码，占用内存少但优化程度较低。</li><li>热点阶段：使用 C2 编译器对高频代码进行深度优化，占用更多内存，但执行效率更高。</li></ul></li><li>如果代码热点不再频繁使用，JVM 可能会将其标记为可清理对象。</li></ul></li><li><strong>垃圾回收（GC）与代码缓存清理：</strong><ul><li>JVM 的垃圾回收机制不仅负责清理堆内存，还可以清理代码缓存中的无用代码。</li><li>无效或不再使用的 JIT 编译代码会被标记并清理，以释放内存。</li></ul></li></ol><p>对于代码缓存，JVM提供了一些参数用来调整缓存区域的大小，或者是将代码块识别为热点代码所需的阈值:</p><ul><li><code>-XX:InitialCodeCacheSize</code>: 代码缓存的初始大小</li><li><code>-XX:ReservedCodeCacheSize</code>: 代码缓存的最大大小</li><li><code>-XX:CompileThreshold</code>: 将代码识别为热点代码所需的调用次数阈值</li></ul><h2 id="Java包装类的缓存">Java包装类的缓存</h2><p><strong>包装类</strong>是对Java中基本类型的封装。一般来说，包装类的创建<code>.valueOf(...)</code>会占用内存，而对于一些常用的、小范围的数值（例如 0 到 127 的 <code>Integer</code>），频繁创建和销毁对象会导致较大的内存浪费。因此，在JDK5中引入了一个缓存机制，其会在类初始化时，提前创建好会被频繁使用的包装类对象。这种机制常见于 <code>Integer</code>、<code>Byte</code>、<code>Short</code>、<code>Long</code> 和 <code>Character</code> 等包装类，目的是为了优化内存的使用并提高性能。</p><p><strong>注意：在构造函数中，不会使用缓存机制，比如：</strong><code>Integer a = new Integer(100);</code></p><p><strong>自动装箱的过程会使用缓存，因为其底层代码是调用了封装类的</strong><code>valueOf()</code><strong>这个方法</strong>。</p><h1>参考资料</h1><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>来自于GPT老师<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://javaguide.cn/java/basis/java-basic-questions-01.html#jvm-vs-jdk-vs-jre">Java Guide: 基础常见面试题总结（上）</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>JVM</tag>
      
      <tag>JDK</tag>
      
      <tag>JRE</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
